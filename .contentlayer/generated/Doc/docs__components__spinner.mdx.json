{
  "title": "Spinner",
  "description": "Spinner express an unspecified wait time or display the length of a process.",
  "body": {
    "raw": "\nimport {spinnerContent} from \"@/content/components/spinner\";\n\n# Spinner\n\nSpinner express an unspecified wait time or display the length of a process.\n\n<ComponentLinks component=\"spinner\" rscCompatible />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx heroui-cli@latest add spinner\",\n    npm: \"npm install @heroui/spinner\",\n    yarn: \"yarn add @heroui/spinner\",\n    pnpm: \"pnpm add @heroui/spinner\",\n    bun: \"bun add @heroui/spinner\"\n  }}\n/>\n\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Spinner} from \"@heroui/react\";',\n    individual: 'import {Spinner} from \"@heroui/spinner\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={spinnerContent.usage} />\n\n> **Note**: Spinner adds `Loading` as `aria-label` by default. This is required for accessibility. You can change it by passing a `label` or `aria-label` prop.\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={spinnerContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={spinnerContent.colors} />\n\n### With Label\n\n<CodeDemo title=\"With Label\" files={spinnerContent.label} />\n\n### Label colors\n\n<CodeDemo title=\"Label colors\" files={spinnerContent.labelColors} />\n\n### Variants\n\n<CodeDemo title=\"Variants\" files={spinnerContent.variants} />\n\n## Slots\n\n- **base**: The base slot of the spinner, it wraps the circles and the label.\n- **wrapper**: The wrapper of the circles.\n- **circle1**: The first circle of the spinner component. (Effective only when variant is `default` or `gradient`)\n- **circle2**: The second circle of the spinner component. (Effective only when variant is `default` or `gradient`)\n- **dots**: Dots of the spinner component. (Effective only when variant is `wave` or `dots`)\n- **spinnerBars**: Bars of the spinner component. (Effective only when variant is `spinner`)\n- **label**: The label content.\n\n<Spacer y={4} />\n\n## API\n\n### Spinner Props\n\n<APITable\n  data={[\n    {\n      attribute: \"label\",\n      type: \"string\",\n      description: \"The content to display as the label.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"size\", \n      type: \"sm | md | lg\",\n      description: \"The size of the spinner circles.\",\n      default: \"md\"\n    },\n    {\n      attribute: \"color\",\n      type: \"default | primary | secondary | success | warning | danger\",\n      description: \"The color of the spinner circles.\",\n      default: \"primary\"\n    },\n    {\n      attribute: \"variant\",\n      type: \"default | simple | gradient | wave | dots | spinner\",\n      description: \"The variant of the spinner\",\n      default: \"default\"\n    },\n    {\n      attribute: \"labelColor\",\n      type: \"default | primary | secondary | success | warning | danger\", \n      description: \"The color of the label.\",\n      default: \"default\"\n    },\n    {\n      attribute: \"classNames\",\n      type: \"Partial<Record<'base' | 'wrapper' | 'circle1' | 'circle2' | 'dots' | 'spinnerBars' | 'label', string>>\",\n      description: \"Allows to set custom class names for the spinner slots.\",\n      default: \"-\"\n    }\n  ]}\n/>\n",
    "code": "var Component=(()=>{var k=Object.create;var s=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var E=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),M=(n,e)=>{for(var t in e)s(n,t,{get:e[t],enumerable:!0})},h=(n,e,t,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of P(e))!D.call(n,i)&&i!==t&&s(n,i,{get:()=>e[i],enumerable:!(a=I(e,i))||a.enumerable});return n};var q=(n,e,t)=>(t=n!=null?k(_(n)):{},h(e||!n||!n.__esModule?s(t,\"default\",{value:n,enumerable:!0}):t,n)),W=n=>h(s({},\"__esModule\",{value:!0}),n);var u=E((ee,m)=>{m.exports=_jsx_runtime});var Z={};M(Z,{default:()=>L,frontmatter:()=>Q});var r=q(u());var b=`import {Spinner} from \"@heroui/react\";\n\nexport default function App() {\n  return <Spinner />;\n}\n`;var F={\"/App.jsx\":b},g={...F};var x=`import {Spinner} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Spinner size=\"sm\" />\n      <Spinner size=\"md\" />\n      <Spinner size=\"lg\" />\n    </div>\n  );\n}\n`;var U={\"/App.jsx\":x},S={...U};var y=`import {Spinner} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Spinner color=\"default\" />\n      <Spinner color=\"primary\" />\n      <Spinner color=\"secondary\" />\n      <Spinner color=\"success\" />\n      <Spinner color=\"warning\" />\n      <Spinner color=\"danger\" />\n    </div>\n  );\n}\n`;var X={\"/App.jsx\":y},v={...X};var w=`import {Spinner} from \"@heroui/react\";\n\nexport default function App() {\n  return <Spinner color=\"warning\" label=\"Loading...\" />;\n}\n`;var Y={\"/App.jsx\":w},A={...Y};var C=`import {Spinner} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Spinner color=\"default\" label=\"Default\" labelColor=\"foreground\" />\n      <Spinner color=\"primary\" label=\"Primary\" labelColor=\"primary\" />\n      <Spinner color=\"secondary\" label=\"Secondary\" labelColor=\"secondary\" />\n      <Spinner color=\"success\" label=\"Success\" labelColor=\"success\" />\n      <Spinner color=\"warning\" label=\"Warning\" labelColor=\"warning\" />\n      <Spinner color=\"danger\" label=\"Danger\" labelColor=\"danger\" />\n    </div>\n  );\n}\n`;var J={\"/App.jsx\":C},T={...J};var j=`import {Spinner} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap items-end gap-8\">\n      <Spinner classNames={{label: \"text-foreground mt-4\"}} label=\"default\" variant=\"default\" />\n      <Spinner classNames={{label: \"text-foreground mt-4\"}} label=\"simple\" variant=\"simple\" />\n      <Spinner classNames={{label: \"text-foreground mt-4\"}} label=\"gradient\" variant=\"gradient\" />\n      <Spinner classNames={{label: \"text-foreground mt-4\"}} label=\"spinner\" variant=\"spinner\" />\n      <Spinner classNames={{label: \"text-foreground mt-4\"}} label=\"wave\" variant=\"wave\" />\n      <Spinner classNames={{label: \"text-foreground mt-4\"}} label=\"dots\" variant=\"dots\" />\n    </div>\n  );\n}\n`;var O={\"/App.jsx\":j},N={...O};var o={usage:g,sizes:S,colors:v,label:A,labelColors:T,variants:N};var Q={title:\"Spinner\",description:\"Spinner express an unspecified wait time or display the length of a process.\"};function z(n){let e={blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",ul:\"ul\",...n.components},{APITable:t,CarbonAd:a,CodeDemo:i,ComponentLinks:p,ImportTabs:c,PackageManagers:d,Spacer:f}=e;return t||l(\"APITable\",!0),a||l(\"CarbonAd\",!0),i||l(\"CodeDemo\",!0),p||l(\"ComponentLinks\",!0),c||l(\"ImportTabs\",!0),d||l(\"PackageManagers\",!0),f||l(\"Spacer\",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:\"spinner\",children:\"Spinner\"}),`\n`,(0,r.jsx)(e.p,{children:\"Spinner express an unspecified wait time or display the length of a process.\"}),`\n`,(0,r.jsx)(p,{component:\"spinner\",rscCompatible:!0}),`\n`,(0,r.jsx)(e.hr,{}),`\n`,(0,r.jsx)(a,{}),`\n`,(0,r.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,r.jsx)(d,{showGlobalInstallWarning:!0,commands:{cli:\"npx heroui-cli@latest add spinner\",npm:\"npm install @heroui/spinner\",yarn:\"yarn add @heroui/spinner\",pnpm:\"pnpm add @heroui/spinner\",bun:\"bun add @heroui/spinner\"}}),`\n`,(0,r.jsx)(e.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,r.jsx)(c,{commands:{main:'import {Spinner} from \"@heroui/react\";',individual:'import {Spinner} from \"@heroui/spinner\";'}}),`\n`,(0,r.jsx)(e.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,r.jsx)(i,{title:\"Usage\",files:o.usage}),`\n`,(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:\"Note\"}),\": Spinner adds \",(0,r.jsx)(e.code,{children:\"Loading\"}),\" as \",(0,r.jsx)(e.code,{children:\"aria-label\"}),\" by default. This is required for accessibility. You can change it by passing a \",(0,r.jsx)(e.code,{children:\"label\"}),\" or \",(0,r.jsx)(e.code,{children:\"aria-label\"}),\" prop.\"]}),`\n`]}),`\n`,(0,r.jsx)(e.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,r.jsx)(i,{title:\"Sizes\",files:o.sizes}),`\n`,(0,r.jsx)(e.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,r.jsx)(i,{title:\"Colors\",files:o.colors}),`\n`,(0,r.jsx)(e.h3,{id:\"with-label\",children:\"With Label\"}),`\n`,(0,r.jsx)(i,{title:\"With Label\",files:o.label}),`\n`,(0,r.jsx)(e.h3,{id:\"label-colors\",children:\"Label colors\"}),`\n`,(0,r.jsx)(i,{title:\"Label colors\",files:o.labelColors}),`\n`,(0,r.jsx)(e.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,r.jsx)(i,{title:\"Variants\",files:o.variants}),`\n`,(0,r.jsx)(e.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"base\"}),\": The base slot of the spinner, it wraps the circles and the label.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"wrapper\"}),\": The wrapper of the circles.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"circle1\"}),\": The first circle of the spinner component. (Effective only when variant is \",(0,r.jsx)(e.code,{children:\"default\"}),\" or \",(0,r.jsx)(e.code,{children:\"gradient\"}),\")\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"circle2\"}),\": The second circle of the spinner component. (Effective only when variant is \",(0,r.jsx)(e.code,{children:\"default\"}),\" or \",(0,r.jsx)(e.code,{children:\"gradient\"}),\")\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"dots\"}),\": Dots of the spinner component. (Effective only when variant is \",(0,r.jsx)(e.code,{children:\"wave\"}),\" or \",(0,r.jsx)(e.code,{children:\"dots\"}),\")\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"spinnerBars\"}),\": Bars of the spinner component. (Effective only when variant is \",(0,r.jsx)(e.code,{children:\"spinner\"}),\")\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"label\"}),\": The label content.\"]}),`\n`]}),`\n`,(0,r.jsx)(f,{y:4}),`\n`,(0,r.jsx)(e.h2,{id:\"api\",children:\"API\"}),`\n`,(0,r.jsx)(e.h3,{id:\"spinner-props\",children:\"Spinner Props\"}),`\n`,(0,r.jsx)(t,{data:[{attribute:\"label\",type:\"string\",description:\"The content to display as the label.\",default:\"-\"},{attribute:\"size\",type:\"sm | md | lg\",description:\"The size of the spinner circles.\",default:\"md\"},{attribute:\"color\",type:\"default | primary | secondary | success | warning | danger\",description:\"The color of the spinner circles.\",default:\"primary\"},{attribute:\"variant\",type:\"default | simple | gradient | wave | dots | spinner\",description:\"The variant of the spinner\",default:\"default\"},{attribute:\"labelColor\",type:\"default | primary | secondary | success | warning | danger\",description:\"The color of the label.\",default:\"default\"},{attribute:\"classNames\",type:\"Partial<Record<'base' | 'wrapper' | 'circle1' | 'circle2' | 'dots' | 'spinnerBars' | 'label', string>>\",description:\"Allows to set custom class names for the spinner slots.\",default:\"-\"}]})]})}function L(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(z,{...n})}):z(n)}function l(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return W(Z);})();\n;return Component;"
  },
  "_id": "docs/components/spinner.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/spinner.mdx",
    "sourceFileName": "spinner.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/spinner"
  },
  "type": "Doc",
  "slug": "/docs/components/spinner",
  "slugAsParams": "components/spinner",
  "url": "/docs/components/spinner"
}