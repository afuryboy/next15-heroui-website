{
  "title": "Progress",
  "description": "The Progress component allows you to view the progress of any activity.",
  "body": {
    "raw": "\nimport {progressContent} from \"@/content/components/progress\";\n\n# Progress\n\nThe Progress component allows you to view the progress of any activity.\n\n<ComponentLinks component=\"progress\" reactAriaHook=\"useProgressBar\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx heroui-cli@latest add progress\",\n    npm: \"npm install @heroui/progress\",\n    yarn: \"yarn add @heroui/progress\",\n    pnpm: \"pnpm add @heroui/progress\",\n    bun: \"bun add @heroui/progress\"\n  }}\n/>\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Progress} from \"@heroui/react\";',\n    individual: 'import {Progress} from \"@heroui/progress\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={progressContent.usage} />\n\n> **Note**: Make sure to pass the `aria-label` prop when the `label` prop is not provided. This is required for accessibility.\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={progressContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={progressContent.colors} />\n\n### Indeterminate\n\nYou can use the `isIndeterminate` prop to display an indeterminate progress bar.\nThis is useful when you don't know how long an operation will take.\n\n<CodeDemo title=\"Indeterminate\" highlightedLines={7} files={progressContent.indeterminate} />\n\n### Striped\n\n<CodeDemo title=\"Striped\" highlightedLines={6} files={progressContent.striped} />\n\n### With Label\n\n<CodeDemo title=\"With Label\" files={progressContent.label} />\n\n> **Note**: If you pass the `label` prop you don't need to pass `aria-label` prop anymore.\n\n### With Value\n\n<CodeDemo title=\"With Value\" files={progressContent.value} />\n\n### Value Formatting\n\nValues are formatted as a percentage by default, but this can be modified by using the\n`formatOptions` prop to specify a different format. `formatOptions` is compatible with the\noption parameter of [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat) and is applied based on the current locale.\n\n<CodeDemo title=\"Value Formatting\" files={progressContent.valueFormatting} highlightedLines=\"10\" />\n\n## Slots\n\n- **base**: The base slot of the progress, it is the main container.\n- **labelWrapper**: The label and value label wrapper.\n- **label**: The label of the progress.\n- **value**: The value label of the progress.\n- **track**: The track is the background bar of the progress.\n- **indicator**: The indicator is the bar that is filled according to the `value`.\n\n### Custom Styles\n\nYou can customize the `Progress` component by passing custom Tailwind CSS classes to the component slots.\n\n<CodeDemo title=\"Custom Styles\" files={progressContent.customStyles} highlightedLines=\"9-13\" />\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`CircularProgress` has the following attributes on the `base` element:\n\n- **data-indeterminate**:\n  Indicates whether the progress is indeterminate.\n- **data-disabled**:\n  Indicates whether the progress is disabled. Based on `isDisabled` prop.\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Exposed to assistive technology as a progress bar via ARIA.\n- Labeling support for accessibility.\n- Internationalized number formatting as a percentage or value.\n- Determinate and indeterminate progress support.\n- Exposes the `aria-valuenow`, `aria-valuemin`, `aria-valuemax` and `aria-valuetext` attributes.\n\n<Spacer y={4} />\n\n## API\n\n### Progress Props\n\n<APITable\n  data={[\n    {\n      attribute: \"label\",\n      type: \"ReactNode\",\n      description: \"The content to display as the label.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"size\",\n      type: \"sm | md | lg\",\n      description: \"The size of the indicator.\",\n      default: \"md\"\n    },\n    {\n      attribute: \"color\",\n      type: \"default | primary | secondary | success | warning | danger\",\n      description: \"The color of the indicator.\",\n      default: \"primary\"\n    },\n    {\n      attribute: \"radius\",\n      type: \"none | sm | md | lg | full\",\n      description: \"The progress border radius.\",\n      default: \"full\"\n    },\n    {\n      attribute: \"value\",\n      type: \"number\",\n      description: \"The current value (controlled).\",\n      default: \"-\"\n    },\n    {\n      attribute: \"valueLabel\",\n      type: \"ReactNode\",\n      description: \"The content to display as the value's label (e.g. 1 of 4).\",\n      default: \"-\"\n    },\n    {\n      attribute: \"minValue\",\n      type: \"number\",\n      description: \"The smallest value allowed for the input.\",\n      default: \"0\"\n    },\n    {\n      attribute: \"maxValue\",\n      type: \"number\",\n      description: \"The largest value allowed for the input.\",\n      default: \"100\"\n    },\n    {\n      attribute: \"formatOptions\",\n      type: \"Intl.NumberFormat\",\n      description: \"The options to format the value.\",\n      default: \"{style: 'percent'}\"\n    },\n    {\n      attribute: \"isIndeterminate\",\n      type: \"boolean\",\n      description: \"Whether the progress is indeterminate.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isStriped\",\n      type: \"boolean\",\n      description: \"Whether the progress is striped.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"showValueLabel\",\n      type: \"boolean\",\n      description: \"Whether to show the value label.\",\n      default: \"true\"\n    },\n    {\n      attribute: \"isDisabled\",\n      type: \"boolean\",\n      description: \"Whether the progress is disabled.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"disableAnimation\",\n      type: \"boolean\",\n      description: \"Whether to disable the animation.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"classNames\",\n      type: \"Partial<Record<'base' | 'labelWrapper' | 'label' | 'track' | 'value' | 'indicator', string>>\",\n      description: \"Allows to set custom class names for the progress slots.\",\n      default: \"-\"\n    }\n  ]}\n/>\n",
    "code": "var Component=(()=>{var F=Object.create;var d=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var M=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var E=(t,r)=>()=>(r||t((r={exports:{}}).exports,r),r.exports),O=(t,r)=>{for(var a in r)d(t,a,{get:r[a],enumerable:!0})},h=(t,r,a,s)=>{if(r&&typeof r==\"object\"||typeof r==\"function\")for(let o of _(r))!q.call(t,o)&&o!==a&&d(t,o,{get:()=>r[o],enumerable:!(s=R(r,o))||s.enumerable});return t};var U=(t,r,a)=>(a=t!=null?F(M(t)):{},h(r||!t||!t.__esModule?d(a,\"default\",{value:t,enumerable:!0}):a,t)),B=t=>h(d({},\"__esModule\",{value:!0}),t);var f=E((ue,m)=>{m.exports=_jsx_runtime});var ce={};O(ce,{default:()=>D,frontmatter:()=>de});var e=U(f());var g=`import {Progress} from \"@heroui/react\";\n\nexport default function App() {\n  return <Progress aria-label=\"Loading...\" className=\"max-w-md\" value={60} />;\n}\n`;var X={\"/App.jsx\":g},b={...X};var v=`import {Progress} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col gap-6 w-full max-w-md\">\n      <Progress aria-label=\"Loading...\" size=\"sm\" value={30} />\n      <Progress aria-label=\"Loading...\" size=\"md\" value={40} />\n      <Progress aria-label=\"Loading...\" size=\"lg\" value={50} />\n    </div>\n  );\n}\n`;var H={\"/App.jsx\":v},x={...H};var y=`import {Progress} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col gap-6 w-full max-w-md\">\n      <Progress aria-label=\"Loading...\" color=\"default\" value={70} />\n      <Progress aria-label=\"Loading...\" color=\"primary\" value={70} />\n      <Progress aria-label=\"Loading...\" color=\"secondary\" value={70} />\n      <Progress aria-label=\"Loading...\" color=\"success\" value={70} />\n      <Progress aria-label=\"Loading...\" color=\"warning\" value={70} />\n      <Progress aria-label=\"Loading...\" color=\"danger\" value={70} />\n    </div>\n  );\n}\n`;var K={\"/App.jsx\":y},w={...K};var P=`import {Progress} from \"@heroui/react\";\n\nexport default function App() {\n  return <Progress isIndeterminate aria-label=\"Loading...\" className=\"max-w-md\" size=\"sm\" />;\n}\n`;var Z={\"/App.jsx\":P},A={...Z};var L=`import {Progress} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Progress isStriped aria-label=\"Loading...\" className=\"max-w-md\" color=\"secondary\" value={60} />\n  );\n}\n`;var ee={\"/App.jsx\":L},T={...ee};var I=`import {Progress} from \"@heroui/react\";\n\nexport default function App() {\n  return <Progress className=\"max-w-md\" label=\"Loading...\" value={55} />;\n}\n`;var te={\"/App.jsx\":I},k={...te};var S=`import {Progress} from \"@heroui/react\";\n\nexport default function App() {\n  const [value, setValue] = React.useState(0);\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setValue((v) => (v >= 100 ? 0 : v + 10));\n    }, 500);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Progress\n      aria-label=\"Downloading...\"\n      className=\"max-w-md\"\n      color=\"success\"\n      showValueLabel={true}\n      size=\"md\"\n      value={value}\n    />\n  );\n}\n`;var ae={\"/App.jsx\":S},z={...ae};var N=`import {Progress} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Progress\n      className=\"max-w-md\"\n      color=\"warning\"\n      formatOptions={{style: \"currency\", currency: \"ARS\"}}\n      label=\"Monthly expenses\"\n      maxValue={10000}\n      showValueLabel={true}\n      size=\"sm\"\n      value={4000}\n    />\n  );\n}\n`;var ne={\"/App.jsx\":N},j={...ne};var C=`import {Progress} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Progress\n      classNames={{\n        base: \"max-w-md\",\n        track: \"drop-shadow-md border border-default\",\n        indicator: \"bg-gradient-to-r from-pink-500 to-yellow-500\",\n        label: \"tracking-wider font-medium text-default-600\",\n        value: \"text-foreground/60\",\n      }}\n      label=\"Lose weight\"\n      radius=\"sm\"\n      showValueLabel={true}\n      size=\"sm\"\n      value={65}\n    />\n  );\n}\n`;var le={\"/App.jsx\":C},V={...le};var i={usage:b,sizes:x,colors:w,indeterminate:A,striped:T,label:k,value:z,valueFormatting:j,customStyles:V};var de={title:\"Progress\",description:\"The Progress component allows you to view the progress of any activity.\"};function W(t){let r={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",ul:\"ul\",...t.components},{APITable:a,CarbonAd:s,CodeDemo:o,ComponentLinks:c,ImportTabs:p,PackageManagers:u,Spacer:l}=r;return a||n(\"APITable\",!0),s||n(\"CarbonAd\",!0),o||n(\"CodeDemo\",!0),c||n(\"ComponentLinks\",!0),p||n(\"ImportTabs\",!0),u||n(\"PackageManagers\",!0),l||n(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(r.h1,{id:\"progress\",children:\"Progress\"}),`\n`,(0,e.jsx)(r.p,{children:\"The Progress component allows you to view the progress of any activity.\"}),`\n`,(0,e.jsx)(c,{component:\"progress\",reactAriaHook:\"useProgressBar\"}),`\n`,(0,e.jsx)(r.hr,{}),`\n`,(0,e.jsx)(s,{}),`\n`,(0,e.jsx)(r.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(u,{showGlobalInstallWarning:!0,commands:{cli:\"npx heroui-cli@latest add progress\",npm:\"npm install @heroui/progress\",yarn:\"yarn add @heroui/progress\",pnpm:\"pnpm add @heroui/progress\",bun:\"bun add @heroui/progress\"}}),`\n`,(0,e.jsx)(r.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(p,{commands:{main:'import {Progress} from \"@heroui/react\";',individual:'import {Progress} from \"@heroui/progress\";'}}),`\n`,(0,e.jsx)(r.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(o,{title:\"Usage\",files:i.usage}),`\n`,(0,e.jsxs)(r.blockquote,{children:[`\n`,(0,e.jsxs)(r.p,{children:[(0,e.jsx)(r.strong,{children:\"Note\"}),\": Make sure to pass the \",(0,e.jsx)(r.code,{children:\"aria-label\"}),\" prop when the \",(0,e.jsx)(r.code,{children:\"label\"}),\" prop is not provided. This is required for accessibility.\"]}),`\n`]}),`\n`,(0,e.jsx)(r.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,e.jsx)(o,{title:\"Sizes\",files:i.sizes}),`\n`,(0,e.jsx)(r.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,e.jsx)(o,{title:\"Colors\",files:i.colors}),`\n`,(0,e.jsx)(r.h3,{id:\"indeterminate\",children:\"Indeterminate\"}),`\n`,(0,e.jsxs)(r.p,{children:[\"You can use the \",(0,e.jsx)(r.code,{children:\"isIndeterminate\"}),` prop to display an indeterminate progress bar.\nThis is useful when you don't know how long an operation will take.`]}),`\n`,(0,e.jsx)(o,{title:\"Indeterminate\",highlightedLines:7,files:i.indeterminate}),`\n`,(0,e.jsx)(r.h3,{id:\"striped\",children:\"Striped\"}),`\n`,(0,e.jsx)(o,{title:\"Striped\",highlightedLines:6,files:i.striped}),`\n`,(0,e.jsx)(r.h3,{id:\"with-label\",children:\"With Label\"}),`\n`,(0,e.jsx)(o,{title:\"With Label\",files:i.label}),`\n`,(0,e.jsxs)(r.blockquote,{children:[`\n`,(0,e.jsxs)(r.p,{children:[(0,e.jsx)(r.strong,{children:\"Note\"}),\": If you pass the \",(0,e.jsx)(r.code,{children:\"label\"}),\" prop you don't need to pass \",(0,e.jsx)(r.code,{children:\"aria-label\"}),\" prop anymore.\"]}),`\n`]}),`\n`,(0,e.jsx)(r.h3,{id:\"with-value\",children:\"With Value\"}),`\n`,(0,e.jsx)(o,{title:\"With Value\",files:i.value}),`\n`,(0,e.jsx)(r.h3,{id:\"value-formatting\",children:\"Value Formatting\"}),`\n`,(0,e.jsxs)(r.p,{children:[`Values are formatted as a percentage by default, but this can be modified by using the\n`,(0,e.jsx)(r.code,{children:\"formatOptions\"}),\" prop to specify a different format. \",(0,e.jsx)(r.code,{children:\"formatOptions\"}),` is compatible with the\noption parameter of `,(0,e.jsx)(r.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\",children:\"Intl.NumberFormat\"}),\" and is applied based on the current locale.\"]}),`\n`,(0,e.jsx)(o,{title:\"Value Formatting\",files:i.valueFormatting,highlightedLines:\"10\"}),`\n`,(0,e.jsx)(r.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(r.ul,{children:[`\n`,(0,e.jsxs)(r.li,{children:[(0,e.jsx)(r.strong,{children:\"base\"}),\": The base slot of the progress, it is the main container.\"]}),`\n`,(0,e.jsxs)(r.li,{children:[(0,e.jsx)(r.strong,{children:\"labelWrapper\"}),\": The label and value label wrapper.\"]}),`\n`,(0,e.jsxs)(r.li,{children:[(0,e.jsx)(r.strong,{children:\"label\"}),\": The label of the progress.\"]}),`\n`,(0,e.jsxs)(r.li,{children:[(0,e.jsx)(r.strong,{children:\"value\"}),\": The value label of the progress.\"]}),`\n`,(0,e.jsxs)(r.li,{children:[(0,e.jsx)(r.strong,{children:\"track\"}),\": The track is the background bar of the progress.\"]}),`\n`,(0,e.jsxs)(r.li,{children:[(0,e.jsx)(r.strong,{children:\"indicator\"}),\": The indicator is the bar that is filled according to the \",(0,e.jsx)(r.code,{children:\"value\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(r.h3,{id:\"custom-styles\",children:\"Custom Styles\"}),`\n`,(0,e.jsxs)(r.p,{children:[\"You can customize the \",(0,e.jsx)(r.code,{children:\"Progress\"}),\" component by passing custom Tailwind CSS classes to the component slots.\"]}),`\n`,(0,e.jsx)(o,{title:\"Custom Styles\",files:i.customStyles,highlightedLines:\"9-13\"}),`\n`,(0,e.jsx)(l,{y:4}),`\n`,(0,e.jsx)(r.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(r.p,{children:[(0,e.jsx)(r.code,{children:\"CircularProgress\"}),\" has the following attributes on the \",(0,e.jsx)(r.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(r.ul,{children:[`\n`,(0,e.jsxs)(r.li,{children:[(0,e.jsx)(r.strong,{children:\"data-indeterminate\"}),`:\nIndicates whether the progress is indeterminate.`]}),`\n`,(0,e.jsxs)(r.li,{children:[(0,e.jsx)(r.strong,{children:\"data-disabled\"}),`:\nIndicates whether the progress is disabled. Based on `,(0,e.jsx)(r.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`]}),`\n`,(0,e.jsx)(l,{y:4}),`\n`,(0,e.jsx)(r.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(r.ul,{children:[`\n`,(0,e.jsx)(r.li,{children:\"Exposed to assistive technology as a progress bar via ARIA.\"}),`\n`,(0,e.jsx)(r.li,{children:\"Labeling support for accessibility.\"}),`\n`,(0,e.jsx)(r.li,{children:\"Internationalized number formatting as a percentage or value.\"}),`\n`,(0,e.jsx)(r.li,{children:\"Determinate and indeterminate progress support.\"}),`\n`,(0,e.jsxs)(r.li,{children:[\"Exposes the \",(0,e.jsx)(r.code,{children:\"aria-valuenow\"}),\", \",(0,e.jsx)(r.code,{children:\"aria-valuemin\"}),\", \",(0,e.jsx)(r.code,{children:\"aria-valuemax\"}),\" and \",(0,e.jsx)(r.code,{children:\"aria-valuetext\"}),\" attributes.\"]}),`\n`]}),`\n`,(0,e.jsx)(l,{y:4}),`\n`,(0,e.jsx)(r.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(r.h3,{id:\"progress-props\",children:\"Progress Props\"}),`\n`,(0,e.jsx)(a,{data:[{attribute:\"label\",type:\"ReactNode\",description:\"The content to display as the label.\",default:\"-\"},{attribute:\"size\",type:\"sm | md | lg\",description:\"The size of the indicator.\",default:\"md\"},{attribute:\"color\",type:\"default | primary | secondary | success | warning | danger\",description:\"The color of the indicator.\",default:\"primary\"},{attribute:\"radius\",type:\"none | sm | md | lg | full\",description:\"The progress border radius.\",default:\"full\"},{attribute:\"value\",type:\"number\",description:\"The current value (controlled).\",default:\"-\"},{attribute:\"valueLabel\",type:\"ReactNode\",description:\"The content to display as the value's label (e.g. 1 of 4).\",default:\"-\"},{attribute:\"minValue\",type:\"number\",description:\"The smallest value allowed for the input.\",default:\"0\"},{attribute:\"maxValue\",type:\"number\",description:\"The largest value allowed for the input.\",default:\"100\"},{attribute:\"formatOptions\",type:\"Intl.NumberFormat\",description:\"The options to format the value.\",default:\"{style: 'percent'}\"},{attribute:\"isIndeterminate\",type:\"boolean\",description:\"Whether the progress is indeterminate.\",default:\"false\"},{attribute:\"isStriped\",type:\"boolean\",description:\"Whether the progress is striped.\",default:\"false\"},{attribute:\"showValueLabel\",type:\"boolean\",description:\"Whether to show the value label.\",default:\"true\"},{attribute:\"isDisabled\",type:\"boolean\",description:\"Whether the progress is disabled.\",default:\"false\"},{attribute:\"disableAnimation\",type:\"boolean\",description:\"Whether to disable the animation.\",default:\"false\"},{attribute:\"classNames\",type:\"Partial<Record<'base' | 'labelWrapper' | 'label' | 'track' | 'value' | 'indicator', string>>\",description:\"Allows to set custom class names for the progress slots.\",default:\"-\"}]})]})}function D(t={}){let{wrapper:r}=t.components||{};return r?(0,e.jsx)(r,{...t,children:(0,e.jsx)(W,{...t})}):W(t)}function n(t,r){throw new Error(\"Expected \"+(r?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return B(ce);})();\n;return Component;"
  },
  "_id": "docs/components/progress.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/progress.mdx",
    "sourceFileName": "progress.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/progress"
  },
  "type": "Doc",
  "slug": "/docs/components/progress",
  "slugAsParams": "components/progress",
  "url": "/docs/components/progress"
}