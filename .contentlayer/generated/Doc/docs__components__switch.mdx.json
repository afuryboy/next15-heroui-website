{
  "title": "Switch",
  "description": "The Switch component is used as an alternative between checked and not checked states.",
  "body": {
    "raw": "\nimport {switchContent} from \"@/content/components/switch\";\n\n# Switch\n\nThe Switch component is used as an alternative between checked and not checked states.\n\n<ComponentLinks component=\"switch\" styles=\"toggle\" reactAriaHook=\"useSwitch\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx heroui-cli@latest add switch\",\n    npm: \"npm install @heroui/switch\",\n    yarn: \"yarn add @heroui/switch\",\n    pnpm: \"pnpm add @heroui/switch\",\n    bun: \"bun add @heroui/switch\"\n  }}\n/>\n\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Switch} from \"@heroui/react\";',\n    individual: 'import {Switch} from \"@heroui/switch\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={switchContent.usage} />\n\n### With Label\n\n<CodeDemo title=\"With Label\" files={switchContent.label} />\n\n### Disabled\n\n<CodeDemo title=\"Disabled\" files={switchContent.disabled} />\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={switchContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={switchContent.colors} />\n\n### With Thumb Icon\n\n<CodeDemo title=\"With Thumb Icon\" files={switchContent.thumbIcon} />\n\n### With Icons\n\nYou can also add icons to start and end of the switch by using `startContent` and `endContent` props.\n\n<CodeDemo title=\"With Icons\" files={switchContent.icons} />\n\n### Controlled\n\n<CodeDemo title=\"Controlled\" files={switchContent.controlled} />\n\n> **Note**: HeroUI `Switch` also supports native events like `onChange`, useful for form libraries\n> such as [Formik](https://formik.org/) and [React Hook Form](https://react-hook-form.com/).\n\n## Slots\n\n- **base**: Base slot for the switch. It is the main wrapper.\n- **wrapper**: The wrapper of the start icon, end icon and thumb.\n- **hiddenInput**: The hidden input element that is used to handle the switch state.\n- **thumb**: The thumb element of the switch. It is the circle element.\n- **label**: The label slot of the switch.\n- **startContent**: The icon slot at the start of the switch.\n- **endContent**: The icon slot at the end of the switch.\n- **thumbIcon**: The icon slot inside the thumb.\n\n### Custom Styles\n\nYou can customize the `Switch` component by passing custom Tailwind CSS classes to the component slots.\n\n<CodeDemo title=\"Custom Styles\" files={switchContent.customStyles} />\n\n### Custom Implementation\n\nIn case you need to customize the switch even further, you can use the `useSwitch` hook to create your own implementation.\n\n<CodeDemo title=\"Custom Implementation\" files={switchContent.customImpl} />\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`Switch` has the following attributes on the `base` element:\n\n- **data-selected**:\n  When the switch is checked. Based on `isSelected` prop.\n- **data-pressed**:\n  When the switch is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html)\n- **data-readonly**:\n  When the switch is readonly. Based on `isReadOnly` prop.\n- **data-hover**:\n  When the switch is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n- **data-focus**:\n  When the switch is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-visible**:\n  When the switch is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-disabled**:\n  When the switch is disabled. Based on `isDisabled` prop.\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Built with a native HTML `<input>` element.\n- Full support for browser features like form autofill.\n- Keyboard focus management and cross browser normalization.\n- Keyboard event support for <Kbd>Tab</Kbd> and <Kbd>Space</Kbd> keys.\n- Labeling support for assistive technology.\n- Exposed as a switch to assistive technology via ARIA\n\n<Spacer y={4} />\n\n## API\n\n### Switch Props\n\n<APITable\n  data={[\n    {\n      attribute: \"children\",\n      type: \"ReactNode\",\n      description: \"The label of the switch.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"value\",\n      type: \"string\",\n      description: \"The value of the input element, used when submitting an HTML form.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"name\",\n      type: \"string\", \n      description: \"The name of the input element, used when submitting an HTML form.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"size\",\n      type: \"sm | md | lg\",\n      description: \"The size of the switch.\",\n      default: \"md\"\n    },\n    {\n      attribute: \"color\",\n      type: \"default | primary | secondary | success | warning | danger\",\n      description: \"The color of the switch.\",\n      default: \"primary\"\n    },\n    {\n      attribute: \"thumbIcon\",\n      type: \"ThumbIconProps\",\n      description: \"The icon to be displayed when the switch is checked.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"startContent\",\n      type: \"ReactNode\",\n      description: \"The icon to be displayed at the start of the switch.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"endContent\", \n      type: \"ReactNode\",\n      description: \"The icon to be displayed at the end of the switch.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"isSelected\",\n      type: \"boolean\",\n      description: \"Whether the element should be selected (controlled).\",\n      default: \"-\"\n    },\n    {\n      attribute: \"defaultSelected\",\n      type: \"boolean\",\n      description: \"Whether the element should be selected (uncontrolled).\",\n      default: \"-\"\n    },\n    {\n      attribute: \"isReadOnly\",\n      type: \"boolean\",\n      description: \"Whether the input can be selected but not changed by the user.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"isDisabled\",\n      type: \"boolean\",\n      description: \"Whether the switch is disabled.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"disableAnimation\",\n      type: \"boolean\",\n      description: \"Whether the animation should be disabled.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"classNames\",\n      type: \"Partial<Record<\\\"base\\\"｜ \\\"wrapper\\\"｜ \\\"thumb\\\"｜ \\\"label\\\" ｜ \\\"startContent\\\" ｜ \\\"endContent\\\" ｜ \\\"thumbIcon\\\" , string>>\",\n      description: \"Allows to set custom class names for the switch slots.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### Switch Events\n\n<APITable\n  data={[\n    {\n      attribute: \"onChange\",\n      type: \"React.ChangeEvent<HTMLInputElement>\",\n      description: \"Handler that is called when the element's selection state changes. You can pull out the new checked state by accessing event.target.checked (boolean).\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onValueChange\",\n      type: \"(isSelected: boolean) => void\",\n      description: \"Handler that is called when the element's selection state changes.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### Types\n\n#### Switch Icon Props\n\n```ts\ntype IconProps = {\n  \"data-checked\": string;\n  width: string;\n  height: string;\n  isSelected: boolean;\n  className: string;\n};\n\ntype CheckboxIconProps = ReactNode | ((props: IconProps) => ReactNode);\n```\n",
    "code": "var Component=(()=>{var F=Object.create;var l=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var U=(o,t)=>()=>(t||o((t={exports:{}}).exports,t),t.exports),Y=(o,t)=>{for(var r in t)l(o,r,{get:t[r],enumerable:!0})},m=(o,t,r,s)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let n of E(t))!q.call(o,n)&&n!==r&&l(o,n,{get:()=>t[n],enumerable:!(s=_(t,n))||s.enumerable});return o};var G=(o,t,r)=>(r=o!=null?F(K(o)):{},m(t||!o||!o.__esModule?l(r,\"default\",{value:o,enumerable:!0}):r,o)),O=o=>m(l({},\"__esModule\",{value:!0}),o);var w=U((xe,f)=>{f.exports=_jsx_runtime});var be={};Y(be,{default:()=>V,frontmatter:()=>ge});var e=G(w());var g=`import {Switch} from \"@heroui/react\";\n\nexport default function App() {\n  return <Switch defaultSelected aria-label=\"Automatic updates\" />;\n}\n`;var J={\"/App.jsx\":g},b={...J};var S=`import {Switch} from \"@heroui/react\";\n\nexport default function App() {\n  return <Switch defaultSelected>Automatic updates</Switch>;\n}\n`;var Z={\"/App.jsx\":S},x={...Z};var y=`import {Switch} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Switch defaultSelected isDisabled>\n      Automatic updates\n    </Switch>\n  );\n}\n`;var ee={\"/App.jsx\":y},v={...ee};var I=`import {Switch} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Switch defaultSelected size=\"sm\">\n        Small\n      </Switch>\n      <Switch defaultSelected size=\"md\">\n        Medium\n      </Switch>\n      <Switch defaultSelected size=\"lg\">\n        Large\n      </Switch>\n    </div>\n  );\n}\n`;var oe={\"/App.jsx\":I},z={...oe};var A=`import {Switch} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Switch defaultSelected color=\"default\">\n        Default\n      </Switch>\n      <Switch defaultSelected color=\"primary\">\n        Primary\n      </Switch>\n      <Switch defaultSelected color=\"secondary\">\n        Secondary\n      </Switch>\n      <Switch defaultSelected color=\"success\">\n        Success\n      </Switch>\n      <Switch defaultSelected color=\"warning\">\n        Warning\n      </Switch>\n      <Switch defaultSelected color=\"danger\">\n        Danger\n      </Switch>\n    </div>\n  );\n}\n`;var re={\"/App.jsx\":A},C={...re};var M=`import {Switch} from \"@heroui/react\";\n\nexport const MoonIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const SunIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <g fill=\"currentColor\">\n        <path d=\"M19 12a7 7 0 11-7-7 7 7 0 017 7z\" />\n        <path d=\"M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z\" />\n      </g>\n    </svg>\n  );\n};\n\nexport default function App() {\n  return (\n    <Switch\n      defaultSelected\n      color=\"secondary\"\n      size=\"lg\"\n      thumbIcon={({isSelected, className}) =>\n        isSelected ? <SunIcon className={className} /> : <MoonIcon className={className} />\n      }\n    >\n      Dark mode\n    </Switch>\n  );\n}\n`;var ae={\"/App.jsx\":M},T={...ae};var k=`import {Switch} from \"@heroui/react\";\n\nexport const MoonIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const SunIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <g fill=\"currentColor\">\n        <path d=\"M19 12a7 7 0 11-7-7 7 7 0 017 7z\" />\n        <path d=\"M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z\" />\n      </g>\n    </svg>\n  );\n};\n\nexport default function App() {\n  return (\n    <Switch\n      defaultSelected\n      color=\"success\"\n      endContent={<MoonIcon />}\n      size=\"lg\"\n      startContent={<SunIcon />}\n    >\n      Dark mode\n    </Switch>\n  );\n}\n`;var ce={\"/App.jsx\":k},P={...ce};var N=`import {Switch} from \"@heroui/react\";\n\nexport default function App() {\n  const [isSelected, setIsSelected] = React.useState(true);\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <Switch isSelected={isSelected} onValueChange={setIsSelected}>\n        Airplane mode\n      </Switch>\n      <p className=\"text-small text-default-500\">Selected: {isSelected ? \"true\" : \"false\"}</p>\n    </div>\n  );\n}\n`;var de={\"/App.jsx\":N},W={...de};var B=`import {Switch, cn} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Switch\n      classNames={{\n        base: cn(\n          \"inline-flex flex-row-reverse w-full max-w-md bg-content1 hover:bg-content2 items-center\",\n          \"justify-between cursor-pointer rounded-lg gap-2 p-4 border-2 border-transparent\",\n          \"data-[selected=true]:border-primary\",\n        ),\n        wrapper: \"p-0 h-4 overflow-visible\",\n        thumb: cn(\n          \"w-6 h-6 border-2 shadow-lg\",\n          \"group-data-[hover=true]:border-primary\",\n          //selected\n          \"group-data-[selected=true]:ms-6\",\n          // pressed\n          \"group-data-[pressed=true]:w-7\",\n          \"group-data-[selected]:group-data-[pressed]:ms-4\",\n        ),\n      }}\n    >\n      <div className=\"flex flex-col gap-1\">\n        <p className=\"text-medium\">Enable early access</p>\n        <p className=\"text-tiny text-default-400\">\n          Get access to new features before they are released.\n        </p>\n      </div>\n    </Switch>\n  );\n}\n`;var pe={\"/App.jsx\":B},H={...pe};var j=`import {VisuallyHidden, useSwitch} from \"@heroui/react\";\n\nexport const MoonIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const SunIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <g fill=\"currentColor\">\n        <path d=\"M19 12a7 7 0 11-7-7 7 7 0 017 7z\" />\n        <path d=\"M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z\" />\n      </g>\n    </svg>\n  );\n};\n\nconst ThemeSwitch = (props) => {\n  const {Component, slots, isSelected, getBaseProps, getInputProps, getWrapperProps} =\n    useSwitch(props);\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <Component {...getBaseProps()}>\n        <VisuallyHidden>\n          <input {...getInputProps()} />\n        </VisuallyHidden>\n        <div\n          {...getWrapperProps()}\n          className={slots.wrapper({\n            class: [\n              \"w-8 h-8\",\n              \"flex items-center justify-center\",\n              \"rounded-lg bg-default-100 hover:bg-default-200\",\n            ],\n          })}\n        >\n          {isSelected ? <SunIcon /> : <MoonIcon />}\n        </div>\n      </Component>\n      <p className=\"text-default-500 select-none\">Lights: {isSelected ? \"on\" : \"off\"}</p>\n    </div>\n  );\n};\n\nexport default function App() {\n  return <ThemeSwitch />;\n}\n`;var R=`import React from \"react\";\nimport {useSwitch, VisuallyHidden, SwitchProps} from \"@heroui/react\";\n\nexport const MoonIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const SunIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <g fill=\"currentColor\">\n        <path d=\"M19 12a7 7 0 11-7-7 7 7 0 017 7z\" />\n        <path d=\"M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z\" />\n      </g>\n    </svg>\n  );\n};\n\nconst ThemeSwitch = (props: SwitchProps) => {\n  const {Component, slots, isSelected, getBaseProps, getInputProps, getWrapperProps} =\n    useSwitch(props);\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <Component {...getBaseProps()}>\n        <VisuallyHidden>\n          <input {...getInputProps()} />\n        </VisuallyHidden>\n        <div\n          {...getWrapperProps()}\n          className={slots.wrapper({\n            class: [\n              \"w-8 h-8\",\n              \"flex items-center justify-center\",\n              \"rounded-lg bg-default-100 hover:bg-default-200\",\n            ],\n          })}\n        >\n          {isSelected ? <SunIcon /> : <MoonIcon />}\n        </div>\n      </Component>\n      <p className=\"text-default-500 select-none\">Lights: {isSelected ? \"on\" : \"off\"}</p>\n    </div>\n  );\n};\n\nexport default function App() {\n  return <ThemeSwitch />;\n}\n`;var fe={\"/App.jsx\":j},we={\"/App.tsx\":R},D={...fe,...we};var i={usage:b,label:x,disabled:v,sizes:z,colors:C,thumbIcon:T,icons:P,controlled:W,customStyles:H,customImpl:D};var ge={title:\"Switch\",description:\"The Switch component is used as an alternative between checked and not checked states.\"};function L(o){let t={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...o.components},{APITable:r,CarbonAd:s,CodeDemo:n,ComponentLinks:h,ImportTabs:p,Kbd:d,PackageManagers:u,Spacer:c}=t;return r||a(\"APITable\",!0),s||a(\"CarbonAd\",!0),n||a(\"CodeDemo\",!0),h||a(\"ComponentLinks\",!0),p||a(\"ImportTabs\",!0),d||a(\"Kbd\",!0),u||a(\"PackageManagers\",!0),c||a(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:\"switch\",children:\"Switch\"}),`\n`,(0,e.jsx)(t.p,{children:\"The Switch component is used as an alternative between checked and not checked states.\"}),`\n`,(0,e.jsx)(h,{component:\"switch\",styles:\"toggle\",reactAriaHook:\"useSwitch\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(s,{}),`\n`,(0,e.jsx)(t.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(u,{showGlobalInstallWarning:!0,commands:{cli:\"npx heroui-cli@latest add switch\",npm:\"npm install @heroui/switch\",yarn:\"yarn add @heroui/switch\",pnpm:\"pnpm add @heroui/switch\",bun:\"bun add @heroui/switch\"}}),`\n`,(0,e.jsx)(t.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(p,{commands:{main:'import {Switch} from \"@heroui/react\";',individual:'import {Switch} from \"@heroui/switch\";'}}),`\n`,(0,e.jsx)(t.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(n,{title:\"Usage\",files:i.usage}),`\n`,(0,e.jsx)(t.h3,{id:\"with-label\",children:\"With Label\"}),`\n`,(0,e.jsx)(n,{title:\"With Label\",files:i.label}),`\n`,(0,e.jsx)(t.h3,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,e.jsx)(n,{title:\"Disabled\",files:i.disabled}),`\n`,(0,e.jsx)(t.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,e.jsx)(n,{title:\"Sizes\",files:i.sizes}),`\n`,(0,e.jsx)(t.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,e.jsx)(n,{title:\"Colors\",files:i.colors}),`\n`,(0,e.jsx)(t.h3,{id:\"with-thumb-icon\",children:\"With Thumb Icon\"}),`\n`,(0,e.jsx)(n,{title:\"With Thumb Icon\",files:i.thumbIcon}),`\n`,(0,e.jsx)(t.h3,{id:\"with-icons\",children:\"With Icons\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can also add icons to start and end of the switch by using \",(0,e.jsx)(t.code,{children:\"startContent\"}),\" and \",(0,e.jsx)(t.code,{children:\"endContent\"}),\" props.\"]}),`\n`,(0,e.jsx)(n,{title:\"With Icons\",files:i.icons}),`\n`,(0,e.jsx)(t.h3,{id:\"controlled\",children:\"Controlled\"}),`\n`,(0,e.jsx)(n,{title:\"Controlled\",files:i.controlled}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": HeroUI \",(0,e.jsx)(t.code,{children:\"Switch\"}),\" also supports native events like \",(0,e.jsx)(t.code,{children:\"onChange\"}),`, useful for form libraries\nsuch as `,(0,e.jsx)(t.a,{href:\"https://formik.org/\",children:\"Formik\"}),\" and \",(0,e.jsx)(t.a,{href:\"https://react-hook-form.com/\",children:\"React Hook Form\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),\": Base slot for the switch. It is the main wrapper.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"wrapper\"}),\": The wrapper of the start icon, end icon and thumb.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"hiddenInput\"}),\": The hidden input element that is used to handle the switch state.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"thumb\"}),\": The thumb element of the switch. It is the circle element.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"label\"}),\": The label slot of the switch.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"startContent\"}),\": The icon slot at the start of the switch.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"endContent\"}),\": The icon slot at the end of the switch.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"thumbIcon\"}),\": The icon slot inside the thumb.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-styles\",children:\"Custom Styles\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize the \",(0,e.jsx)(t.code,{children:\"Switch\"}),\" component by passing custom Tailwind CSS classes to the component slots.\"]}),`\n`,(0,e.jsx)(n,{title:\"Custom Styles\",files:i.customStyles}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-implementation\",children:\"Custom Implementation\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"In case you need to customize the switch even further, you can use the \",(0,e.jsx)(t.code,{children:\"useSwitch\"}),\" hook to create your own implementation.\"]}),`\n`,(0,e.jsx)(n,{title:\"Custom Implementation\",files:i.customImpl}),`\n`,(0,e.jsx)(c,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"Switch\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-selected\"}),`:\nWhen the switch is checked. Based on `,(0,e.jsx)(t.code,{children:\"isSelected\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-pressed\"}),`:\nWhen the switch is pressed. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-readonly\"}),`:\nWhen the switch is readonly. Based on `,(0,e.jsx)(t.code,{children:\"isReadOnly\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-hover\"}),`:\nWhen the switch is being hovered. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus\"}),`:\nWhen the switch is being focused. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus-visible\"}),`:\nWhen the switch is being focused with the keyboard. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-disabled\"}),`:\nWhen the switch is disabled. Based on `,(0,e.jsx)(t.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`]}),`\n`,(0,e.jsx)(c,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Built with a native HTML \",(0,e.jsx)(t.code,{children:\"<input>\"}),\" element.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Full support for browser features like form autofill.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Keyboard focus management and cross browser normalization.\"}),`\n`,(0,e.jsxs)(t.li,{children:[\"Keyboard event support for \",(0,e.jsx)(d,{children:\"Tab\"}),\" and \",(0,e.jsx)(d,{children:\"Space\"}),\" keys.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Labeling support for assistive technology.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Exposed as a switch to assistive technology via ARIA\"}),`\n`]}),`\n`,(0,e.jsx)(c,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(t.h3,{id:\"switch-props\",children:\"Switch Props\"}),`\n`,(0,e.jsx)(r,{data:[{attribute:\"children\",type:\"ReactNode\",description:\"The label of the switch.\",default:\"-\"},{attribute:\"value\",type:\"string\",description:\"The value of the input element, used when submitting an HTML form.\",default:\"-\"},{attribute:\"name\",type:\"string\",description:\"The name of the input element, used when submitting an HTML form.\",default:\"-\"},{attribute:\"size\",type:\"sm | md | lg\",description:\"The size of the switch.\",default:\"md\"},{attribute:\"color\",type:\"default | primary | secondary | success | warning | danger\",description:\"The color of the switch.\",default:\"primary\"},{attribute:\"thumbIcon\",type:\"ThumbIconProps\",description:\"The icon to be displayed when the switch is checked.\",default:\"-\"},{attribute:\"startContent\",type:\"ReactNode\",description:\"The icon to be displayed at the start of the switch.\",default:\"-\"},{attribute:\"endContent\",type:\"ReactNode\",description:\"The icon to be displayed at the end of the switch.\",default:\"-\"},{attribute:\"isSelected\",type:\"boolean\",description:\"Whether the element should be selected (controlled).\",default:\"-\"},{attribute:\"defaultSelected\",type:\"boolean\",description:\"Whether the element should be selected (uncontrolled).\",default:\"-\"},{attribute:\"isReadOnly\",type:\"boolean\",description:\"Whether the input can be selected but not changed by the user.\",default:\"-\"},{attribute:\"isDisabled\",type:\"boolean\",description:\"Whether the switch is disabled.\",default:\"false\"},{attribute:\"disableAnimation\",type:\"boolean\",description:\"Whether the animation should be disabled.\",default:\"false\"},{attribute:\"classNames\",type:'Partial<Record<\"base\"\\uFF5C \"wrapper\"\\uFF5C \"thumb\"\\uFF5C \"label\" \\uFF5C \"startContent\" \\uFF5C \"endContent\" \\uFF5C \"thumbIcon\" , string>>',description:\"Allows to set custom class names for the switch slots.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"switch-events\",children:\"Switch Events\"}),`\n`,(0,e.jsx)(r,{data:[{attribute:\"onChange\",type:\"React.ChangeEvent<HTMLInputElement>\",description:\"Handler that is called when the element's selection state changes. You can pull out the new checked state by accessing event.target.checked (boolean).\",default:\"-\"},{attribute:\"onValueChange\",type:\"(isSelected: boolean) => void\",description:\"Handler that is called when the element's selection state changes.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"types\",children:\"Types\"}),`\n`,(0,e.jsx)(t.h4,{id:\"switch-icon-props\",children:\"Switch Icon Props\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-ts\",children:`type IconProps = {\n  \"data-checked\": string;\n  width: string;\n  height: string;\n  isSelected: boolean;\n  className: string;\n};\n\ntype CheckboxIconProps = ReactNode | ((props: IconProps) => ReactNode);\n`})})]})}function V(o={}){let{wrapper:t}=o.components||{};return t?(0,e.jsx)(t,{...o,children:(0,e.jsx)(L,{...o})}):L(o)}function a(o,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+o+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return O(be);})();\n;return Component;"
  },
  "_id": "docs/components/switch.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/switch.mdx",
    "sourceFileName": "switch.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/switch"
  },
  "type": "Doc",
  "slug": "/docs/components/switch",
  "slugAsParams": "components/switch",
  "url": "/docs/components/switch"
}