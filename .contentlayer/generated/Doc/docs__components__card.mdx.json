{
  "title": "Card",
  "description": "Card is a container for text, photos, and actions in the context of a single subject.",
  "body": {
    "raw": "\nimport {cardContent} from \"@/content/components/card\";\n\n# Card\n\nCard is a container for text, photos, and actions in the context of a single subject.\n\n<ComponentLinks component=\"card\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx heroui-cli@latest add card\",\n    npm: \"npm install @heroui/card\",\n    yarn: \"yarn add @heroui/card\",\n    pnpm: \"pnpm add @heroui/card\",\n    bun: \"bun add @heroui/card\"\n  }}\n/>\n\n\n## Import\n\nHeroUI exports 4 card-related components:\n\n- **Card**: The main component to display a card.\n- **CardHeader**: Commonly used for the title of a card.\n- **CardBody**: The content of the card.\n- **CardFooter**: Commonly used for actions.\n\n<ImportTabs\n  commands={{\n    main: 'import {Card, CardHeader, CardBody, CardFooter} from \"@heroui/react\";',\n    individual: 'import {Card, CardHeader, CardBody, CardFooter} from \"@heroui/card\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo isPreviewCentered title=\"Usage\" files={cardContent.usage} />\n\n### With Divider\n\n<CodeDemo isPreviewCentered title=\"With Divider\" files={cardContent.divider} />\n\n> See the [Divider](/docs/components/divider) component for more details.\n\n### With Image\n\n<CodeDemo isPreviewCentered title=\"With Image\" files={cardContent.image} />\n\n### Blurred Footer\n\nYou can pass the `isFooterBlurred` prop to the card to blur the footer.\n\n<CodeDemo isPreviewCentered title=\"Blurred Footer\" files={cardContent.blurredFooter} />\n\n### Composition\n\nYou can use other HeroUI components inside the card to compose a more complex card.\n\n<CodeDemo isPreviewCentered title=\"Composition\" files={cardContent.composition} />\n\n### Blurred Card\n\nYou can pass the `isBlurred` prop to the card to blur the card. Card gets blurred properties based on its ancestor element.\n\n> **Note**: To achieve the blur effect as seen in the preview, you need to provide a suitable background (e.g., `bg-gradient-to-tr from-[#FFB457] to-[#FF705B]`) to an ancestor element of the Card component allowing the Card's blur effect to be visible.\n\n<CodeDemo isGradientBox title=\"Blurred Card\" files={cardContent.blurred} />\n\n### Primary Action\n\nIf you pass the `isPressable` prop to the card, it will be rendered as a button.\n\n<CodeDemo title=\"Primary Action\" files={cardContent.primaryAction} />\n\n> **Note**: that the used callback function is `onPress` instead of `onClick`. Please see the [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html#usepress) component for more details.\n\n### Cover Image\n\nYou can use `Image` component as the cover of the card by taking it out of the `CardBody` component.\n\n<CodeDemo title=\"Cover Image\" files={cardContent.coverImage} />\n\n<Spacer y={4} />\n\n## Slots\n\n- **base**:\n  The main container of the card, where the header, body, and footer are placed.\n- **header**:\n  The header of the card, usually used for the title.\n- **body**:\n  The body of the card, where the main content is placed.\n- **footer**:\n  The footer of the card, usually used for actions.\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`Card` has the following attributes on the `base` element:\n\n- **data-hover**:\n  When the card is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n- **data-focus**:\n  When the card is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-visible**:\n  When the card is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-disabled**:\n  When the card is disabled. Based on `isDisabled` prop.\n- **data-pressed**:\n  When the card is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html)\n\n<Spacer y={4} />\n\n## API\n\n### Card Props\n\n<APITable\n  data={[\n    {\n      attribute: \"children\",\n      type: \"ReactNode | ReactNode[]\",\n      description: \"Usually the Card parts, `CardHeader`, `CardBody` and `CardFooter`.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"shadow\",\n      type: \"none | sm | md | lg\",\n      description: \"The card shadow.\",\n      default: \"md\"\n    },\n    {\n      attribute: \"radius\",\n      type: \"none | sm | md | lg\",\n      description: \"The card border radius.\",\n      default: \"lg\"\n    },\n    {\n      attribute: \"fullWidth\",\n      type: \"boolean\",\n      description: \"Whether the card should take the full width of its parent.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isHoverable\",\n      type: \"boolean\",\n      description: \"Whether the card should change the background on hover.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isPressable\",\n      type: \"boolean\",\n      description: \"Whether the card should allow to be pressed.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isBlurred\",\n      type: \"boolean\",\n      description: \"Whether the card background should be blurred.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isFooterBlurred\",\n      type: \"boolean\",\n      description: \"Whether the card footer background should be blurred.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isDisabled\",\n      type: \"boolean\",\n      description: \"Whether the card should be disabled. The press events will be ignored.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"disableAnimation\",\n      type: \"boolean\",\n      description: \"Whether to disable the animation.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"disableRipple\",\n      type: \"boolean\",\n      description: \"Whether to disable ripple effect. Only when `isPressable` is true.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"allowTextSelectionOnPress\",\n      type: \"boolean\",\n      description: \"Whether to allow text selection on pressing. Only when `isPressable` is true.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"classNames\",\n      type: \"Partial<Record<'base' | 'header' | 'body' | 'footer', string>>\",\n      description: \"Allows to set custom class names for the card slots.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### Card Events\n\n<APITable\n  data={[\n    {\n      attribute: \"onPress\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler that is called when the press is released over the target.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressStart\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler that is called when a press interaction starts.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressEnd\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler that is called when a press interaction ends, either over the target or when the pointer leaves the target.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressChange\",\n      type: \"(isPressed: boolean) => void\",\n      description: \"Handler that is called when the press state changes.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressUp\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler that is called when a press is released over the target, regardless of whether it started on the target or not.\",\n      default: \"-\"\n    }\n  ]}\n/>\n",
    "code": "var Component=(()=>{var W=Object.create;var n=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,Z=Object.prototype.hasOwnProperty;var D=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),S=(r,t)=>{for(var o in t)n(r,o,{get:t[o],enumerable:!0})},u=(r,t,o,l)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let a of T(t))!Z.call(r,a)&&a!==o&&n(r,a,{get:()=>t[a],enumerable:!(l=M(t,a))||l.enumerable});return r};var V=(r,t,o)=>(o=r!=null?W(R(r)):{},u(t||!r||!r.__esModule?n(o,\"default\",{value:r,enumerable:!0}):o,r)),O=r=>u(n({},\"__esModule\",{value:!0}),r);var f=D((de,m)=>{m.exports=_jsx_runtime});var ie={};S(ie,{default:()=>z,frontmatter:()=>se});var e=V(f());var g=`import {Card, CardBody} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Card>\n      <CardBody>\n        <p>Make beautiful websites regardless of your design experience.</p>\n      </CardBody>\n    </Card>\n  );\n}\n`;var _={\"/App.jsx\":g},C={..._};var b=`import {Card, CardHeader, CardBody, CardFooter, Divider, Link, Image} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Card className=\"max-w-[400px]\">\n      <CardHeader className=\"flex gap-3\">\n        <Image\n          alt=\"heroui logo\"\n          height={40}\n          radius=\"sm\"\n          src=\"https://avatars.githubusercontent.com/u/86160567?s=200&v=4\"\n          width={40}\n        />\n        <div className=\"flex flex-col\">\n          <p className=\"text-md\">HeroUI</p>\n          <p className=\"text-small text-default-500\">heroui.com</p>\n        </div>\n      </CardHeader>\n      <Divider />\n      <CardBody>\n        <p>Make beautiful websites regardless of your design experience.</p>\n      </CardBody>\n      <Divider />\n      <CardFooter>\n        <Link isExternal showAnchorIcon href=\"https://github.com/heroui-inc/heroui\">\n          Visit source code on GitHub.\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n}\n`;var $={\"/App.jsx\":b},x={...$};var v=`import {Card, CardHeader, CardBody, Image} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Card className=\"py-4\">\n      <CardHeader className=\"pb-0 pt-2 px-4 flex-col items-start\">\n        <p className=\"text-tiny uppercase font-bold\">Daily Mix</p>\n        <small className=\"text-default-500\">12 Tracks</small>\n        <h4 className=\"font-bold text-large\">Frontend Radio</h4>\n      </CardHeader>\n      <CardBody className=\"overflow-visible py-2\">\n        <Image\n          alt=\"Card background\"\n          className=\"object-cover rounded-xl\"\n          src=\"https://heroui.com/images/hero-card-complete.jpeg\"\n          width={270}\n        />\n      </CardBody>\n    </Card>\n  );\n}\n`;var Y={\"/App.jsx\":v},w={...Y};var y=`import {Card, CardHeader, CardBody, CardFooter, Avatar, Button} from \"@heroui/react\";\n\nexport default function App() {\n  const [isFollowed, setIsFollowed] = React.useState(false);\n\n  return (\n    <Card className=\"max-w-[340px]\">\n      <CardHeader className=\"justify-between\">\n        <div className=\"flex gap-5\">\n          <Avatar\n            isBordered\n            radius=\"full\"\n            size=\"md\"\n            src=\"https://heroui.com/avatars/avatar-1.png\"\n          />\n          <div className=\"flex flex-col gap-1 items-start justify-center\">\n            <h4 className=\"text-small font-semibold leading-none text-default-600\">Zoey Lang</h4>\n            <h5 className=\"text-small tracking-tight text-default-400\">@zoeylang</h5>\n          </div>\n        </div>\n        <Button\n          className={isFollowed ? \"bg-transparent text-foreground border-default-200\" : \"\"}\n          color=\"primary\"\n          radius=\"full\"\n          size=\"sm\"\n          variant={isFollowed ? \"bordered\" : \"solid\"}\n          onPress={() => setIsFollowed(!isFollowed)}\n        >\n          {isFollowed ? \"Unfollow\" : \"Follow\"}\n        </Button>\n      </CardHeader>\n      <CardBody className=\"px-3 py-0 text-small text-default-400\">\n        <p>Frontend developer and UI/UX enthusiast. Join me on this coding adventure!</p>\n        <span className=\"pt-2\">\n          #FrontendWithZoey\n          <span aria-label=\"computer\" className=\"py-2\" role=\"img\">\n            \\u{1F4BB}\n          </span>\n        </span>\n      </CardBody>\n      <CardFooter className=\"gap-3\">\n        <div className=\"flex gap-1\">\n          <p className=\"font-semibold text-default-400 text-small\">4</p>\n          <p className=\" text-default-400 text-small\">Following</p>\n        </div>\n        <div className=\"flex gap-1\">\n          <p className=\"font-semibold text-default-400 text-small\">97.1K</p>\n          <p className=\"text-default-400 text-small\">Followers</p>\n        </div>\n      </CardFooter>\n    </Card>\n  );\n}\n`;var X={\"/App.jsx\":y},N={...X};var B=`import {Card, CardBody, Image, Button, Slider} from \"@heroui/react\";\n\nexport const HeartIcon = ({\n  size = 24,\n  width,\n  height,\n  strokeWidth = 1.5,\n  fill = \"none\",\n  ...props\n}) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill={fill}\n      focusable=\"false\"\n      height={size || height}\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width={size || width}\n      {...props}\n    >\n      <path\n        d=\"M12.62 20.81C12.28 20.93 11.72 20.93 11.38 20.81C8.48 19.82 2 15.69 2 8.68998C2 5.59998 4.49 3.09998 7.56 3.09998C9.38 3.09998 10.99 3.97998 12 5.33998C13.01 3.97998 14.63 3.09998 16.44 3.09998C19.51 3.09998 22 5.59998 22 8.68998C22 15.69 15.52 19.82 12.62 20.81Z\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={strokeWidth}\n      />\n    </svg>\n  );\n};\n\nexport const PauseCircleIcon = ({size = 24, width, height, ...props}) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height={size || height}\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width={size || width}\n      {...props}\n    >\n      <path\n        d=\"M11.9688 2C6.44875 2 1.96875 6.48 1.96875 12C1.96875 17.52 6.44875 22 11.9688 22C17.4888 22 21.9688 17.52 21.9688 12C21.9688 6.48 17.4988 2 11.9688 2ZM10.7188 15.03C10.7188 15.51 10.5188 15.7 10.0087 15.7H8.70875C8.19875 15.7 7.99875 15.51 7.99875 15.03V8.97C7.99875 8.49 8.19875 8.3 8.70875 8.3H9.99875C10.5087 8.3 10.7087 8.49 10.7087 8.97V15.03H10.7188ZM15.9987 15.03C15.9987 15.51 15.7987 15.7 15.2887 15.7H13.9987C13.4887 15.7 13.2887 15.51 13.2887 15.03V8.97C13.2887 8.49 13.4887 8.3 13.9987 8.3H15.2887C15.7987 8.3 15.9987 8.49 15.9987 8.97V15.03Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const NextIcon = ({size = 24, width, height, ...props}) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height={size || height}\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width={size || width}\n      {...props}\n    >\n      <path\n        d=\"M3.76172 7.21957V16.7896C3.76172 18.7496 5.89172 19.9796 7.59172 18.9996L11.7417 16.6096L15.8917 14.2096C17.5917 13.2296 17.5917 10.7796 15.8917 9.79957L11.7417 7.39957L7.59172 5.00957C5.89172 4.02957 3.76172 5.24957 3.76172 7.21957Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M20.2383 18.9303C19.8283 18.9303 19.4883 18.5903 19.4883 18.1803V5.82031C19.4883 5.41031 19.8283 5.07031 20.2383 5.07031C20.6483 5.07031 20.9883 5.41031 20.9883 5.82031V18.1803C20.9883 18.5903 20.6583 18.9303 20.2383 18.9303Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const PreviousIcon = ({size = 24, width, height, ...props}) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height={size || height}\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width={size || width}\n      {...props}\n    >\n      <path\n        d=\"M20.2409 7.21957V16.7896C20.2409 18.7496 18.1109 19.9796 16.4109 18.9996L12.2609 16.6096L8.11094 14.2096C6.41094 13.2296 6.41094 10.7796 8.11094 9.79957L12.2609 7.39957L16.4109 5.00957C18.1109 4.02957 20.2409 5.24957 20.2409 7.21957Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M3.76172 18.9303C3.35172 18.9303 3.01172 18.5903 3.01172 18.1803V5.82031C3.01172 5.41031 3.35172 5.07031 3.76172 5.07031C4.17172 5.07031 4.51172 5.41031 4.51172 5.82031V18.1803C4.51172 18.5903 4.17172 18.9303 3.76172 18.9303Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const RepeatOneIcon = ({size = 24, width, height, ...props}) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height={size || height}\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width={size || width}\n      {...props}\n    >\n      <path\n        d=\"M3.91 17.1814C3.72 17.1814 3.53 17.1114 3.38 16.9614C2.01 15.5814 1.25 13.7614 1.25 11.8314C1.25 7.82139 4.5 4.56139 8.5 4.56139L14.57 4.58139L13.48 3.54139C13.18 3.25139 13.17 2.78139 13.46 2.48139C13.75 2.18139 14.22 2.17139 14.52 2.46139L16.96 4.80139C17.18 5.01139 17.25 5.34139 17.14 5.62139C17.03 5.90139 16.75 6.09139 16.44 6.09139L8.5 6.07139C5.33 6.07139 2.75 8.66139 2.75 11.8414C2.75 13.3714 3.35 14.8214 4.44 15.9114C4.73 16.2014 4.73 16.6814 4.44 16.9714C4.29 17.1114 4.1 17.1814 3.91 17.1814Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M9.9999 21.75C9.8099 21.75 9.6299 21.68 9.4799 21.54L7.0399 19.2C6.8199 18.99 6.7499 18.66 6.8599 18.38C6.9799 18.1 7.2599 17.95 7.5599 17.91L15.5099 17.93C18.6799 17.93 21.2599 15.34 21.2599 12.16C21.2599 10.63 20.6599 9.18 19.5699 8.09C19.2799 7.8 19.2799 7.32 19.5699 7.03C19.8599 6.74 20.3399 6.74 20.6299 7.03C21.9999 8.41 22.7599 10.23 22.7599 12.16C22.7599 16.17 19.5099 19.43 15.5099 19.43L9.4399 19.41L10.5299 20.45C10.8299 20.74 10.8399 21.21 10.5499 21.51C10.3899 21.67 10.1999 21.75 9.9999 21.75Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M12.2485 15.4191C11.8385 15.4191 11.4985 15.0791 11.4985 14.6691V11.2791L11.3085 11.4891C11.0285 11.7991 10.5585 11.8191 10.2485 11.5491C9.93853 11.2791 9.91853 10.7991 10.1885 10.4891L11.6885 8.81909C11.8985 8.58909 12.2285 8.50909 12.5185 8.61909C12.8085 8.73909 12.9985 9.00909 12.9985 9.32909V14.6791C12.9985 15.0891 12.6585 15.4191 12.2485 15.4191Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const ShuffleIcon = ({size = 24, width, height, ...props}) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height={size || height}\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width={size || width}\n      {...props}\n    >\n      <path\n        d=\"M21.7507 17.9809C21.7507 17.9609 21.7407 17.9409 21.7407 17.9209C21.7307 17.8409 21.7207 17.7609 21.6907 17.6909C21.6507 17.6009 21.6007 17.5309 21.5407 17.4609C21.5407 17.4609 21.5407 17.4509 21.5307 17.4509C21.4607 17.3809 21.3807 17.3309 21.2907 17.2909C21.2007 17.2509 21.1007 17.2309 21.0007 17.2309L16.3307 17.2509C16.3307 17.2509 16.3307 17.2509 16.3207 17.2509C15.7207 17.2509 15.1407 16.9709 14.7807 16.4909L13.5607 14.9209C13.3107 14.5909 12.8407 14.5309 12.5107 14.7909C12.1807 15.0509 12.1207 15.5109 12.3807 15.8409L13.6007 17.4109C14.2507 18.2509 15.2707 18.7509 16.3307 18.7509H16.3407L19.1907 18.7409L18.4807 19.4509C18.1907 19.7409 18.1907 20.2209 18.4807 20.5109C18.6307 20.6609 18.8207 20.7309 19.0107 20.7309C19.2007 20.7309 19.3907 20.6609 19.5407 20.5109L21.5407 18.5109C21.6107 18.4409 21.6607 18.3609 21.7007 18.2709C21.7307 18.1709 21.7507 18.0709 21.7507 17.9809Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M8.42 6.69172C7.77 5.79172 6.73 5.26172 5.62 5.26172C5.61 5.26172 5.61 5.26172 5.6 5.26172L3 5.27172C2.59 5.27172 2.25 5.61172 2.25 6.02172C2.25 6.43172 2.59 6.77172 3 6.77172L5.61 6.76172H5.62C6.25 6.76172 6.84 7.06172 7.2 7.57172L8.28 9.07172C8.43 9.27172 8.66 9.38172 8.89 9.38172C9.04 9.38172 9.2 9.33172 9.33 9.24172C9.67 8.99172 9.74 8.52172 9.5 8.19172L8.42 6.69172Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M21.74 6.07875C21.74 6.05875 21.75 6.03875 21.75 6.02875C21.75 5.92875 21.73 5.82875 21.69 5.73875C21.65 5.64875 21.6 5.56875 21.53 5.49875L19.53 3.49875C19.24 3.20875 18.76 3.20875 18.47 3.49875C18.18 3.78875 18.18 4.26875 18.47 4.55875L19.18 5.26875L16.45 5.25875C16.44 5.25875 16.44 5.25875 16.43 5.25875C15.28 5.25875 14.2 5.82875 13.56 6.79875L7.17 16.3787C6.81 16.9187 6.2 17.2487 5.55 17.2487H5.54L3 17.2287C2.59 17.2287 2.25 17.5587 2.25 17.9787C2.25 18.3887 2.58 18.7287 3 18.7287L5.55 18.7387C5.56 18.7387 5.56 18.7387 5.57 18.7387C6.73 18.7387 7.8 18.1688 8.44 17.1988L14.83 7.61875C15.19 7.07875 15.8 6.74875 16.45 6.74875H16.46L21 6.76875C21.1 6.76875 21.19 6.74875 21.29 6.70875C21.38 6.66875 21.46 6.61875 21.53 6.54875C21.53 6.54875 21.53 6.53875 21.54 6.53875C21.6 6.46875 21.66 6.39875 21.69 6.30875C21.72 6.23875 21.73 6.15875 21.74 6.07875Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  const [liked, setLiked] = React.useState(false);\n\n  return (\n    <Card\n      isBlurred\n      className=\"border-none bg-background/60 dark:bg-default-100/50 max-w-[610px]\"\n      shadow=\"sm\"\n    >\n      <CardBody>\n        <div className=\"grid grid-cols-6 md:grid-cols-12 gap-6 md:gap-4 items-center justify-center\">\n          <div className=\"relative col-span-6 md:col-span-4\">\n            <Image\n              alt=\"Album cover\"\n              className=\"object-cover\"\n              height={200}\n              shadow=\"md\"\n              src=\"https://heroui.com/images/album-cover.png\"\n              width=\"100%\"\n            />\n          </div>\n\n          <div className=\"flex flex-col col-span-6 md:col-span-8\">\n            <div className=\"flex justify-between items-start\">\n              <div className=\"flex flex-col gap-0\">\n                <h3 className=\"font-semibold text-foreground/90\">Daily Mix</h3>\n                <p className=\"text-small text-foreground/80\">12 Tracks</p>\n                <h1 className=\"text-large font-medium mt-2\">Frontend Radio</h1>\n              </div>\n              <Button\n                isIconOnly\n                className=\"text-default-900/60 data-[hover]:bg-foreground/10 -translate-y-2 translate-x-2\"\n                radius=\"full\"\n                variant=\"light\"\n                onPress={() => setLiked((v) => !v)}\n              >\n                <HeartIcon\n                  className={liked ? \"[&>path]:stroke-transparent\" : \"\"}\n                  fill={liked ? \"currentColor\" : \"none\"}\n                />\n              </Button>\n            </div>\n\n            <div className=\"flex flex-col mt-3 gap-1\">\n              <Slider\n                aria-label=\"Music progress\"\n                classNames={{\n                  track: \"bg-default-500/30\",\n                  thumb: \"w-2 h-2 after:w-2 after:h-2 after:bg-foreground\",\n                }}\n                color=\"foreground\"\n                defaultValue={33}\n                size=\"sm\"\n              />\n              <div className=\"flex justify-between\">\n                <p className=\"text-small\">1:23</p>\n                <p className=\"text-small text-foreground/50\">4:32</p>\n              </div>\n            </div>\n\n            <div className=\"flex w-full items-center justify-center\">\n              <Button\n                isIconOnly\n                className=\"data-[hover]:bg-foreground/10\"\n                radius=\"full\"\n                variant=\"light\"\n              >\n                <RepeatOneIcon className=\"text-foreground/80\" />\n              </Button>\n              <Button\n                isIconOnly\n                className=\"data-[hover]:bg-foreground/10\"\n                radius=\"full\"\n                variant=\"light\"\n              >\n                <PreviousIcon />\n              </Button>\n              <Button\n                isIconOnly\n                className=\"w-auto h-auto data-[hover]:bg-foreground/10\"\n                radius=\"full\"\n                variant=\"light\"\n              >\n                <PauseCircleIcon size={54} />\n              </Button>\n              <Button\n                isIconOnly\n                className=\"data-[hover]:bg-foreground/10\"\n                radius=\"full\"\n                variant=\"light\"\n              >\n                <NextIcon />\n              </Button>\n              <Button\n                isIconOnly\n                className=\"data-[hover]:bg-foreground/10\"\n                radius=\"full\"\n                variant=\"light\"\n              >\n                <ShuffleIcon className=\"text-foreground/80\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n`;var K={\"/App.jsx\":B},k={...K};var I=`import {Card, CardBody, CardFooter, Image} from \"@heroui/react\";\n\nexport default function App() {\n  const list = [\n    {\n      title: \"Orange\",\n      img: \"/images/fruit-1.jpeg\",\n      price: \"$5.50\",\n    },\n    {\n      title: \"Tangerine\",\n      img: \"/images/fruit-2.jpeg\",\n      price: \"$3.00\",\n    },\n    {\n      title: \"Raspberry\",\n      img: \"/images/fruit-3.jpeg\",\n      price: \"$10.00\",\n    },\n    {\n      title: \"Lemon\",\n      img: \"/images/fruit-4.jpeg\",\n      price: \"$5.30\",\n    },\n    {\n      title: \"Avocado\",\n      img: \"/images/fruit-5.jpeg\",\n      price: \"$15.70\",\n    },\n    {\n      title: \"Lemon 2\",\n      img: \"/images/fruit-6.jpeg\",\n      price: \"$8.00\",\n    },\n    {\n      title: \"Banana\",\n      img: \"/images/fruit-7.jpeg\",\n      price: \"$7.50\",\n    },\n    {\n      title: \"Watermelon\",\n      img: \"/images/fruit-8.jpeg\",\n      price: \"$12.20\",\n    },\n  ];\n\n  return (\n    <div className=\"gap-2 grid grid-cols-2 sm:grid-cols-4\">\n      {list.map((item, index) => (\n        /* eslint-disable no-console */\n        <Card key={index} isPressable shadow=\"sm\" onPress={() => console.log(\"item pressed\")}>\n          <CardBody className=\"overflow-visible p-0\">\n            <Image\n              alt={item.title}\n              className=\"w-full object-cover h-[140px]\"\n              radius=\"lg\"\n              shadow=\"sm\"\n              src={item.img}\n              width=\"100%\"\n            />\n          </CardBody>\n          <CardFooter className=\"text-small justify-between\">\n            <b>{item.title}</b>\n            <p className=\"text-default-500\">{item.price}</p>\n          </CardFooter>\n        </Card>\n      ))}\n    </div>\n  );\n}\n`;var ee={\"/App.jsx\":I},F={...ee};var j=`import {Card, CardFooter, Image, Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Card isFooterBlurred className=\"border-none\" radius=\"lg\">\n      <Image\n        alt=\"Woman listing to music\"\n        className=\"object-cover\"\n        height={200}\n        src=\"https://heroui.com/images/hero-card.jpeg\"\n        width={200}\n      />\n      <CardFooter className=\"justify-between before:bg-white/10 border-white/20 border-1 overflow-hidden py-1 absolute before:rounded-xl rounded-large bottom-1 w-[calc(100%_-_8px)] shadow-small ml-1 z-10\">\n        <p className=\"text-tiny text-white/80\">Available soon.</p>\n        <Button\n          className=\"text-tiny text-white bg-black/20\"\n          color=\"default\"\n          radius=\"lg\"\n          size=\"sm\"\n          variant=\"flat\"\n        >\n          Notify me\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n`;var re={\"/App.jsx\":j},L={...re};var A=`import {Card, CardHeader, CardFooter, Image, Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"max-w-[900px] gap-2 grid grid-cols-12 grid-rows-2 px-8\">\n      <Card className=\"col-span-12 sm:col-span-4 h-[300px]\">\n        <CardHeader className=\"absolute z-10 top-1 flex-col !items-start\">\n          <p className=\"text-tiny text-white/60 uppercase font-bold\">What to watch</p>\n          <h4 className=\"text-white font-medium text-large\">Stream the Acme event</h4>\n        </CardHeader>\n        <Image\n          removeWrapper\n          alt=\"Card background\"\n          className=\"z-0 w-full h-full object-cover\"\n          src=\"https://heroui.com/images/card-example-4.jpeg\"\n        />\n      </Card>\n      <Card className=\"col-span-12 sm:col-span-4 h-[300px]\">\n        <CardHeader className=\"absolute z-10 top-1 flex-col !items-start\">\n          <p className=\"text-tiny text-white/60 uppercase font-bold\">Plant a tree</p>\n          <h4 className=\"text-white font-medium text-large\">Contribute to the planet</h4>\n        </CardHeader>\n        <Image\n          removeWrapper\n          alt=\"Card background\"\n          className=\"z-0 w-full h-full object-cover\"\n          src=\"https://heroui.com/images/card-example-3.jpeg\"\n        />\n      </Card>\n      <Card className=\"col-span-12 sm:col-span-4 h-[300px]\">\n        <CardHeader className=\"absolute z-10 top-1 flex-col !items-start\">\n          <p className=\"text-tiny text-white/60 uppercase font-bold\">Supercharged</p>\n          <h4 className=\"text-white font-medium text-large\">Creates beauty like a beast</h4>\n        </CardHeader>\n        <Image\n          removeWrapper\n          alt=\"Card background\"\n          className=\"z-0 w-full h-full object-cover\"\n          src=\"https://heroui.com/images/card-example-2.jpeg\"\n        />\n      </Card>\n      <Card isFooterBlurred className=\"w-full h-[300px] col-span-12 sm:col-span-5\">\n        <CardHeader className=\"absolute z-10 top-1 flex-col items-start\">\n          <p className=\"text-tiny text-white/60 uppercase font-bold\">New</p>\n          <h4 className=\"text-black font-medium text-2xl\">Acme camera</h4>\n        </CardHeader>\n        <Image\n          removeWrapper\n          alt=\"Card example background\"\n          className=\"z-0 w-full h-full scale-125 -translate-y-6 object-cover\"\n          src=\"https://heroui.com/images/card-example-6.jpeg\"\n        />\n        <CardFooter className=\"absolute bg-white/30 bottom-0 border-t-1 border-zinc-100/50 z-10 justify-between\">\n          <div>\n            <p className=\"text-black text-tiny\">Available soon.</p>\n            <p className=\"text-black text-tiny\">Get notified.</p>\n          </div>\n          <Button className=\"text-tiny\" color=\"primary\" radius=\"full\" size=\"sm\">\n            Notify Me\n          </Button>\n        </CardFooter>\n      </Card>\n      <Card isFooterBlurred className=\"w-full h-[300px] col-span-12 sm:col-span-7\">\n        <CardHeader className=\"absolute z-10 top-1 flex-col items-start\">\n          <p className=\"text-tiny text-white/60 uppercase font-bold\">Your day your way</p>\n          <h4 className=\"text-white/90 font-medium text-xl\">Your checklist for better sleep</h4>\n        </CardHeader>\n        <Image\n          removeWrapper\n          alt=\"Relaxing app background\"\n          className=\"z-0 w-full h-full object-cover\"\n          src=\"https://heroui.com/images/card-example-5.jpeg\"\n        />\n        <CardFooter className=\"absolute bg-black/40 bottom-0 z-10 border-t-1 border-default-600 dark:border-default-100\">\n          <div className=\"flex flex-grow gap-2 items-center\">\n            <Image\n              alt=\"Breathing app icon\"\n              className=\"rounded-full w-10 h-11 bg-black\"\n              src=\"https://heroui.com/images/breathing-app-icon.jpeg\"\n            />\n            <div className=\"flex flex-col\">\n              <p className=\"text-tiny text-white/60\">Breathing App</p>\n              <p className=\"text-tiny text-white/60\">Get a good night&#39;s sleep.</p>\n            </div>\n          </div>\n          <Button radius=\"full\" size=\"sm\">\n            Get App\n          </Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n`;var oe={\"/App.jsx\":A},H={...oe};var s={usage:C,divider:x,image:w,composition:N,blurred:k,primaryAction:F,blurredFooter:L,coverImage:H};var se={title:\"Card\",description:\"Card is a container for text, photos, and actions in the context of a single subject.\"};function P(r){let t={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",ul:\"ul\",...r.components},{APITable:o,CarbonAd:l,CodeDemo:a,ComponentLinks:c,ImportTabs:p,PackageManagers:h,Spacer:d}=t;return o||i(\"APITable\",!0),l||i(\"CarbonAd\",!0),a||i(\"CodeDemo\",!0),c||i(\"ComponentLinks\",!0),p||i(\"ImportTabs\",!0),h||i(\"PackageManagers\",!0),d||i(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:\"card\",children:\"Card\"}),`\n`,(0,e.jsx)(t.p,{children:\"Card is a container for text, photos, and actions in the context of a single subject.\"}),`\n`,(0,e.jsx)(c,{component:\"card\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(l,{}),`\n`,(0,e.jsx)(t.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(h,{showGlobalInstallWarning:!0,commands:{cli:\"npx heroui-cli@latest add card\",npm:\"npm install @heroui/card\",yarn:\"yarn add @heroui/card\",pnpm:\"pnpm add @heroui/card\",bun:\"bun add @heroui/card\"}}),`\n`,(0,e.jsx)(t.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(t.p,{children:\"HeroUI exports 4 card-related components:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"Card\"}),\": The main component to display a card.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"CardHeader\"}),\": Commonly used for the title of a card.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"CardBody\"}),\": The content of the card.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"CardFooter\"}),\": Commonly used for actions.\"]}),`\n`]}),`\n`,(0,e.jsx)(p,{commands:{main:'import {Card, CardHeader, CardBody, CardFooter} from \"@heroui/react\";',individual:'import {Card, CardHeader, CardBody, CardFooter} from \"@heroui/card\";'}}),`\n`,(0,e.jsx)(t.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(a,{isPreviewCentered:!0,title:\"Usage\",files:s.usage}),`\n`,(0,e.jsx)(t.h3,{id:\"with-divider\",children:\"With Divider\"}),`\n`,(0,e.jsx)(a,{isPreviewCentered:!0,title:\"With Divider\",files:s.divider}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"See the \",(0,e.jsx)(t.a,{href:\"/docs/components/divider\",children:\"Divider\"}),\" component for more details.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"with-image\",children:\"With Image\"}),`\n`,(0,e.jsx)(a,{isPreviewCentered:!0,title:\"With Image\",files:s.image}),`\n`,(0,e.jsx)(t.h3,{id:\"blurred-footer\",children:\"Blurred Footer\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can pass the \",(0,e.jsx)(t.code,{children:\"isFooterBlurred\"}),\" prop to the card to blur the footer.\"]}),`\n`,(0,e.jsx)(a,{isPreviewCentered:!0,title:\"Blurred Footer\",files:s.blurredFooter}),`\n`,(0,e.jsx)(t.h3,{id:\"composition\",children:\"Composition\"}),`\n`,(0,e.jsx)(t.p,{children:\"You can use other HeroUI components inside the card to compose a more complex card.\"}),`\n`,(0,e.jsx)(a,{isPreviewCentered:!0,title:\"Composition\",files:s.composition}),`\n`,(0,e.jsx)(t.h3,{id:\"blurred-card\",children:\"Blurred Card\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can pass the \",(0,e.jsx)(t.code,{children:\"isBlurred\"}),\" prop to the card to blur the card. Card gets blurred properties based on its ancestor element.\"]}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": To achieve the blur effect as seen in the preview, you need to provide a suitable background (e.g., \",(0,e.jsx)(t.code,{children:\"bg-gradient-to-tr from-[#FFB457] to-[#FF705B]\"}),\") to an ancestor element of the Card component allowing the Card's blur effect to be visible.\"]}),`\n`]}),`\n`,(0,e.jsx)(a,{isGradientBox:!0,title:\"Blurred Card\",files:s.blurred}),`\n`,(0,e.jsx)(t.h3,{id:\"primary-action\",children:\"Primary Action\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"If you pass the \",(0,e.jsx)(t.code,{children:\"isPressable\"}),\" prop to the card, it will be rendered as a button.\"]}),`\n`,(0,e.jsx)(a,{title:\"Primary Action\",files:s.primaryAction}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": that the used callback function is \",(0,e.jsx)(t.code,{children:\"onPress\"}),\" instead of \",(0,e.jsx)(t.code,{children:\"onClick\"}),\". Please see the \",(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html#usepress\",children:\"usePress\"}),\" component for more details.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"cover-image\",children:\"Cover Image\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use \",(0,e.jsx)(t.code,{children:\"Image\"}),\" component as the cover of the card by taking it out of the \",(0,e.jsx)(t.code,{children:\"CardBody\"}),\" component.\"]}),`\n`,(0,e.jsx)(a,{title:\"Cover Image\",files:s.coverImage}),`\n`,(0,e.jsx)(d,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),`:\nThe main container of the card, where the header, body, and footer are placed.`]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"header\"}),`:\nThe header of the card, usually used for the title.`]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"body\"}),`:\nThe body of the card, where the main content is placed.`]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"footer\"}),`:\nThe footer of the card, usually used for actions.`]}),`\n`]}),`\n`,(0,e.jsx)(d,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"Card\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-hover\"}),`:\nWhen the card is being hovered. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus\"}),`:\nWhen the card is being focused. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus-visible\"}),`:\nWhen the card is being focused with the keyboard. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-disabled\"}),`:\nWhen the card is disabled. Based on `,(0,e.jsx)(t.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-pressed\"}),`:\nWhen the card is pressed. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"})]}),`\n`]}),`\n`,(0,e.jsx)(d,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(t.h3,{id:\"card-props\",children:\"Card Props\"}),`\n`,(0,e.jsx)(o,{data:[{attribute:\"children\",type:\"ReactNode | ReactNode[]\",description:\"Usually the Card parts, `CardHeader`, `CardBody` and `CardFooter`.\",default:\"-\"},{attribute:\"shadow\",type:\"none | sm | md | lg\",description:\"The card shadow.\",default:\"md\"},{attribute:\"radius\",type:\"none | sm | md | lg\",description:\"The card border radius.\",default:\"lg\"},{attribute:\"fullWidth\",type:\"boolean\",description:\"Whether the card should take the full width of its parent.\",default:\"false\"},{attribute:\"isHoverable\",type:\"boolean\",description:\"Whether the card should change the background on hover.\",default:\"false\"},{attribute:\"isPressable\",type:\"boolean\",description:\"Whether the card should allow to be pressed.\",default:\"false\"},{attribute:\"isBlurred\",type:\"boolean\",description:\"Whether the card background should be blurred.\",default:\"false\"},{attribute:\"isFooterBlurred\",type:\"boolean\",description:\"Whether the card footer background should be blurred.\",default:\"false\"},{attribute:\"isDisabled\",type:\"boolean\",description:\"Whether the card should be disabled. The press events will be ignored.\",default:\"false\"},{attribute:\"disableAnimation\",type:\"boolean\",description:\"Whether to disable the animation.\",default:\"false\"},{attribute:\"disableRipple\",type:\"boolean\",description:\"Whether to disable ripple effect. Only when `isPressable` is true.\",default:\"false\"},{attribute:\"allowTextSelectionOnPress\",type:\"boolean\",description:\"Whether to allow text selection on pressing. Only when `isPressable` is true.\",default:\"false\"},{attribute:\"classNames\",type:\"Partial<Record<'base' | 'header' | 'body' | 'footer', string>>\",description:\"Allows to set custom class names for the card slots.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"card-events\",children:\"Card Events\"}),`\n`,(0,e.jsx)(o,{data:[{attribute:\"onPress\",type:\"(e: PressEvent) => void\",description:\"Handler that is called when the press is released over the target.\",default:\"-\"},{attribute:\"onPressStart\",type:\"(e: PressEvent) => void\",description:\"Handler that is called when a press interaction starts.\",default:\"-\"},{attribute:\"onPressEnd\",type:\"(e: PressEvent) => void\",description:\"Handler that is called when a press interaction ends, either over the target or when the pointer leaves the target.\",default:\"-\"},{attribute:\"onPressChange\",type:\"(isPressed: boolean) => void\",description:\"Handler that is called when the press state changes.\",default:\"-\"},{attribute:\"onPressUp\",type:\"(e: PressEvent) => void\",description:\"Handler that is called when a press is released over the target, regardless of whether it started on the target or not.\",default:\"-\"}]})]})}function z(r={}){let{wrapper:t}=r.components||{};return t?(0,e.jsx)(t,{...r,children:(0,e.jsx)(P,{...r})}):P(r)}function i(r,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+r+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return O(ie);})();\n;return Component;"
  },
  "_id": "docs/components/card.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/card.mdx",
    "sourceFileName": "card.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/card"
  },
  "type": "Doc",
  "slug": "/docs/components/card",
  "slugAsParams": "components/card",
  "url": "/docs/components/card"
}