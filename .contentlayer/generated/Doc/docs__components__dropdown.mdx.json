{
  "title": "Dropdown",
  "description": "Displays a list of actions or options that a user can choose.",
  "body": {
    "raw": "\nimport {dropdownContent} from \"@/content/components/dropdown\";\n\n# Dropdown\n\nDisplays a list of actions or options that a user can choose.\n\n<ComponentLinks component=\"dropdown\" reactAriaHook=\"useMenu\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx heroui-cli@latest add dropdown\",\n    npm: \"npm install @heroui/dropdown\",\n    yarn: \"yarn add @heroui/dropdown\",\n    pnpm: \"pnpm add @heroui/dropdown\",\n    bun: \"bun add @heroui/dropdown\"\n  }}\n/>\n\n\n## Import\n\nHeroUI exports 5 dropdown-related components:\n\n- **Dropdown**: The main component, which is a wrapper for the other components. This component is an extension of the [Popover](/docs/components/popover) component, so it accepts all the props of the Popover component.\n- **DropdownTrigger**: The component that triggers the dropdown menu to open.\n- **DropdownMenu**: The component that contains the dropdown items.\n- **DropdownSection**: The component that contains a group of dropdown items.\n- **DropdownItem**: The component that represents a dropdown item.\n\n<ImportTabs\n  commands={{\n    main: `import {\n    Dropdown,\n    DropdownTrigger,\n    DropdownMenu,\n    DropdownSection,\n    DropdownItem\n} from \"@heroui/react\";`,\n    individual: `import {\n    Dropdown,\n    DropdownTrigger,\n    DropdownMenu,\n    DropdownSection,\n    DropdownItem\n} from \"@heroui/dropdown\";`,\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={dropdownContent.usage} />\n\n### Dynamic items\n\nDropdown follows the [Collection Components API](https://react-spectrum.adobe.com/react-stately/collections.html), accepting both static and dynamic collections.\n\n- **Static**: The usage example above shows the static implementation, which can be used when the full list of options is known ahead of time.\n- **Dynamic**: The example below can be used when the options come from an external data source such as an API call, or update over time.\n\n<CodeDemo title=\"Dynamic items\" files={dropdownContent.dynamic} />\n\n### Disabled Keys\n\nDropdown items can be disabled using the `disabledKeys` prop to the `DropdownMenu` component.\n\n<CodeDemo title=\"Disabled Keys\" files={dropdownContent.disabledKeys} />\n\n> **Note**: It's important to have a unique key for each item, otherwise the disabled keys will not work.\n\n### Action event\n\nYou can use the `onAction` prop to get the key of the selected item.\n\n<CodeDemo title=\"Action event\" files={dropdownContent.action} />\n\n### Variants\n\nYou can use the `variant` in the `DropdownMenu` component to change the `hover` style of the dropdown items.\n\n<CodeDemo title=\"Variants\" files={dropdownContent.variants} />\n\n### Single Selection\n\nYou can set the `selectionMode` property as `single` to allow the user to select only one item at a time.\n\n<CodeDemo\n  title=\"Single Selection\"\n  files={dropdownContent.singleSelection}\n/>\n\n### Multiple Selection\n\nYou can set the `selectionMode` property as `multiple` to allow the user to select multiple items at a time.\n\n<CodeDemo\n  title=\"Multiple Selection\"\n  files={dropdownContent.multipleSelection}\n/>\n\n> **Note**: To allow empty selection, you can set the `disallowEmptySelection` property as `false`.\n\n### With Shortcut\n\nYou can use the `shortcut` prop to add a shortcut to the dropdown item.\n\n<CodeDemo title=\"With Shortcut\" files={dropdownContent.shortcut} />\n\n> **Note**: Dropdown does not handle the shortcut event, you need to handle it yourself.\n\n### With Icons\n\nIt is possible to add icons to the dropdown items using the `startContent` / `endContent` props.\n\n<CodeDemo title=\"With Icons\" files={dropdownContent.icons} />\n\n> **Note**: If you use `currentColor` as the icon color, the icon will have the same color as the item text.\n\n### With Description\n\nYou can use the `description` prop to add a description to the dropdown item.\n\n<CodeDemo\n  title=\"With Description\"\n  files={dropdownContent.description}\n/>\n\n### With Sections\n\nYou can use the `DropdownSection` component to group dropdown items.\n\n<CodeDemo title=\"With Sections\" files={dropdownContent.sections} />\n\n> **Note**: Sections without a `title` must provide an `aria-label` for accessibility.\n\n### Custom Trigger\n\nYou can use any component as a trigger for the dropdown menu, just wrap it in the `DropdownTrigger` component.\n\n<CodeDemo title=\"Custom Trigger\" files={dropdownContent.customTrigger} />\n\n### Changing the backdrop\n\nAs we mentioned earlier, the `Dropdown` component is an extension of the [Popover](/docs/components/popover) component,\nso it accepts all the props of the Popover component, including the `backdrop` prop.\n\n<CodeDemo title=\"Changing the backdrop\" files={dropdownContent.backdrop} />\n\n### Routing\n\nThe `<DropdownItem>` component works with frameworks and client side routers like [Next.js](https://nextjs.org/) and\n[React Router](https://reactrouter.com/en/main). See the [Routing](/docs/guide/routing) guide to learn how to set this up.\n\n```jsx\nimport {Dropdown, DropdownMenu, DropdownTrigger, DropdownItem, Button} from \"@heroui/react\";\n\nfunction App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Link Actions\">\n        <DropdownItem key=\"home\" href=\"/home\">\n          Home\n        </DropdownItem>\n        <DropdownItem key=\"about\" href=\"/about\">\n          About\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n```\n\n## Slots\n\nDropdown has 3 components with slots the `DropdownMenu`, `DropdownItem` and `DropdownSection` components.\n\n### DropdownMenu\n\n- **base**: The main wrapper for the menu component. This slot wraps the `topContent`, `bottomContent` and the `list` slot.\n- **list**: The slot for the menu list component. You can see this slot as the `ul` slot.\n- **emptyContent**: The slot content to display when the collection is empty.\n\n### DropdownItem\n\n- **base**: The main slot for the dropdown item. It wraps all the other slots.\n- **wrapper**: The `title` and `description` wrapper.\n- **title**: The title of the dropdown item.\n- **description**: The description of the dropdown item.\n- **shortcut**: The shortcut slot.\n- **selectedIcon**: The selected icon slot. This is only visible when the item is selected.\n\n### DropdownSection\n\n- **base**: The main slot for the dropdown section. It wraps all the other slots.\n- **heading**: The title that is render on top of the section group.\n- **group**: The group of dropdown items.\n- **divider**: The divider that is render between the groups. This is only visible when `showDivider` is `true`.\n\n### Customizing the dropdown popover\n\nThe `Dropdown` component is an extension of the [Popover](/docs/components/popover) component, so you can use the same\nslots to customize the dropdown.\n\n<CodeDemo\n  title=\"Custom Popover Styles\"\n  files={dropdownContent.customPopoverStyles}\n/>\n\n### Customizing the dropdown items style\n\nYou can customize the dropdown items either by using the `DropdownMenu` `itemClasses` prop or by using the\n`DropdownItem` slots, the `itemClasses` allows you to customize all the items at once, while the slots allow\nyou to customize each item individually.\n\n<CodeDemo title=\"Custom Dropdown Items Styles\" files={dropdownContent.customItemsStyles} />\n\n<Spacer y={4} />\n\n### Keyboard Interactions\n\n| Key                              | Description                                                                                                                                   |\n| -------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| <Kbd>Space</Kbd>                 | When focus is on `DropdownTrigger`, opens the dropdown menu and focuses the first item. When focus is on an item, activates the focused item. |\n| <Kbd>Enter</Kbd>                 | When focus is on `DropdownTrigger`, opens the dropdown menu and focuses the first item. When focus is on an item, activates the focused item. |\n| <Kbd>ArrowDown</Kbd>             | When focus is on `DropdownTrigger`, opens the dropdown menu. When focus is on an item, moves focus to the next item.                          |\n| <Kbd>ArrowUp</Kbd>               | When focus is on an item, moves focus to the previous item.                                                                                   |\n| <Kbd>Esc</Kbd>                   | Closes the dropdown menu and moves focus to `DropdownTrigger`.                                                                                |\n| <Kbd>A-Z</Kbd> or <Kbd>a-z</Kbd> | When the menu is open, moves focus to the next menu item with a label that starts with the typed character if such an menu item exists.       |\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`DropdownItem` has the following attributes on the `base` element:\n\n- **data-disabled**:\n  When the dropdown item is disabled. Based on dropdown `disabledKeys` prop.\n- **data-selected**:\n  When the dropdown item is selected. Based on dropdown `selectedKeys` prop.\n- **data-hover**:\n  When the dropdown item is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n- **data-pressed**:\n  When the dropdown item is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html)\n- **data-focus**:\n  When the dropdown item is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-visible**:\n  When the dropdown item is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Exposed to assistive technology as a `button` with a `menu` using ARIA.\n- Support for single, multiple, or no selection.\n- Support for disabled items.\n- Support for sections.\n- Complex item labeling support for accessibility.\n- Keyboard navigation support including arrow keys, home/end, page up/down. See [Keyboard Interactions](#keyboard-interactions) for more details.\n- Automatic scrolling support during keyboard navigation.\n- Keyboard support for opening the menu using the arrow keys, including automatically focusing the first or last item accordingly.\n- Typeahead to allow focusing items by typing text.\n- Virtualized scrolling support for performance with long lists.\n\n<Spacer y={4} />\n\n## API\n\n### Dropdown Props\n\n<APITable\n  data={[\n    {\n      attribute: \"children*\",\n      type: \"ReactNode[]\",\n      description: \"The children to render. Usually a DropdownTrigger and DropdownMenu elements.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"type\",\n      type: \"menu | listbox\",\n      description: \"Type of overlay that is opened by the dropdown trigger.\",\n      default: \"menu\"\n    },\n    {\n      attribute: \"trigger\",\n      type: \"press | longPress\",\n      description: \"How the dropdown menu is triggered.\",\n      default: \"press\"\n    },\n    {\n      attribute: \"isDisabled\",\n      type: \"boolean\",\n      description: \"Whether the dropdown trigger is disabled.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"closeOnSelect\",\n      type: \"boolean\",\n      description: \"Whether the dropdown menu should be closed when an item is selected.\",\n      default: \"true\"\n    },\n    {\n      attribute: \"shouldBlockScroll\",\n      type: \"boolean\",\n      description: \"Whether the dropdown menu should block scrolling outside the menu.\",\n      default: \"true\"\n    },\n    {\n      attribute: \"PopoverProps\",\n      type: \"PopoverProps\",\n      description: \"Since the dropdown is an extension of the popover, it accepts all the props of the popover component.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### Dropdown Events\n\n<APITable\n  data={[\n    {\n      attribute: \"onOpenChange\",\n      type: \"(isOpen: boolean) => void\",\n      description: \"Handler that is called when the dropdown's open state changes.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"shouldCloseOnInteractOutside\",\n      type: \"(e: HTMLElement) => void\",\n      description: \"When user interacts with the argument element outside of the dropdown ref, return true if onClose should be called.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onClose\",\n      type: \"() => void\",\n      description: \"Handler that is called when the dropdown should close.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### DropdownTrigger Props\n\n<APITable\n  data={[\n    {\n      attribute: \"children\",\n      type: \"ReactNode\",\n      description: \"The dropdown trigger component, ensure the children passed is focusable. Users can tab to it using their keyboard, and it can take a ref. It is critical for accessibility.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### DropdownMenu Props\n\n<APITable\n  data={[\n    {\n      attribute: \"children*\",\n      type: \"ReactNode | ((item: T) => ReactElement)\",\n      description: \"The contents of the collection. It's usually the DropdownItem or DropdownSection. (static)\",\n      default: \"-\"\n    },\n    {\n      attribute: \"items\",\n      type: \"Iterable<T>\",\n      description: \"Item objects in the collection. (dynamic)\",\n      default: \"-\"\n    },\n    {\n      attribute: \"variant\",\n      type: \"solid | bordered | light | flat | faded | shadow\",\n      description: \"The dropdown items appearance style.\",\n      default: \"solid\"\n    },\n    {\n      attribute: \"color\",\n      type: \"default | primary | secondary | success | warning | danger\",\n      description: \"The dropdown items color theme.\",\n      default: \"default\"\n    },\n    {\n      attribute: \"selectionMode\",\n      type: \"none | single | multiple\",\n      description: \"The type of selection that is allowed in the collection.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"selectedKeys\",\n      type: \"all | Iterable<React.Key>\",\n      description: \"The currently selected keys in the collection (controlled).\",\n      default: \"-\"\n    },\n    {\n      attribute: \"disabledKeys\",\n      type: \"Iterable<React.Key>\",\n      description: \"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"defaultSelectedKeys\",\n      type: \"all | Iterable<React.Key>\",\n      description: \"The initial selected keys in the collection (uncontrolled).\",\n      default: \"-\"\n    },\n    {\n      attribute: \"disallowEmptySelection\",\n      type: \"boolean\",\n      description: \"Whether the collection allows empty selection.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"autoFocus\",\n      type: \"boolean | first | last\",\n      description: \"Where the focus should be set.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"topContent\",\n      type: \"ReactNode\",\n      description: \"The content to display above the listbox items.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"bottomContent\",\n      type: \"ReactNode\",\n      description: \"The content to display below the listbox items.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"emptyContent\",\n      type: \"ReactNode\",\n      description: \"The content to display when the collection is empty.\",\n      default: \"No items.\"\n    },\n    {\n      attribute: \"hideEmptyContent\",\n      type: \"boolean\",\n      description: \"Whether to not display the empty content when the collection is empty.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"hideSelectedIcon\",\n      type: \"boolean\",\n      description: \"Whether to hide the check icon when the items are selected.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"shouldFocusWrap\",\n      type: \"boolean\",\n      description: \"Whether keyboard navigation is circular.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"closeOnSelect\",\n      type: \"boolean\",\n      description: \"Whether the dropdown menu should be closed when an item is selected.\",\n      default: \"true\"\n    },\n    {\n      attribute: \"disableAnimation\",\n      type: \"boolean\",\n      description: \"Whether to disable the animation of the dropdown items.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"classNames\",\n      type: \"Partial<Record<'base'｜'list'｜'emptyContent', string>>\",\n      description: \"Allows to set custom class names for the dropdown menu slots.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"itemClasses\",\n      type: \"Partial<Record<'base'｜'wrapper'｜'title'｜'description'｜'shortcut'｜'selectedIcon', string>>\",\n      description: \"Allows to set custom class names for the dropdown item slots.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### DropdownMenu Events\n\n<APITable\n  data={[\n    {\n      attribute: \"onAction\",\n      type: \"(key: React.Key) => void\",\n      description: \"Handler that is called when an item is selected.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onSelectionChange\",\n      type: \"(keys: \\\"all\\\" | Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void\",\n      description: \"Handler that is called when the selection changes.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onClose\",\n      type: \"() => void\",\n      description: \"Handler that is called when the menu should close after selecting an item.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### DropdownSection Props\n\n<APITable\n  data={[\n    {\n      attribute: \"children*\",\n      type: \"ReactNode\",\n      description: \"The contents of the dropdown section. Usually a list of DropdownItem components. (static)\",\n      default: \"-\"\n    },\n    {\n      attribute: \"title\",\n      type: \"string\",\n      description: \"The title of the dropdown section.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"items\",\n      type: \"Iterable<T>\",\n      description: \"Item objects in the collection. (dynamic)\",\n      default: \"-\"\n    },\n    {\n      attribute: \"hideSelectedIcon\",\n      type: \"boolean\",\n      description: \"Whether to hide the check icon when the items are selected.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"showDivider\",\n      type: \"boolean\",\n      description: \"Whether to show the divider between the groups.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"dividerProps\",\n      type: \"DividerProps\",\n      description: \"The divider component props.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"classNames\",\n      type: \"Record<'base'｜'heading'｜'group'｜'divider', string>>\",\n      description: \"Allows to set custom class names for the dropdown section slots.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"itemClasses\",\n      type: \"Record<'base'｜'wrapper'｜'title'｜'description'｜'shortcut'｜'selectedIcon', string>>\",\n      description: \"Allows to set custom class names for the dropdown item slots.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### DropdownItem Props\n\n<APITable\n  data={[\n    {\n      attribute: \"children*\",\n      type: \"ReactNode\",\n      description: \"The contents of the dropdown item.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"key\",\n      type: \"React.Key\",\n      description: \"The unique key for the dropdown item.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"title\",\n      type: \"string | ReactNode\",\n      description: \"The title of the dropdown item.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"textValue\",\n      type: \"string\",\n      description: \"A string representation of the item's contents, used for features like typeahead.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"description\",\n      type: \"string | ReactNode\",\n      description: \"The description of the dropdown item.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"shortcut\",\n      type: \"string | ReactNode\",\n      description: \"The dropdown item keyboard shortcut.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"startContent\",\n      type: \"ReactNode\",\n      description: \"The start content of the dropdown item.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"endContent\",\n      type: \"ReactNode\",\n      description: \"The end content of the dropdown item. This is positioned after the shortcut and the selected icon.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"selectedIcon\",\n      type: \"SelectedIconProps\",\n      description: \"Custom icon to render when the item is selected.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"showDivider\",\n      type: \"boolean\",\n      description: \"Whether to show a divider below the item.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"href\",\n      type: \"string\",\n      description: \"A URL to link to. See MDN.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"target\",\n      type: \"HTMLAttributeAnchorTarget\",\n      description: \"The target window for the link. See MDN.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"rel\",\n      type: \"string\",\n      description: \"The relationship between the linked resource and the current page. See MDN.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"download\",\n      type: \"boolean | string\",\n      description: \"Causes the browser to download the linked URL. A string may be provided to suggest a file name. See MDN.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"ping\",\n      type: \"string\",\n      description: \"A space-separated list of URLs to ping when the link is followed. See MDN.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"referrerPolicy\",\n      type: \"HTMLAttributeReferrerPolicy\",\n      description: \"How much of the referrer to send when following the link. See MDN.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"isDisabled\",\n      type: \"boolean\",\n      description: \"Whether the dropdown item should be disabled. (Deprecated) pass disabledKeys to DropdownMenu instead.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isSelected\",\n      type: \"boolean\",\n      description: \"Whether the dropdown item should be selected. (Deprecated) pass selectedKeys to DropdownMenu instead.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isReadOnly\",\n      type: \"boolean\",\n      description: \"Whether the dropdown item press events should be ignored.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"hideSelectedIcon\",\n      type: \"boolean\",\n      description: \"Whether to hide the check icon when the item is selected.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"closeOnSelect\",\n      type: \"boolean\",\n      description: \"Whether the dropdown menu should be closed when the item is selected.\",\n      default: \"true\"\n    },\n    {\n      attribute: \"classNames\",\n      type: \"Record<'base'｜'wrapper'｜'title'｜'description'｜'shortcut'｜'selectedIcon', string>>\",\n      description: \"Allows to set custom class names for the dropdown item slots.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### DropdownItem Events\n\n<APITable\n  data={[\n    {\n      attribute: \"onAction\",\n      type: \"() => void\",\n      description: \"Handler that is called when the dropdown item is selected. (Deprecated) pass to DropdownMenu instead.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onClose\",\n      type: \"() => void\",\n      description: \"Handler that is called when the dropdown item should close after selecting. (Deprecated) pass to DropdownMenu instead.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPress\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler called when the press is released over the target.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressStart\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler called when a press interaction starts.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressEnd\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler called when a press interaction ends, either over the target or when the pointer leaves the target.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressChange\",\n      type: \"(isPressed: boolean) => void\",\n      description: \"Handler called when the press state changes.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressUp\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler called when a press is released over the target, regardless of whether it started on the target or not.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onKeyDown\",\n      type: \"(e: KeyboardEvent) => void\",\n      description: \"Handler called when a key is pressed.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onKeyUp\",\n      type: \"(e: KeyboardEvent) => void\",\n      description: \"Handler called when a key is released.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onClick\",\n      deprecated: true,\n      type: \"MouseEventHandler\",\n      description: \"The native button click event handler (**Deprecated**) use **onPress** instead.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### Types\n\n#### Dropdown Item Selected Icon Props\n\n```ts\nexport type DropdownItemSelectedIconProps = {\n  /**\n   * The current icon, usually an checkmark icon.\n   */\n  icon?: ReactNode;\n  /**\n   * The current selected status.\n   */\n  isSelected?: boolean;\n  /**\n   * The current disabled status.\n   * @default false\n   */\n  isDisabled?: boolean;\n};\n\ntype selectedIcon?: ReactNode | ((props: DropdownItemSelectedIconProps) => ReactNode) | null;\n```\n",
    "code": "var Component=(()=>{var J=Object.create;var c=Object.defineProperty;var Q=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var ee=Object.getPrototypeOf,te=Object.prototype.hasOwnProperty;var oe=(o,t)=>()=>(t||o((t={exports:{}}).exports,t),t.exports),ne=(o,t)=>{for(var r in t)c(o,r,{get:t[r],enumerable:!0})},m=(o,t,r,a)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let n of $(t))!te.call(o,n)&&n!==r&&c(o,n,{get:()=>t[n],enumerable:!(a=Q(t,n))||a.enumerable});return o};var re=(o,t,r)=>(r=o!=null?J(ee(o)):{},m(t||!o||!o.__esModule?c(r,\"default\",{value:o,enumerable:!0}):r,o)),ie=o=>m(c({},\"__esModule\",{value:!0}),o);var f=oe((Le,w)=>{w.exports=_jsx_runtime});var Oe={};ne(Oe,{default:()=>X,frontmatter:()=>je});var e=re(f());var D=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Static Actions\">\n        <DropdownItem key=\"new\">New file</DropdownItem>\n        <DropdownItem key=\"copy\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var le={\"/App.jsx\":D},g={...le};var y=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@heroui/react\";\n\nexport default function App() {\n  const items = [\n    {\n      key: \"new\",\n      label: \"New file\",\n    },\n    {\n      key: \"copy\",\n      label: \"Copy link\",\n    },\n    {\n      key: \"edit\",\n      label: \"Edit file\",\n    },\n    {\n      key: \"delete\",\n      label: \"Delete file\",\n    },\n  ];\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Dynamic Actions\" items={items}>\n        {(item) => (\n          <DropdownItem\n            key={item.key}\n            className={item.key === \"delete\" ? \"text-danger\" : \"\"}\n            color={item.key === \"delete\" ? \"danger\" : \"default\"}\n          >\n            {item.label}\n          </DropdownItem>\n        )}\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var se={\"/App.jsx\":y},b={...se};var I=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Example with disabled actions\" disabledKeys={[\"edit\", \"delete\"]}>\n        <DropdownItem key=\"new\">New file</DropdownItem>\n        <DropdownItem key=\"copy\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var pe={\"/App.jsx\":I},v={...pe};var C=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Action event example\" onAction={(key) => alert(key)}>\n        <DropdownItem key=\"new\">New file</DropdownItem>\n        <DropdownItem key=\"copy\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var ue={\"/App.jsx\":C},k={...ue};var x=`import {\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n  RadioGroup,\n  Radio,\n} from \"@heroui/react\";\n\nexport default function App() {\n  const [selectedColor, setSelectedColor] = React.useState(\"default\");\n\n  const variants = [\"solid\", \"bordered\", \"light\", \"flat\", \"faded\", \"shadow\"];\n\n  const DropdownContent = ({variant, color}) => (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button className=\"capitalize\" color={color} variant={variant}>\n          {variant}\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Dropdown Variants\" color={color} variant={variant}>\n        <DropdownItem key=\"new\">New file</DropdownItem>\n        <DropdownItem key=\"copy\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      {variants.map((variant) => (\n        <DropdownContent key={variant} color={selectedColor} variant={variant} />\n      ))}\n      <RadioGroup\n        color={selectedColor}\n        defaultValue=\"default\"\n        label=\"Select dropdown color\"\n        orientation=\"horizontal\"\n        onValueChange={setSelectedColor}\n      >\n        <Radio value=\"default\">Default</Radio>\n        <Radio value=\"primary\">Primary</Radio>\n        <Radio value=\"secondary\">Secondary</Radio>\n        <Radio value=\"success\">Success</Radio>\n        <Radio value=\"warning\">Warning</Radio>\n        <Radio value=\"danger\">Danger</Radio>\n      </RadioGroup>\n    </div>\n  );\n}\n`;var we={\"/App.jsx\":x},M={...we};var T=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@heroui/react\";\n\nexport default function App() {\n  const [selectedKeys, setSelectedKeys] = React.useState(new Set([\"text\"]));\n\n  const selectedValue = React.useMemo(\n    () => Array.from(selectedKeys).join(\", \").replace(/_/g, \"\"),\n    [selectedKeys],\n  );\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button className=\"capitalize\" variant=\"bordered\">\n          {selectedValue}\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu\n        disallowEmptySelection\n        aria-label=\"Single selection example\"\n        selectedKeys={selectedKeys}\n        selectionMode=\"single\"\n        variant=\"flat\"\n        onSelectionChange={setSelectedKeys}\n      >\n        <DropdownItem key=\"text\">Text</DropdownItem>\n        <DropdownItem key=\"number\">Number</DropdownItem>\n        <DropdownItem key=\"date\">Date</DropdownItem>\n        <DropdownItem key=\"single_date\">Single Date</DropdownItem>\n        <DropdownItem key=\"iteration\">Iteration</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var S=`import type {Selection} from \"@heroui/react\";\n\nimport React from \"react\";\nimport {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@heroui/react\";\n\nexport default function App() {\n  const [selectedKeys, setSelectedKeys] = React.useState<Selection>(new Set([\"text\"]));\n\n  const selectedValue = React.useMemo(\n    () => Array.from(selectedKeys).join(\", \").replace(/_/g, \"\"),\n    [selectedKeys],\n  );\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button className=\"capitalize\" variant=\"bordered\">\n          {selectedValue}\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu\n        disallowEmptySelection\n        aria-label=\"Single selection example\"\n        selectedKeys={selectedKeys}\n        selectionMode=\"single\"\n        variant=\"flat\"\n        onSelectionChange={setSelectedKeys}\n      >\n        <DropdownItem key=\"text\">Text</DropdownItem>\n        <DropdownItem key=\"number\">Number</DropdownItem>\n        <DropdownItem key=\"date\">Date</DropdownItem>\n        <DropdownItem key=\"single_date\">Single Date</DropdownItem>\n        <DropdownItem key=\"iteration\">Iteration</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var ge={\"/App.jsx\":T},ye={\"/App.tsx\":S},A={...ge,...ye};var N=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@heroui/react\";\n\nexport default function App() {\n  const [selectedKeys, setSelectedKeys] = React.useState(new Set([\"text\"]));\n\n  const selectedValue = React.useMemo(\n    () => Array.from(selectedKeys).join(\", \").replaceAll(\"_\", \" \"),\n    [selectedKeys],\n  );\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button className=\"capitalize\" variant=\"bordered\">\n          {selectedValue}\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu\n        disallowEmptySelection\n        aria-label=\"Multiple selection example\"\n        closeOnSelect={false}\n        selectedKeys={selectedKeys}\n        selectionMode=\"multiple\"\n        variant=\"flat\"\n        onSelectionChange={setSelectedKeys}\n      >\n        <DropdownItem key=\"text\">Text</DropdownItem>\n        <DropdownItem key=\"number\">Number</DropdownItem>\n        <DropdownItem key=\"date\">Date</DropdownItem>\n        <DropdownItem key=\"single_date\">Single Date</DropdownItem>\n        <DropdownItem key=\"iteration\">Iteration</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var R=`import type {Selection} from \"@heroui/react\";\n\nimport React from \"react\";\nimport {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@heroui/react\";\n\nexport default function App() {\n  const [selectedKeys, setSelectedKeys] = React.useState<Selection>(new Set([\"text\"]));\n\n  const selectedValue = React.useMemo(\n    () => Array.from(selectedKeys).join(\", \").replace(/_/g, \"\"),\n    [selectedKeys],\n  );\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button className=\"capitalize\" variant=\"bordered\">\n          {selectedValue}\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu\n        disallowEmptySelection\n        aria-label=\"Multiple selection example\"\n        closeOnSelect={false}\n        selectedKeys={selectedKeys}\n        selectionMode=\"multiple\"\n        variant=\"flat\"\n        onSelectionChange={setSelectedKeys}\n      >\n        <DropdownItem key=\"text\">Text</DropdownItem>\n        <DropdownItem key=\"number\">Number</DropdownItem>\n        <DropdownItem key=\"date\">Date</DropdownItem>\n        <DropdownItem key=\"single_date\">Single Date</DropdownItem>\n        <DropdownItem key=\"iteration\">Iteration</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var ve={\"/App.jsx\":N},Ce={\"/App.tsx\":R},B={...ve,...Ce};var K=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Dropdown menu with shortcut\" variant=\"flat\">\n        <DropdownItem key=\"new\" shortcut=\"\\u2318N\">\n          New file\n        </DropdownItem>\n        <DropdownItem key=\"copy\" shortcut=\"\\u2318C\">\n          Copy link\n        </DropdownItem>\n        <DropdownItem key=\"edit\" shortcut=\"\\u2318\\u21E7E\">\n          Edit file\n        </DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\" shortcut=\"\\u2318\\u21E7D\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var xe={\"/App.jsx\":K},P={...xe};var H=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button, cn} from \"@heroui/react\";\n\nexport const AddNoteIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const CopyDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const EditDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const DeleteDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z\"\n        fill=\"currentColor\"\n        opacity={0.399}\n      />\n      <path\n        clipRule=\"evenodd\"\n        d=\"M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  const iconClasses = \"text-xl text-default-500 pointer-events-none flex-shrink-0\";\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Dropdown menu with icons\" variant=\"faded\">\n        <DropdownItem\n          key=\"new\"\n          shortcut=\"\\u2318N\"\n          startContent={<AddNoteIcon className={iconClasses} />}\n        >\n          New file\n        </DropdownItem>\n        <DropdownItem\n          key=\"copy\"\n          shortcut=\"\\u2318C\"\n          startContent={<CopyDocumentIcon className={iconClasses} />}\n        >\n          Copy link\n        </DropdownItem>\n        <DropdownItem\n          key=\"edit\"\n          shortcut=\"\\u2318\\u21E7E\"\n          startContent={<EditDocumentIcon className={iconClasses} />}\n        >\n          Edit file\n        </DropdownItem>\n        <DropdownItem\n          key=\"delete\"\n          className=\"text-danger\"\n          color=\"danger\"\n          shortcut=\"\\u2318\\u21E7D\"\n          startContent={<DeleteDocumentIcon className={cn(iconClasses, \"text-danger\")} />}\n        >\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var Te={\"/App.jsx\":H},Z={...Te};var V=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button, cn} from \"@heroui/react\";\n\nexport const AddNoteIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const CopyDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const EditDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const DeleteDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z\"\n        fill=\"currentColor\"\n        opacity={0.399}\n      />\n      <path\n        clipRule=\"evenodd\"\n        d=\"M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  const iconClasses = \"text-xl text-default-500 pointer-events-none flex-shrink-0\";\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Dropdown menu with description\" variant=\"faded\">\n        <DropdownItem\n          key=\"new\"\n          description=\"Create a new file\"\n          shortcut=\"\\u2318N\"\n          startContent={<AddNoteIcon className={iconClasses} />}\n        >\n          New file\n        </DropdownItem>\n        <DropdownItem\n          key=\"copy\"\n          description=\"Copy the file link\"\n          shortcut=\"\\u2318C\"\n          startContent={<CopyDocumentIcon className={iconClasses} />}\n        >\n          Copy link\n        </DropdownItem>\n        <DropdownItem\n          key=\"edit\"\n          showDivider\n          description=\"Allows you to edit the file\"\n          shortcut=\"\\u2318\\u21E7E\"\n          startContent={<EditDocumentIcon className={iconClasses} />}\n        >\n          Edit file\n        </DropdownItem>\n        <DropdownItem\n          key=\"delete\"\n          className=\"text-danger\"\n          color=\"danger\"\n          description=\"Permanently delete the file\"\n          shortcut=\"\\u2318\\u21E7D\"\n          startContent={<DeleteDocumentIcon className={cn(iconClasses, \"text-danger\")} />}\n        >\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var Ae={\"/App.jsx\":V},E={...Ae};var W=`import {\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownSection,\n  DropdownItem,\n  Button,\n  cn,\n} from \"@heroui/react\";\n\nexport const AddNoteIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const CopyDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const EditDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const DeleteDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z\"\n        fill=\"currentColor\"\n        opacity={0.399}\n      />\n      <path\n        clipRule=\"evenodd\"\n        d=\"M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  const iconClasses = \"text-xl text-default-500 pointer-events-none flex-shrink-0\";\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Dropdown menu with description\" variant=\"faded\">\n        <DropdownSection showDivider title=\"Actions\">\n          <DropdownItem\n            key=\"new\"\n            description=\"Create a new file\"\n            shortcut=\"\\u2318N\"\n            startContent={<AddNoteIcon className={iconClasses} />}\n          >\n            New file\n          </DropdownItem>\n          <DropdownItem\n            key=\"copy\"\n            description=\"Copy the file link\"\n            shortcut=\"\\u2318C\"\n            startContent={<CopyDocumentIcon className={iconClasses} />}\n          >\n            Copy link\n          </DropdownItem>\n          <DropdownItem\n            key=\"edit\"\n            description=\"Allows you to edit the file\"\n            shortcut=\"\\u2318\\u21E7E\"\n            startContent={<EditDocumentIcon className={iconClasses} />}\n          >\n            Edit file\n          </DropdownItem>\n        </DropdownSection>\n        <DropdownSection title=\"Danger zone\">\n          <DropdownItem\n            key=\"delete\"\n            className=\"text-danger\"\n            color=\"danger\"\n            description=\"Permanently delete the file\"\n            shortcut=\"\\u2318\\u21E7D\"\n            startContent={<DeleteDocumentIcon className={cn(iconClasses, \"text-danger\")} />}\n          >\n            Delete file\n          </DropdownItem>\n        </DropdownSection>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var Re={\"/App.jsx\":W},j={...Re};var O=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Avatar, User} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      <Dropdown placement=\"bottom-end\">\n        <DropdownTrigger>\n          <Avatar\n            isBordered\n            as=\"button\"\n            className=\"transition-transform\"\n            src=\"https://i.pravatar.cc/150?u=a042581f4e29026704d\"\n          />\n        </DropdownTrigger>\n        <DropdownMenu aria-label=\"Profile Actions\" variant=\"flat\">\n          <DropdownItem key=\"profile\" className=\"h-14 gap-2\">\n            <p className=\"font-semibold\">Signed in as</p>\n            <p className=\"font-semibold\">zoey@example.com</p>\n          </DropdownItem>\n          <DropdownItem key=\"settings\">My Settings</DropdownItem>\n          <DropdownItem key=\"team_settings\">Team Settings</DropdownItem>\n          <DropdownItem key=\"analytics\">Analytics</DropdownItem>\n          <DropdownItem key=\"system\">System</DropdownItem>\n          <DropdownItem key=\"configurations\">Configurations</DropdownItem>\n          <DropdownItem key=\"help_and_feedback\">Help & Feedback</DropdownItem>\n          <DropdownItem key=\"logout\" color=\"danger\">\n            Log Out\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n      <Dropdown placement=\"bottom-start\">\n        <DropdownTrigger>\n          <User\n            as=\"button\"\n            avatarProps={{\n              isBordered: true,\n              src: \"https://i.pravatar.cc/150?u=a042581f4e29026024d\",\n            }}\n            className=\"transition-transform\"\n            description=\"@tonyreichert\"\n            name=\"Tony Reichert\"\n          />\n        </DropdownTrigger>\n        <DropdownMenu aria-label=\"User Actions\" variant=\"flat\">\n          <DropdownItem key=\"profile\" className=\"h-14 gap-2\">\n            <p className=\"font-bold\">Signed in as</p>\n            <p className=\"font-bold\">@tonyreichert</p>\n          </DropdownItem>\n          <DropdownItem key=\"settings\">My Settings</DropdownItem>\n          <DropdownItem key=\"team_settings\">Team Settings</DropdownItem>\n          <DropdownItem key=\"analytics\">Analytics</DropdownItem>\n          <DropdownItem key=\"system\">System</DropdownItem>\n          <DropdownItem key=\"configurations\">Configurations</DropdownItem>\n          <DropdownItem key=\"help_and_feedback\">Help & Feedback</DropdownItem>\n          <DropdownItem key=\"logout\" color=\"danger\">\n            Log Out\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    </div>\n  );\n}\n`;var Ke={\"/App.jsx\":O},_={...Ke};var L=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Dropdown backdrop=\"blur\">\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Static Actions\" variant=\"faded\">\n        <DropdownItem key=\"new\">New file</DropdownItem>\n        <DropdownItem key=\"copy\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var He={\"/App.jsx\":L},z={...He};var U=`import {\n  Dropdown,\n  DropdownSection,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n  cn,\n} from \"@heroui/react\";\n\nexport const AddNoteIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const CopyDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const EditDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z\"\n        fill=\"currentColor\"\n        opacity={0.4}\n      />\n      <path\n        d=\"M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const DeleteDocumentIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z\"\n        fill=\"currentColor\"\n        opacity={0.399}\n      />\n      <path\n        clipRule=\"evenodd\"\n        d=\"M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  const iconClasses = \"text-xl text-default-500 pointer-events-none flex-shrink-0\";\n\n  return (\n    <Dropdown\n      showArrow\n      classNames={{\n        base: \"before:bg-default-200\", // change arrow background\n        content:\n          \"py-1 px-1 border border-default-200 bg-gradient-to-br from-white to-default-200 dark:from-default-50 dark:to-black\",\n      }}\n    >\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Dropdown menu with description\" variant=\"faded\">\n        <DropdownSection title=\"Actions\">\n          <DropdownItem\n            key=\"new\"\n            description=\"Create a new file\"\n            shortcut=\"\\u2318N\"\n            startContent={<AddNoteIcon className={iconClasses} />}\n          >\n            New file\n          </DropdownItem>\n          <DropdownItem\n            key=\"copy\"\n            description=\"Copy the file link\"\n            shortcut=\"\\u2318C\"\n            startContent={<CopyDocumentIcon className={iconClasses} />}\n          >\n            Copy link\n          </DropdownItem>\n          <DropdownItem\n            key=\"edit\"\n            description=\"Allows you to edit the file\"\n            shortcut=\"\\u2318\\u21E7E\"\n            startContent={<EditDocumentIcon className={iconClasses} />}\n          >\n            Edit file\n          </DropdownItem>\n        </DropdownSection>\n        <DropdownSection title=\"Danger zone\">\n          <DropdownItem\n            key=\"delete\"\n            className=\"text-danger\"\n            color=\"danger\"\n            description=\"Permanently delete the file\"\n            shortcut=\"\\u2318\\u21E7D\"\n            startContent={<DeleteDocumentIcon className={cn(iconClasses, \"text-danger\")} />}\n          >\n            Delete file\n          </DropdownItem>\n        </DropdownSection>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var Ve={\"/App.jsx\":U},F={...Ve};var q=`import {\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownSection,\n  DropdownItem,\n  Button,\n  User,\n} from \"@heroui/react\";\n\nexport const PlusIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <g\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n      >\n        <path d=\"M6 12h12\" />\n        <path d=\"M12 18V6\" />\n      </g>\n    </svg>\n  );\n};\n\nexport default function App() {\n  return (\n    <Dropdown\n      showArrow\n      classNames={{\n        base: \"before:bg-default-200\", // change arrow background\n        content: \"p-0 border-small border-divider bg-background\",\n      }}\n      radius=\"sm\"\n    >\n      <DropdownTrigger>\n        <Button disableRipple variant=\"ghost\">\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu\n        aria-label=\"Custom item styles\"\n        className=\"p-3\"\n        disabledKeys={[\"profile\"]}\n        itemClasses={{\n          base: [\n            \"rounded-md\",\n            \"text-default-500\",\n            \"transition-opacity\",\n            \"data-[hover=true]:text-foreground\",\n            \"data-[hover=true]:bg-default-100\",\n            \"dark:data-[hover=true]:bg-default-50\",\n            \"data-[selectable=true]:focus:bg-default-50\",\n            \"data-[pressed=true]:opacity-70\",\n            \"data-[focus-visible=true]:ring-default-500\",\n          ],\n        }}\n      >\n        <DropdownSection showDivider aria-label=\"Profile & Actions\">\n          <DropdownItem key=\"profile\" isReadOnly className=\"h-14 gap-2 opacity-100\">\n            <User\n              avatarProps={{\n                size: \"sm\",\n                src: \"https://avatars.githubusercontent.com/u/30373425?v=4\",\n              }}\n              classNames={{\n                name: \"text-default-600\",\n                description: \"text-default-500\",\n              }}\n              description=\"@jrgarciadev\"\n              name=\"Junior Garcia\"\n            />\n          </DropdownItem>\n          <DropdownItem key=\"dashboard\">Dashboard</DropdownItem>\n          <DropdownItem key=\"settings\">Settings</DropdownItem>\n          <DropdownItem key=\"new_project\" endContent={<PlusIcon className=\"text-large\" />}>\n            New Project\n          </DropdownItem>\n        </DropdownSection>\n\n        <DropdownSection showDivider aria-label=\"Preferences\">\n          <DropdownItem key=\"quick_search\" shortcut=\"\\u2318K\">\n            Quick search\n          </DropdownItem>\n          <DropdownItem\n            key=\"theme\"\n            isReadOnly\n            className=\"cursor-default\"\n            endContent={\n              <select\n                className=\"z-10 outline-none w-16 py-0.5 rounded-md text-tiny group-data-[hover=true]:border-default-500 border-small border-default-300 dark:border-default-200 bg-transparent text-default-500\"\n                id=\"theme\"\n                name=\"theme\"\n              >\n                <option>System</option>\n                <option>Dark</option>\n                <option>Light</option>\n              </select>\n            }\n          >\n            Theme\n          </DropdownItem>\n        </DropdownSection>\n\n        <DropdownSection aria-label=\"Help & Feedback\">\n          <DropdownItem key=\"help_and_feedback\">Help & Feedback</DropdownItem>\n          <DropdownItem key=\"logout\">Log Out</DropdownItem>\n        </DropdownSection>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`;var We={\"/App.jsx\":q},Y={...We};var i={usage:g,dynamic:b,disabledKeys:v,action:k,variants:M,singleSelection:A,multipleSelection:B,shortcut:P,icons:Z,description:E,sections:j,customTrigger:_,backdrop:z,customPopoverStyles:F,customItemsStyles:Y};var je={title:\"Dropdown\",description:\"Displays a list of actions or options that a user can choose.\"};function G(o){let t={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...o.components},{APITable:r,CarbonAd:a,CodeDemo:n,ComponentLinks:p,ImportTabs:h,Kbd:d,PackageManagers:u,Spacer:s}=t;return r||l(\"APITable\",!0),a||l(\"CarbonAd\",!0),n||l(\"CodeDemo\",!0),p||l(\"ComponentLinks\",!0),h||l(\"ImportTabs\",!0),d||l(\"Kbd\",!0),u||l(\"PackageManagers\",!0),s||l(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:\"dropdown\",children:\"Dropdown\"}),`\n`,(0,e.jsx)(t.p,{children:\"Displays a list of actions or options that a user can choose.\"}),`\n`,(0,e.jsx)(p,{component:\"dropdown\",reactAriaHook:\"useMenu\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(a,{}),`\n`,(0,e.jsx)(t.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(u,{showGlobalInstallWarning:!0,commands:{cli:\"npx heroui-cli@latest add dropdown\",npm:\"npm install @heroui/dropdown\",yarn:\"yarn add @heroui/dropdown\",pnpm:\"pnpm add @heroui/dropdown\",bun:\"bun add @heroui/dropdown\"}}),`\n`,(0,e.jsx)(t.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(t.p,{children:\"HeroUI exports 5 dropdown-related components:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"Dropdown\"}),\": The main component, which is a wrapper for the other components. This component is an extension of the \",(0,e.jsx)(t.a,{href:\"/docs/components/popover\",children:\"Popover\"}),\" component, so it accepts all the props of the Popover component.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"DropdownTrigger\"}),\": The component that triggers the dropdown menu to open.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"DropdownMenu\"}),\": The component that contains the dropdown items.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"DropdownSection\"}),\": The component that contains a group of dropdown items.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"DropdownItem\"}),\": The component that represents a dropdown item.\"]}),`\n`]}),`\n`,(0,e.jsx)(h,{commands:{main:`import {\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownSection,\n  DropdownItem\n} from \"@heroui/react\";`,individual:`import {\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownSection,\n  DropdownItem\n} from \"@heroui/dropdown\";`}}),`\n`,(0,e.jsx)(t.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(n,{title:\"Usage\",files:i.usage}),`\n`,(0,e.jsx)(t.h3,{id:\"dynamic-items\",children:\"Dynamic items\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Dropdown follows the \",(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-stately/collections.html\",children:\"Collection Components API\"}),\", accepting both static and dynamic collections.\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"Static\"}),\": The usage example above shows the static implementation, which can be used when the full list of options is known ahead of time.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"Dynamic\"}),\": The example below can be used when the options come from an external data source such as an API call, or update over time.\"]}),`\n`]}),`\n`,(0,e.jsx)(n,{title:\"Dynamic items\",files:i.dynamic}),`\n`,(0,e.jsx)(t.h3,{id:\"disabled-keys\",children:\"Disabled Keys\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Dropdown items can be disabled using the \",(0,e.jsx)(t.code,{children:\"disabledKeys\"}),\" prop to the \",(0,e.jsx)(t.code,{children:\"DropdownMenu\"}),\" component.\"]}),`\n`,(0,e.jsx)(n,{title:\"Disabled Keys\",files:i.disabledKeys}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": It's important to have a unique key for each item, otherwise the disabled keys will not work.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"action-event\",children:\"Action event\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"onAction\"}),\" prop to get the key of the selected item.\"]}),`\n`,(0,e.jsx)(n,{title:\"Action event\",files:i.action}),`\n`,(0,e.jsx)(t.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"variant\"}),\" in the \",(0,e.jsx)(t.code,{children:\"DropdownMenu\"}),\" component to change the \",(0,e.jsx)(t.code,{children:\"hover\"}),\" style of the dropdown items.\"]}),`\n`,(0,e.jsx)(n,{title:\"Variants\",files:i.variants}),`\n`,(0,e.jsx)(t.h3,{id:\"single-selection\",children:\"Single Selection\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can set the \",(0,e.jsx)(t.code,{children:\"selectionMode\"}),\" property as \",(0,e.jsx)(t.code,{children:\"single\"}),\" to allow the user to select only one item at a time.\"]}),`\n`,(0,e.jsx)(n,{title:\"Single Selection\",files:i.singleSelection}),`\n`,(0,e.jsx)(t.h3,{id:\"multiple-selection\",children:\"Multiple Selection\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can set the \",(0,e.jsx)(t.code,{children:\"selectionMode\"}),\" property as \",(0,e.jsx)(t.code,{children:\"multiple\"}),\" to allow the user to select multiple items at a time.\"]}),`\n`,(0,e.jsx)(n,{title:\"Multiple Selection\",files:i.multipleSelection}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": To allow empty selection, you can set the \",(0,e.jsx)(t.code,{children:\"disallowEmptySelection\"}),\" property as \",(0,e.jsx)(t.code,{children:\"false\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"with-shortcut\",children:\"With Shortcut\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"shortcut\"}),\" prop to add a shortcut to the dropdown item.\"]}),`\n`,(0,e.jsx)(n,{title:\"With Shortcut\",files:i.shortcut}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": Dropdown does not handle the shortcut event, you need to handle it yourself.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"with-icons\",children:\"With Icons\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"It is possible to add icons to the dropdown items using the \",(0,e.jsx)(t.code,{children:\"startContent\"}),\" / \",(0,e.jsx)(t.code,{children:\"endContent\"}),\" props.\"]}),`\n`,(0,e.jsx)(n,{title:\"With Icons\",files:i.icons}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": If you use \",(0,e.jsx)(t.code,{children:\"currentColor\"}),\" as the icon color, the icon will have the same color as the item text.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"with-description\",children:\"With Description\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"description\"}),\" prop to add a description to the dropdown item.\"]}),`\n`,(0,e.jsx)(n,{title:\"With Description\",files:i.description}),`\n`,(0,e.jsx)(t.h3,{id:\"with-sections\",children:\"With Sections\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"DropdownSection\"}),\" component to group dropdown items.\"]}),`\n`,(0,e.jsx)(n,{title:\"With Sections\",files:i.sections}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": Sections without a \",(0,e.jsx)(t.code,{children:\"title\"}),\" must provide an \",(0,e.jsx)(t.code,{children:\"aria-label\"}),\" for accessibility.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-trigger\",children:\"Custom Trigger\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use any component as a trigger for the dropdown menu, just wrap it in the \",(0,e.jsx)(t.code,{children:\"DropdownTrigger\"}),\" component.\"]}),`\n`,(0,e.jsx)(n,{title:\"Custom Trigger\",files:i.customTrigger}),`\n`,(0,e.jsx)(t.h3,{id:\"changing-the-backdrop\",children:\"Changing the backdrop\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"As we mentioned earlier, the \",(0,e.jsx)(t.code,{children:\"Dropdown\"}),\" component is an extension of the \",(0,e.jsx)(t.a,{href:\"/docs/components/popover\",children:\"Popover\"}),` component,\nso it accepts all the props of the Popover component, including the `,(0,e.jsx)(t.code,{children:\"backdrop\"}),\" prop.\"]}),`\n`,(0,e.jsx)(n,{title:\"Changing the backdrop\",files:i.backdrop}),`\n`,(0,e.jsx)(t.h3,{id:\"routing\",children:\"Routing\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"The \",(0,e.jsx)(t.code,{children:\"<DropdownItem>\"}),\" component works with frameworks and client side routers like \",(0,e.jsx)(t.a,{href:\"https://nextjs.org/\",children:\"Next.js\"}),` and\n`,(0,e.jsx)(t.a,{href:\"https://reactrouter.com/en/main\",children:\"React Router\"}),\". See the \",(0,e.jsx)(t.a,{href:\"/docs/guide/routing\",children:\"Routing\"}),\" guide to learn how to set this up.\"]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-jsx\",children:`import {Dropdown, DropdownMenu, DropdownTrigger, DropdownItem, Button} from \"@heroui/react\";\n\nfunction App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Link Actions\">\n        <DropdownItem key=\"home\" href=\"/home\">\n          Home\n        </DropdownItem>\n        <DropdownItem key=\"about\" href=\"/about\">\n          About\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`})}),`\n`,(0,e.jsx)(t.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Dropdown has 3 components with slots the \",(0,e.jsx)(t.code,{children:\"DropdownMenu\"}),\", \",(0,e.jsx)(t.code,{children:\"DropdownItem\"}),\" and \",(0,e.jsx)(t.code,{children:\"DropdownSection\"}),\" components.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdownmenu\",children:\"DropdownMenu\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),\": The main wrapper for the menu component. This slot wraps the \",(0,e.jsx)(t.code,{children:\"topContent\"}),\", \",(0,e.jsx)(t.code,{children:\"bottomContent\"}),\" and the \",(0,e.jsx)(t.code,{children:\"list\"}),\" slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"list\"}),\": The slot for the menu list component. You can see this slot as the \",(0,e.jsx)(t.code,{children:\"ul\"}),\" slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"emptyContent\"}),\": The slot content to display when the collection is empty.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdownitem\",children:\"DropdownItem\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),\": The main slot for the dropdown item. It wraps all the other slots.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"wrapper\"}),\": The \",(0,e.jsx)(t.code,{children:\"title\"}),\" and \",(0,e.jsx)(t.code,{children:\"description\"}),\" wrapper.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"title\"}),\": The title of the dropdown item.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"description\"}),\": The description of the dropdown item.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"shortcut\"}),\": The shortcut slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"selectedIcon\"}),\": The selected icon slot. This is only visible when the item is selected.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdownsection\",children:\"DropdownSection\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),\": The main slot for the dropdown section. It wraps all the other slots.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"heading\"}),\": The title that is render on top of the section group.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"group\"}),\": The group of dropdown items.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"divider\"}),\": The divider that is render between the groups. This is only visible when \",(0,e.jsx)(t.code,{children:\"showDivider\"}),\" is \",(0,e.jsx)(t.code,{children:\"true\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"customizing-the-dropdown-popover\",children:\"Customizing the dropdown popover\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"The \",(0,e.jsx)(t.code,{children:\"Dropdown\"}),\" component is an extension of the \",(0,e.jsx)(t.a,{href:\"/docs/components/popover\",children:\"Popover\"}),` component, so you can use the same\nslots to customize the dropdown.`]}),`\n`,(0,e.jsx)(n,{title:\"Custom Popover Styles\",files:i.customPopoverStyles}),`\n`,(0,e.jsx)(t.h3,{id:\"customizing-the-dropdown-items-style\",children:\"Customizing the dropdown items style\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize the dropdown items either by using the \",(0,e.jsx)(t.code,{children:\"DropdownMenu\"}),\" \",(0,e.jsx)(t.code,{children:\"itemClasses\"}),` prop or by using the\n`,(0,e.jsx)(t.code,{children:\"DropdownItem\"}),\" slots, the \",(0,e.jsx)(t.code,{children:\"itemClasses\"}),` allows you to customize all the items at once, while the slots allow\nyou to customize each item individually.`]}),`\n`,(0,e.jsx)(n,{title:\"Custom Dropdown Items Styles\",files:i.customItemsStyles}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(t.h3,{id:\"keyboard-interactions\",children:\"Keyboard Interactions\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Key\"}),(0,e.jsx)(t.th,{children:\"Description\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:(0,e.jsx)(d,{children:\"Space\"})}),(0,e.jsxs)(t.td,{children:[\"When focus is on \",(0,e.jsx)(t.code,{children:\"DropdownTrigger\"}),\", opens the dropdown menu and focuses the first item. When focus is on an item, activates the focused item.\"]})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:(0,e.jsx)(d,{children:\"Enter\"})}),(0,e.jsxs)(t.td,{children:[\"When focus is on \",(0,e.jsx)(t.code,{children:\"DropdownTrigger\"}),\", opens the dropdown menu and focuses the first item. When focus is on an item, activates the focused item.\"]})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:(0,e.jsx)(d,{children:\"ArrowDown\"})}),(0,e.jsxs)(t.td,{children:[\"When focus is on \",(0,e.jsx)(t.code,{children:\"DropdownTrigger\"}),\", opens the dropdown menu. When focus is on an item, moves focus to the next item.\"]})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:(0,e.jsx)(d,{children:\"ArrowUp\"})}),(0,e.jsx)(t.td,{children:\"When focus is on an item, moves focus to the previous item.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:(0,e.jsx)(d,{children:\"Esc\"})}),(0,e.jsxs)(t.td,{children:[\"Closes the dropdown menu and moves focus to \",(0,e.jsx)(t.code,{children:\"DropdownTrigger\"}),\".\"]})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsxs)(t.td,{children:[(0,e.jsx)(d,{children:\"A-Z\"}),\" or \",(0,e.jsx)(d,{children:\"a-z\"})]}),(0,e.jsx)(t.td,{children:\"When the menu is open, moves focus to the next menu item with a label that starts with the typed character if such an menu item exists.\"})]})]})]}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"DropdownItem\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-disabled\"}),`:\nWhen the dropdown item is disabled. Based on dropdown `,(0,e.jsx)(t.code,{children:\"disabledKeys\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-selected\"}),`:\nWhen the dropdown item is selected. Based on dropdown `,(0,e.jsx)(t.code,{children:\"selectedKeys\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-hover\"}),`:\nWhen the dropdown item is being hovered. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-pressed\"}),`:\nWhen the dropdown item is pressed. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus\"}),`:\nWhen the dropdown item is being focused. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus-visible\"}),`:\nWhen the dropdown item is being focused with the keyboard. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Exposed to assistive technology as a \",(0,e.jsx)(t.code,{children:\"button\"}),\" with a \",(0,e.jsx)(t.code,{children:\"menu\"}),\" using ARIA.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Support for single, multiple, or no selection.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Support for disabled items.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Support for sections.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Complex item labeling support for accessibility.\"}),`\n`,(0,e.jsxs)(t.li,{children:[\"Keyboard navigation support including arrow keys, home/end, page up/down. See \",(0,e.jsx)(t.a,{href:\"#keyboard-interactions\",children:\"Keyboard Interactions\"}),\" for more details.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Automatic scrolling support during keyboard navigation.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Keyboard support for opening the menu using the arrow keys, including automatically focusing the first or last item accordingly.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Typeahead to allow focusing items by typing text.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Virtualized scrolling support for performance with long lists.\"}),`\n`]}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdown-props\",children:\"Dropdown Props\"}),`\n`,(0,e.jsx)(r,{data:[{attribute:\"children*\",type:\"ReactNode[]\",description:\"The children to render. Usually a DropdownTrigger and DropdownMenu elements.\",default:\"-\"},{attribute:\"type\",type:\"menu | listbox\",description:\"Type of overlay that is opened by the dropdown trigger.\",default:\"menu\"},{attribute:\"trigger\",type:\"press | longPress\",description:\"How the dropdown menu is triggered.\",default:\"press\"},{attribute:\"isDisabled\",type:\"boolean\",description:\"Whether the dropdown trigger is disabled.\",default:\"false\"},{attribute:\"closeOnSelect\",type:\"boolean\",description:\"Whether the dropdown menu should be closed when an item is selected.\",default:\"true\"},{attribute:\"shouldBlockScroll\",type:\"boolean\",description:\"Whether the dropdown menu should block scrolling outside the menu.\",default:\"true\"},{attribute:\"PopoverProps\",type:\"PopoverProps\",description:\"Since the dropdown is an extension of the popover, it accepts all the props of the popover component.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdown-events\",children:\"Dropdown Events\"}),`\n`,(0,e.jsx)(r,{data:[{attribute:\"onOpenChange\",type:\"(isOpen: boolean) => void\",description:\"Handler that is called when the dropdown's open state changes.\",default:\"-\"},{attribute:\"shouldCloseOnInteractOutside\",type:\"(e: HTMLElement) => void\",description:\"When user interacts with the argument element outside of the dropdown ref, return true if onClose should be called.\",default:\"-\"},{attribute:\"onClose\",type:\"() => void\",description:\"Handler that is called when the dropdown should close.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdowntrigger-props\",children:\"DropdownTrigger Props\"}),`\n`,(0,e.jsx)(r,{data:[{attribute:\"children\",type:\"ReactNode\",description:\"The dropdown trigger component, ensure the children passed is focusable. Users can tab to it using their keyboard, and it can take a ref. It is critical for accessibility.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdownmenu-props\",children:\"DropdownMenu Props\"}),`\n`,(0,e.jsx)(r,{data:[{attribute:\"children*\",type:\"ReactNode | ((item: T) => ReactElement)\",description:\"The contents of the collection. It's usually the DropdownItem or DropdownSection. (static)\",default:\"-\"},{attribute:\"items\",type:\"Iterable<T>\",description:\"Item objects in the collection. (dynamic)\",default:\"-\"},{attribute:\"variant\",type:\"solid | bordered | light | flat | faded | shadow\",description:\"The dropdown items appearance style.\",default:\"solid\"},{attribute:\"color\",type:\"default | primary | secondary | success | warning | danger\",description:\"The dropdown items color theme.\",default:\"default\"},{attribute:\"selectionMode\",type:\"none | single | multiple\",description:\"The type of selection that is allowed in the collection.\",default:\"-\"},{attribute:\"selectedKeys\",type:\"all | Iterable<React.Key>\",description:\"The currently selected keys in the collection (controlled).\",default:\"-\"},{attribute:\"disabledKeys\",type:\"Iterable<React.Key>\",description:\"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\",default:\"-\"},{attribute:\"defaultSelectedKeys\",type:\"all | Iterable<React.Key>\",description:\"The initial selected keys in the collection (uncontrolled).\",default:\"-\"},{attribute:\"disallowEmptySelection\",type:\"boolean\",description:\"Whether the collection allows empty selection.\",default:\"false\"},{attribute:\"autoFocus\",type:\"boolean | first | last\",description:\"Where the focus should be set.\",default:\"false\"},{attribute:\"topContent\",type:\"ReactNode\",description:\"The content to display above the listbox items.\",default:\"-\"},{attribute:\"bottomContent\",type:\"ReactNode\",description:\"The content to display below the listbox items.\",default:\"-\"},{attribute:\"emptyContent\",type:\"ReactNode\",description:\"The content to display when the collection is empty.\",default:\"No items.\"},{attribute:\"hideEmptyContent\",type:\"boolean\",description:\"Whether to not display the empty content when the collection is empty.\",default:\"false\"},{attribute:\"hideSelectedIcon\",type:\"boolean\",description:\"Whether to hide the check icon when the items are selected.\",default:\"false\"},{attribute:\"shouldFocusWrap\",type:\"boolean\",description:\"Whether keyboard navigation is circular.\",default:\"false\"},{attribute:\"closeOnSelect\",type:\"boolean\",description:\"Whether the dropdown menu should be closed when an item is selected.\",default:\"true\"},{attribute:\"disableAnimation\",type:\"boolean\",description:\"Whether to disable the animation of the dropdown items.\",default:\"false\"},{attribute:\"classNames\",type:\"Partial<Record<'base'\\uFF5C'list'\\uFF5C'emptyContent', string>>\",description:\"Allows to set custom class names for the dropdown menu slots.\",default:\"-\"},{attribute:\"itemClasses\",type:\"Partial<Record<'base'\\uFF5C'wrapper'\\uFF5C'title'\\uFF5C'description'\\uFF5C'shortcut'\\uFF5C'selectedIcon', string>>\",description:\"Allows to set custom class names for the dropdown item slots.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdownmenu-events\",children:\"DropdownMenu Events\"}),`\n`,(0,e.jsx)(r,{data:[{attribute:\"onAction\",type:\"(key: React.Key) => void\",description:\"Handler that is called when an item is selected.\",default:\"-\"},{attribute:\"onSelectionChange\",type:'(keys: \"all\" | Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void',description:\"Handler that is called when the selection changes.\",default:\"-\"},{attribute:\"onClose\",type:\"() => void\",description:\"Handler that is called when the menu should close after selecting an item.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdownsection-props\",children:\"DropdownSection Props\"}),`\n`,(0,e.jsx)(r,{data:[{attribute:\"children*\",type:\"ReactNode\",description:\"The contents of the dropdown section. Usually a list of DropdownItem components. (static)\",default:\"-\"},{attribute:\"title\",type:\"string\",description:\"The title of the dropdown section.\",default:\"-\"},{attribute:\"items\",type:\"Iterable<T>\",description:\"Item objects in the collection. (dynamic)\",default:\"-\"},{attribute:\"hideSelectedIcon\",type:\"boolean\",description:\"Whether to hide the check icon when the items are selected.\",default:\"false\"},{attribute:\"showDivider\",type:\"boolean\",description:\"Whether to show the divider between the groups.\",default:\"false\"},{attribute:\"dividerProps\",type:\"DividerProps\",description:\"The divider component props.\",default:\"-\"},{attribute:\"classNames\",type:\"Record<'base'\\uFF5C'heading'\\uFF5C'group'\\uFF5C'divider', string>>\",description:\"Allows to set custom class names for the dropdown section slots.\",default:\"-\"},{attribute:\"itemClasses\",type:\"Record<'base'\\uFF5C'wrapper'\\uFF5C'title'\\uFF5C'description'\\uFF5C'shortcut'\\uFF5C'selectedIcon', string>>\",description:\"Allows to set custom class names for the dropdown item slots.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdownitem-props\",children:\"DropdownItem Props\"}),`\n`,(0,e.jsx)(r,{data:[{attribute:\"children*\",type:\"ReactNode\",description:\"The contents of the dropdown item.\",default:\"-\"},{attribute:\"key\",type:\"React.Key\",description:\"The unique key for the dropdown item.\",default:\"-\"},{attribute:\"title\",type:\"string | ReactNode\",description:\"The title of the dropdown item.\",default:\"-\"},{attribute:\"textValue\",type:\"string\",description:\"A string representation of the item's contents, used for features like typeahead.\",default:\"-\"},{attribute:\"description\",type:\"string | ReactNode\",description:\"The description of the dropdown item.\",default:\"-\"},{attribute:\"shortcut\",type:\"string | ReactNode\",description:\"The dropdown item keyboard shortcut.\",default:\"-\"},{attribute:\"startContent\",type:\"ReactNode\",description:\"The start content of the dropdown item.\",default:\"-\"},{attribute:\"endContent\",type:\"ReactNode\",description:\"The end content of the dropdown item. This is positioned after the shortcut and the selected icon.\",default:\"-\"},{attribute:\"selectedIcon\",type:\"SelectedIconProps\",description:\"Custom icon to render when the item is selected.\",default:\"-\"},{attribute:\"showDivider\",type:\"boolean\",description:\"Whether to show a divider below the item.\",default:\"false\"},{attribute:\"href\",type:\"string\",description:\"A URL to link to. See MDN.\",default:\"-\"},{attribute:\"target\",type:\"HTMLAttributeAnchorTarget\",description:\"The target window for the link. See MDN.\",default:\"-\"},{attribute:\"rel\",type:\"string\",description:\"The relationship between the linked resource and the current page. See MDN.\",default:\"-\"},{attribute:\"download\",type:\"boolean | string\",description:\"Causes the browser to download the linked URL. A string may be provided to suggest a file name. See MDN.\",default:\"-\"},{attribute:\"ping\",type:\"string\",description:\"A space-separated list of URLs to ping when the link is followed. See MDN.\",default:\"-\"},{attribute:\"referrerPolicy\",type:\"HTMLAttributeReferrerPolicy\",description:\"How much of the referrer to send when following the link. See MDN.\",default:\"-\"},{attribute:\"isDisabled\",type:\"boolean\",description:\"Whether the dropdown item should be disabled. (Deprecated) pass disabledKeys to DropdownMenu instead.\",default:\"false\"},{attribute:\"isSelected\",type:\"boolean\",description:\"Whether the dropdown item should be selected. (Deprecated) pass selectedKeys to DropdownMenu instead.\",default:\"false\"},{attribute:\"isReadOnly\",type:\"boolean\",description:\"Whether the dropdown item press events should be ignored.\",default:\"false\"},{attribute:\"hideSelectedIcon\",type:\"boolean\",description:\"Whether to hide the check icon when the item is selected.\",default:\"false\"},{attribute:\"closeOnSelect\",type:\"boolean\",description:\"Whether the dropdown menu should be closed when the item is selected.\",default:\"true\"},{attribute:\"classNames\",type:\"Record<'base'\\uFF5C'wrapper'\\uFF5C'title'\\uFF5C'description'\\uFF5C'shortcut'\\uFF5C'selectedIcon', string>>\",description:\"Allows to set custom class names for the dropdown item slots.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"dropdownitem-events\",children:\"DropdownItem Events\"}),`\n`,(0,e.jsx)(r,{data:[{attribute:\"onAction\",type:\"() => void\",description:\"Handler that is called when the dropdown item is selected. (Deprecated) pass to DropdownMenu instead.\",default:\"-\"},{attribute:\"onClose\",type:\"() => void\",description:\"Handler that is called when the dropdown item should close after selecting. (Deprecated) pass to DropdownMenu instead.\",default:\"-\"},{attribute:\"onPress\",type:\"(e: PressEvent) => void\",description:\"Handler called when the press is released over the target.\",default:\"-\"},{attribute:\"onPressStart\",type:\"(e: PressEvent) => void\",description:\"Handler called when a press interaction starts.\",default:\"-\"},{attribute:\"onPressEnd\",type:\"(e: PressEvent) => void\",description:\"Handler called when a press interaction ends, either over the target or when the pointer leaves the target.\",default:\"-\"},{attribute:\"onPressChange\",type:\"(isPressed: boolean) => void\",description:\"Handler called when the press state changes.\",default:\"-\"},{attribute:\"onPressUp\",type:\"(e: PressEvent) => void\",description:\"Handler called when a press is released over the target, regardless of whether it started on the target or not.\",default:\"-\"},{attribute:\"onKeyDown\",type:\"(e: KeyboardEvent) => void\",description:\"Handler called when a key is pressed.\",default:\"-\"},{attribute:\"onKeyUp\",type:\"(e: KeyboardEvent) => void\",description:\"Handler called when a key is released.\",default:\"-\"},{attribute:\"onClick\",deprecated:!0,type:\"MouseEventHandler\",description:\"The native button click event handler (**Deprecated**) use **onPress** instead.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"types\",children:\"Types\"}),`\n`,(0,e.jsx)(t.h4,{id:\"dropdown-item-selected-icon-props\",children:\"Dropdown Item Selected Icon Props\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-ts\",children:`export type DropdownItemSelectedIconProps = {\n  /**\n   * The current icon, usually an checkmark icon.\n   */\n  icon?: ReactNode;\n  /**\n   * The current selected status.\n   */\n  isSelected?: boolean;\n  /**\n   * The current disabled status.\n   * @default false\n   */\n  isDisabled?: boolean;\n};\n\ntype selectedIcon?: ReactNode | ((props: DropdownItemSelectedIconProps) => ReactNode) | null;\n`})})]})}function X(o={}){let{wrapper:t}=o.components||{};return t?(0,e.jsx)(t,{...o,children:(0,e.jsx)(G,{...o})}):G(o)}function l(o,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+o+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return ie(Oe);})();\n;return Component;"
  },
  "_id": "docs/components/dropdown.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/dropdown.mdx",
    "sourceFileName": "dropdown.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/dropdown"
  },
  "type": "Doc",
  "slug": "/docs/components/dropdown",
  "slugAsParams": "components/dropdown",
  "url": "/docs/components/dropdown"
}