{
  "title": "Button",
  "description": "Buttons allow users to perform actions and choose with a single tap.",
  "body": {
    "raw": "\nimport {buttonContent} from \"@/content/components/button\";\n\n# Button\n\nButtons allow users to perform actions and choose with a single tap.\n\n<ComponentLinks component=\"button\" reactAriaHook=\"useButton\" />\n\n---\n\n<CarbonAd />\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx heroui-cli@latest add button\",\n    npm: \"npm install @heroui/button\",\n    yarn: \"yarn add @heroui/button\",\n    pnpm: \"pnpm add @heroui/button\",\n    bun: \"bun add @heroui/button\",\n  }}\n/>\n\n## Import\n\nHeroUI exports 2 button-related components:\n\n- **Button**: The main component to display a button.\n- **ButtonGroup**: A wrapper component to display a group of buttons.\n\n<ImportTabs\n  commands={{\n    main: 'import {Button, ButtonGroup} from \"@heroui/react\";',\n    individual: 'import {Button, ButtonGroup} from \"@heroui/button\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={buttonContent.usage} />\n\n### Disabled\n\n<CodeDemo title=\"Disabled\" files={buttonContent.disabled} />\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={buttonContent.sizes} />\n\n### Radius\n\n<CodeDemo title=\"Radius\" files={buttonContent.radius} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={buttonContent.colors} />\n\n### Variants\n\n<CodeDemo title=\"Variants\" files={buttonContent.variants} />\n\n### Loading\n\nPass the `isLoading` prop to display a [Spinner](/docs/components/spinner) component inside the button.\n\n<CodeDemo title=\"Loading\" files={buttonContent.loading} />\n\nYou can also customize the loading spinner by passing the a custom component to the `spinner` prop.\n\n<CodeDemo title=\"Custom Loading\" files={buttonContent.loadingCustom} />\n\n### With Icons\n\nYou can add icons to the `Button` by passing the `startContent` or `endContent` props.\n\n<CodeDemo title=\"With Icons\" files={buttonContent.icons} />\n\n### Icon Only\n\nYou can also display a button without text by passing the `isIconOnly` prop and the desired icon as `children`.\n\n<CodeDemo title=\"With Icons\" files={buttonContent.iconOnly} />\n\n### Custom Styles\n\nYou can customize the `Button` component by passing custom Tailwind CSS classes to the component slots.\n\n<CodeDemo title=\"Custom Styles\" files={buttonContent.customStyles} />\n\n> Custom class names will override the default ones thanks to [Tailwind Merge](https://github.com/dcastil/tailwind-merge) library. It\n> means that you don't need to worry about class conflicts.\n\n### Custom Implementation\n\nYou can also use the `useButton` hook to create your own button component.\n\n<CodeDemo\n  showPreview={false}\n  showOpenInCodeSandbox={false}\n  title=\"Custom Implementation\"\n  files={buttonContent.customImpl}\n/>\n\n## Button Group\n\n<CodeDemo title=\"Button Group\" files={buttonContent.group} />\n\n### Group Disabled\n\nThe `ButtonGroup` component also accepts the `isDisabled` prop to disable all buttons inside it.\n\n<CodeDemo title=\"Group Disabled\" files={buttonContent.groupDisabled} />\n\n### Group Use case\n\nA common use case for the `ButtonGroup` component is to display a group of two buttons one for the selected value and another for the `dropdown`.\n\n<CodeDemo title=\"Group Use case\" files={buttonContent.groupUseCase} />\n\n> See the [Dropdown](/docs/components/dropdown) component for more details.\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`Button` has the following attributes on the `base` element:\n\n- **data-hover**:\n  When the button is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n- **data-focus**:\n  When the button is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-visible**:\n  When the button is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-disabled**:\n  When the button is disabled. Based on `isDisabled` prop.\n- **data-pressed**:\n  When the button is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html)\n- **data-loading**:\n  When the button is loading. Based on `isLoading` prop.\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Button has role of `button`.\n- Keyboard event support for <Kbd>Space</Kbd> and <Kbd>Enter</Kbd> keys.\n- Mouse and touch event handling, and press state management.\n- Keyboard focus management and cross browser normalization.\n\nWe recommend to read this [blog post](https://react-spectrum.adobe.com/blog/building-a-button-part-1.html) about the complexities of\nbuilding buttons that work well across devices and interaction methods.\n\n<Spacer y={4} />\n\n## API\n\n### Button Props\n\n<APITable\n  data={[\n    {\n      attribute: \"children\",\n      type: \"ReactNode\",\n      description: \"The content to display in the button.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"variant\",\n      type: 'solid | bordered | light | flat | faded | shadow | ghost',\n      description: \"The button appearance style.\",\n      default: \"solid\"\n    },\n    {\n      attribute: \"color\",\n      type: \"default | primary | secondary | success | warning | danger\",\n      description: \"The button color theme.\",\n      default: \"default\"\n    },\n    {\n      attribute: \"size\",\n      type: \"sm | md | lg\",\n      description: \"The button size.\",\n      default: \"md\"\n    },\n    {\n      attribute: \"radius\",\n      type: \"none | sm | md | lg | full\",\n      description: \"The button border radius.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"startContent\",\n      type: \"ReactNode\",\n      description: \"The button start content.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"endContent\",\n      type: \"ReactNode\",\n      description: \"The button end content.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"spinner\",\n      type: \"ReactNode\",\n      description: \"Spinner to display when loading.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"spinnerPlacement\",\n      type: \"start | end\",\n      description: \"The spinner placement.\",\n      default: \"start\"\n    },\n    {\n      attribute: \"fullWidth\",\n      type: \"boolean\",\n      description: \"Whether the button should take the full width of its parent.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isIconOnly\",\n      type: \"boolean\",\n      description: \"Whether the button should have the same width and height.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isDisabled\",\n      type: \"boolean\",\n      description: \"Whether the button is disabled.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isLoading\",\n      type: \"boolean\",\n      description: \"Whether the button is loading.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"disableRipple\",\n      type: \"boolean\",\n      description: \"Whether the button should display a ripple effect on press.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"disableAnimation\",\n      type: \"boolean\",\n      description: \"Whether the button should display animations.\",\n      default: \"false\"\n    }\n  ]}\n/>\n\n### Button Events\n\n<APITable\n  data={[\n    {\n      attribute: \"onPress\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler called when the press is released over the target.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressStart\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler called when a press interaction starts.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressEnd\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler called when a press interaction ends, either over the target or when the pointer leaves the target.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressChange\",\n      type: \"(isPressed: boolean) => void\",\n      description: \"Handler called when the press state changes.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onPressUp\",\n      type: \"(e: PressEvent) => void\",\n      description: \"Handler called when a press is released over the target, regardless of whether it started on the target or not.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onKeyDown\",\n      type: \"(e: KeyboardEvent) => void\",\n      description: \"Handler called when a key is pressed.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onKeyUp\",\n      type: \"(e: KeyboardEvent) => void\",\n      description: \"Handler called when a key is released.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onClick\",\n      deprecated: true,\n      type: \"MouseEventHandler\",\n      description: \"The native button click event handler (Deprecated) use onPress instead.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### Button Group Props\n\n<APITable\n  data={[\n    {\n      attribute: \"children\",\n      type: \"ReactNode | ReactNode[]\",\n      description: \"The buttons to display.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"variant\",\n      type: \"solid | bordered | light | flat | faded | shadow | ghost\",\n      description: \"The buttons appearance style.\",\n      default: \"solid\"\n    },\n    {\n      attribute: \"color\",\n      type: \"default | primary | secondary | success | warning | danger\",\n      description: \"The buttons color theme.\",\n      default: \"default\"\n    },\n    {\n      attribute: \"size\",\n      type: \"sm | md | lg\",\n      description: \"The buttons size.\",\n      default: \"md\"\n    },\n    {\n      attribute: \"radius\",\n      type: \"none | sm | md | lg | full\",\n      description: \"The buttons border radius.\",\n      default: \"xl\"\n    },\n    {\n      attribute: \"fullWidth\",\n      type: \"boolean\",\n      description: \"Whether the buttons should take the full width.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isDisabled\",\n      type: \"boolean\",\n      description: \"Whether the buttons are disabled.\",\n      default: \"false\"\n    }\n  ]}\n/>\n",
    "code": "var Component=(()=>{var Z=Object.create;var d=Object.defineProperty;var J=Object.getOwnPropertyDescriptor;var Q=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,tt=Object.prototype.hasOwnProperty;var et=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),ot=(o,e)=>{for(var i in e)d(o,i,{get:e[i],enumerable:!0})},m=(o,e,i,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let n of Q(e))!tt.call(o,n)&&n!==i&&d(o,n,{get:()=>e[n],enumerable:!(s=J(e,n))||s.enumerable});return o};var nt=(o,e,i)=>(i=o!=null?Z($(o)):{},m(e||!o||!o.__esModule?d(i,\"default\",{value:o,enumerable:!0}):i,o)),rt=o=>m(d({},\"__esModule\",{value:!0}),o);var b=et((Ot,f)=>{f.exports=_jsx_runtime});var Ht={};ot(Ht,{default:()=>X,frontmatter:()=>Gt});var t=nt(b());var g=`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return <Button color=\"primary\">Button</Button>;\n}\n`;var at={\"/App.jsx\":g},B={...at};var w=`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Button size=\"sm\">Small</Button>\n      <Button size=\"md\">Medium</Button>\n      <Button size=\"lg\">Large</Button>\n    </div>\n  );\n}\n`;var lt={\"/App.jsx\":w},y={...lt};var v=`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Button isDisabled color=\"primary\">\n      Button\n    </Button>\n  );\n}\n`;var pt={\"/App.jsx\":v},x={...pt};var C=`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      <Button color=\"default\">Default</Button>\n      <Button color=\"primary\">Primary</Button>\n      <Button color=\"secondary\">Secondary</Button>\n      <Button color=\"success\">Success</Button>\n      <Button color=\"warning\">Warning</Button>\n      <Button color=\"danger\">Danger</Button>\n    </div>\n  );\n}\n`;var ct={\"/App.jsx\":C},A={...ct};var z=`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      <Button color=\"primary\" variant=\"solid\">\n        Solid\n      </Button>\n      <Button color=\"primary\" variant=\"faded\">\n        Faded\n      </Button>\n      <Button color=\"primary\" variant=\"bordered\">\n        Bordered\n      </Button>\n      <Button color=\"primary\" variant=\"light\">\n        Light\n      </Button>\n      <Button color=\"primary\" variant=\"flat\">\n        Flat\n      </Button>\n      <Button color=\"primary\" variant=\"ghost\">\n        Ghost\n      </Button>\n      <Button color=\"primary\" variant=\"shadow\">\n        Shadow\n      </Button>\n    </div>\n  );\n}\n`;var mt={\"/App.jsx\":z},P={...mt};var I=`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Button radius=\"full\">Full</Button>\n      <Button radius=\"lg\">Large</Button>\n      <Button radius=\"md\">Medium</Button>\n      <Button radius=\"sm\">Small</Button>\n      <Button radius=\"none\">None</Button>\n    </div>\n  );\n}\n`;var bt={\"/App.jsx\":I},M={...bt};var k=`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Button isLoading color=\"primary\">\n      Loading\n    </Button>\n  );\n}\n`;var Bt={\"/App.jsx\":k},D={...Bt};var R=`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Button\n      isLoading\n      color=\"secondary\"\n      spinner={\n        <svg\n          className=\"animate-spin h-5 w-5 text-current\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          />\n          <path\n            className=\"opacity-75\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n      }\n    >\n      Loading\n    </Button>\n  );\n}\n`;var yt={\"/App.jsx\":R},S={...yt};var T=`import {Button} from \"@heroui/react\";\n\nexport const UserIcon = ({fill = \"currentColor\", size, height, width, ...props}) => {\n  return (\n    <svg\n      data-name=\"Iconly/Curved/Profile\"\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      width={size || width || 24}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <g\n        fill=\"none\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit={10}\n        strokeWidth={1.5}\n      >\n        <path\n          d=\"M11.845 21.662C8.153 21.662 5 21.088 5 18.787s3.133-4.425 6.845-4.425c3.692 0 6.845 2.1 6.845 4.4s-3.134 2.9-6.845 2.9z\"\n          data-name=\"Stroke 1\"\n        />\n        <path d=\"M11.837 11.174a4.372 4.372 0 10-.031 0z\" data-name=\"Stroke 3\" />\n      </g>\n    </svg>\n  );\n};\n\nexport const CameraIcon = ({fill = \"currentColor\", size, height, width, ...props}) => {\n  return (\n    <svg\n      fill=\"none\"\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      width={size || width || 24}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        clipRule=\"evenodd\"\n        d=\"M17.44 6.236c.04.07.11.12.2.12 2.4 0 4.36 1.958 4.36 4.355v5.934A4.368 4.368 0 0117.64 21H6.36A4.361 4.361 0 012 16.645V10.71a4.361 4.361 0 014.36-4.355c.08 0 .16-.04.19-.12l.06-.12.106-.222a97.79 97.79 0 01.714-1.486C7.89 3.51 8.67 3.01 9.64 3h4.71c.97.01 1.76.51 2.22 1.408.157.315.397.822.629 1.31l.141.299.1.22zm-.73 3.836c0 .5.4.9.9.9s.91-.4.91-.9-.41-.909-.91-.909-.9.41-.9.91zm-6.44 1.548c.47-.47 1.08-.719 1.73-.719.65 0 1.26.25 1.72.71.46.459.71 1.068.71 1.717A2.438 2.438 0 0112 15.756c-.65 0-1.26-.25-1.72-.71a2.408 2.408 0 01-.71-1.717v-.01c-.01-.63.24-1.24.7-1.699zm4.5 4.485a3.91 3.91 0 01-2.77 1.15 3.921 3.921 0 01-3.93-3.926 3.865 3.865 0 011.14-2.767A3.921 3.921 0 0112 9.402c1.05 0 2.04.41 2.78 1.15.74.749 1.15 1.738 1.15 2.777a3.958 3.958 0 01-1.16 2.776z\"\n        fill={fill}\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Button color=\"success\" endContent={<CameraIcon />}>\n        Take a photo\n      </Button>\n      <Button color=\"danger\" startContent={<UserIcon />} variant=\"bordered\">\n        Delete user\n      </Button>\n    </div>\n  );\n}\n`;var xt={\"/App.jsx\":T},L={...xt};var W=`import {Button} from \"@heroui/react\";\n\nexport const HeartIcon = ({fill = \"currentColor\", filled, size, height, width, ...props}) => {\n  return (\n    <svg\n      fill={filled ? fill : \"none\"}\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      width={size || width || 24}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M12.62 20.81c-.34.12-.9.12-1.24 0C8.48 19.82 2 15.69 2 8.69 2 5.6 4.49 3.1 7.56 3.1c1.82 0 3.43.88 4.44 2.24a5.53 5.53 0 0 1 4.44-2.24C19.51 3.1 22 5.6 22 8.69c0 7-6.48 11.13-9.38 12.12Z\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n      />\n    </svg>\n  );\n};\n\nexport const CameraIcon = ({fill = \"currentColor\", size, height, width, ...props}) => {\n  return (\n    <svg\n      fill=\"none\"\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      width={size || width || 24}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        clipRule=\"evenodd\"\n        d=\"M17.44 6.236c.04.07.11.12.2.12 2.4 0 4.36 1.958 4.36 4.355v5.934A4.368 4.368 0 0117.64 21H6.36A4.361 4.361 0 012 16.645V10.71a4.361 4.361 0 014.36-4.355c.08 0 .16-.04.19-.12l.06-.12.106-.222a97.79 97.79 0 01.714-1.486C7.89 3.51 8.67 3.01 9.64 3h4.71c.97.01 1.76.51 2.22 1.408.157.315.397.822.629 1.31l.141.299.1.22zm-.73 3.836c0 .5.4.9.9.9s.91-.4.91-.9-.41-.909-.91-.909-.9.41-.9.91zm-6.44 1.548c.47-.47 1.08-.719 1.73-.719.65 0 1.26.25 1.72.71.46.459.71 1.068.71 1.717A2.438 2.438 0 0112 15.756c-.65 0-1.26-.25-1.72-.71a2.408 2.408 0 01-.71-1.717v-.01c-.01-.63.24-1.24.7-1.699zm4.5 4.485a3.91 3.91 0 01-2.77 1.15 3.921 3.921 0 01-3.93-3.926 3.865 3.865 0 011.14-2.767A3.921 3.921 0 0112 9.402c1.05 0 2.04.41 2.78 1.15.74.749 1.15 1.738 1.15 2.777a3.958 3.958 0 01-1.16 2.776z\"\n        fill={fill}\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Button isIconOnly aria-label=\"Like\" color=\"danger\">\n        <HeartIcon />\n      </Button>\n      <Button isIconOnly aria-label=\"Take a photo\" color=\"warning\" variant=\"faded\">\n        <CameraIcon />\n      </Button>\n    </div>\n  );\n}\n`;var At={\"/App.jsx\":W},j={...At};var G=`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Button\n      className=\"bg-gradient-to-tr from-pink-500 to-yellow-500 text-white shadow-lg\"\n      radius=\"full\"\n    >\n      Button\n    </Button>\n  );\n}\n`;var Pt={\"/App.jsx\":G},H={...Pt};var N=`import {forwardRef} from \"react\";\nimport {useButton, Ripple, Spinner} from \"@heroui/react\";\n\nconst MyButton = forwardRef((props, ref) => {\n  const {\n    domRef,\n    children,\n    spinnerSize,\n    spinner = <Spinner color=\"current\" size={spinnerSize} />,\n    spinnerPlacement,\n    startContent,\n    endContent,\n    isLoading,\n    disableRipple,\n    getButtonProps,\n    getRippleProps,\n  } = useButton({\n    ref,\n    ...props,\n  });\n\n  const {ripples, onClear} = getRippleProps();\n\n  return (\n    <button ref={domRef} {...getButtonProps()}>\n      {startContent}\n      {isLoading && spinnerPlacement === \"start\" && spinner}\n      {children}\n      {isLoading && spinnerPlacement === \"end\" && spinner}\n      {endContent}\n      {!disableRipple && <Ripple ripples={ripples} onClear={onClear} />}\n    </button>\n  );\n});\n\nMyButton.displayName = \"MyButton\";\n\nexport default MyButton;\n`;var O=`import {forwardRef} from \"react\";\nimport {useButton, Ripple, Spinner, ButtonProps as BaseButtonProps} from \"@heroui/react\";\n\nexport interface ButtonProps extends BaseButtonProps {}\n\nconst MyButton = forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\n  const {\n    domRef,\n    children,\n    spinnerSize,\n    spinner = <Spinner color=\"current\" size={spinnerSize} />,\n    spinnerPlacement,\n    startContent,\n    endContent,\n    isLoading,\n    disableRipple,\n    getButtonProps,\n    getRippleProps,\n  } = useButton({\n    ref,\n    ...props,\n  });\n\n  const {ripples, onClear} = getRippleProps();\n\n  return (\n    <button ref={domRef} {...getButtonProps()}>\n      {startContent}\n      {isLoading && spinnerPlacement === \"start\" && spinner}\n      {children}\n      {isLoading && spinnerPlacement === \"end\" && spinner}\n      {endContent}\n      {!disableRipple && <Ripple ripples={ripples} onClear={onClear} />}\n    </button>\n  );\n});\n\nMyButton.displayName = \"MyButton\";\n\nexport default MyButton;\n`;var kt={\"/App.jsx\":N},Dt={\"/App.tsx\":O},E={...kt,...Dt};var U=`import {Button, ButtonGroup} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <ButtonGroup>\n      <Button>One</Button>\n      <Button>Two</Button>\n      <Button>Three</Button>\n    </ButtonGroup>\n  );\n}\n`;var St={\"/App.jsx\":U},q={...St};var F=`import {Button, ButtonGroup} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <ButtonGroup isDisabled>\n      <Button>One</Button>\n      <Button>Two</Button>\n      <Button>Three</Button>\n    </ButtonGroup>\n  );\n}\n`;var Lt={\"/App.jsx\":F},K={...Lt};var _=`import {\n  Button,\n  ButtonGroup,\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownItem,\n} from \"@heroui/react\";\n\nexport const ChevronDownIcon = () => {\n  return (\n    <svg fill=\"none\" height=\"14\" viewBox=\"0 0 24 24\" width=\"14\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M17.9188 8.17969H11.6888H6.07877C5.11877 8.17969 4.63877 9.33969 5.31877 10.0197L10.4988 15.1997C11.3288 16.0297 12.6788 16.0297 13.5088 15.1997L15.4788 13.2297L18.6888 10.0197C19.3588 9.33969 18.8788 8.17969 17.9188 8.17969Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  const [selectedOption, setSelectedOption] = React.useState(new Set([\"merge\"]));\n\n  const descriptionsMap = {\n    merge:\n      \"All commits from the source branch are added to the destination branch via a merge commit.\",\n    squash:\n      \"All commits from the source branch are added to the destination branch as a single commit.\",\n    rebase: \"All commits from the source branch are added to the destination branch individually.\",\n  };\n\n  const labelsMap = {\n    merge: \"Create a merge commit\",\n    squash: \"Squash and merge\",\n    rebase: \"Rebase and merge\",\n  };\n\n  // Convert the Set to an Array and get the first value.\n  const selectedOptionValue = Array.from(selectedOption)[0];\n\n  return (\n    <ButtonGroup variant=\"flat\">\n      <Button>{labelsMap[selectedOptionValue]}</Button>\n      <Dropdown placement=\"bottom-end\">\n        <DropdownTrigger>\n          <Button isIconOnly>\n            <ChevronDownIcon />\n          </Button>\n        </DropdownTrigger>\n        <DropdownMenu\n          disallowEmptySelection\n          aria-label=\"Merge options\"\n          className=\"max-w-[300px]\"\n          selectedKeys={selectedOption}\n          selectionMode=\"single\"\n          onSelectionChange={setSelectedOption}\n        >\n          <DropdownItem key=\"merge\" description={descriptionsMap[\"merge\"]}>\n            {labelsMap[\"merge\"]}\n          </DropdownItem>\n          <DropdownItem key=\"squash\" description={descriptionsMap[\"squash\"]}>\n            {labelsMap[\"squash\"]}\n          </DropdownItem>\n          <DropdownItem key=\"rebase\" description={descriptionsMap[\"rebase\"]}>\n            {labelsMap[\"rebase\"]}\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    </ButtonGroup>\n  );\n}\n`;var jt={\"/App.jsx\":_},V={...jt};var r={usage:B,sizes:y,disabled:x,colors:A,radius:M,variants:P,loading:D,loadingCustom:S,icons:L,iconOnly:j,customStyles:H,customImpl:E,group:q,groupDisabled:K,groupUseCase:V};var Gt={title:\"Button\",description:\"Buttons allow users to perform actions and choose with a single tap.\"};function Y(o){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",ul:\"ul\",...o.components},{APITable:i,CarbonAd:s,CodeDemo:n,ComponentLinks:u,ImportTabs:c,Kbd:p,PackageManagers:h,Spacer:l}=e;return i||a(\"APITable\",!0),s||a(\"CarbonAd\",!0),n||a(\"CodeDemo\",!0),u||a(\"ComponentLinks\",!0),c||a(\"ImportTabs\",!0),p||a(\"Kbd\",!0),h||a(\"PackageManagers\",!0),l||a(\"Spacer\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:\"button\",children:\"Button\"}),`\n`,(0,t.jsx)(e.p,{children:\"Buttons allow users to perform actions and choose with a single tap.\"}),`\n`,(0,t.jsx)(u,{component:\"button\",reactAriaHook:\"useButton\"}),`\n`,(0,t.jsx)(e.hr,{}),`\n`,(0,t.jsx)(s,{}),`\n`,(0,t.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,t.jsx)(h,{showGlobalInstallWarning:!0,commands:{cli:\"npx heroui-cli@latest add button\",npm:\"npm install @heroui/button\",yarn:\"yarn add @heroui/button\",pnpm:\"pnpm add @heroui/button\",bun:\"bun add @heroui/button\"}}),`\n`,(0,t.jsx)(e.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,t.jsx)(e.p,{children:\"HeroUI exports 2 button-related components:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"Button\"}),\": The main component to display a button.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"ButtonGroup\"}),\": A wrapper component to display a group of buttons.\"]}),`\n`]}),`\n`,(0,t.jsx)(c,{commands:{main:'import {Button, ButtonGroup} from \"@heroui/react\";',individual:'import {Button, ButtonGroup} from \"@heroui/button\";'}}),`\n`,(0,t.jsx)(e.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,t.jsx)(n,{title:\"Usage\",files:r.usage}),`\n`,(0,t.jsx)(e.h3,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,t.jsx)(n,{title:\"Disabled\",files:r.disabled}),`\n`,(0,t.jsx)(e.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,t.jsx)(n,{title:\"Sizes\",files:r.sizes}),`\n`,(0,t.jsx)(e.h3,{id:\"radius\",children:\"Radius\"}),`\n`,(0,t.jsx)(n,{title:\"Radius\",files:r.radius}),`\n`,(0,t.jsx)(e.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,t.jsx)(n,{title:\"Colors\",files:r.colors}),`\n`,(0,t.jsx)(e.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,t.jsx)(n,{title:\"Variants\",files:r.variants}),`\n`,(0,t.jsx)(e.h3,{id:\"loading\",children:\"Loading\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Pass the \",(0,t.jsx)(e.code,{children:\"isLoading\"}),\" prop to display a \",(0,t.jsx)(e.a,{href:\"/docs/components/spinner\",children:\"Spinner\"}),\" component inside the button.\"]}),`\n`,(0,t.jsx)(n,{title:\"Loading\",files:r.loading}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can also customize the loading spinner by passing the a custom component to the \",(0,t.jsx)(e.code,{children:\"spinner\"}),\" prop.\"]}),`\n`,(0,t.jsx)(n,{title:\"Custom Loading\",files:r.loadingCustom}),`\n`,(0,t.jsx)(e.h3,{id:\"with-icons\",children:\"With Icons\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can add icons to the \",(0,t.jsx)(e.code,{children:\"Button\"}),\" by passing the \",(0,t.jsx)(e.code,{children:\"startContent\"}),\" or \",(0,t.jsx)(e.code,{children:\"endContent\"}),\" props.\"]}),`\n`,(0,t.jsx)(n,{title:\"With Icons\",files:r.icons}),`\n`,(0,t.jsx)(e.h3,{id:\"icon-only\",children:\"Icon Only\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can also display a button without text by passing the \",(0,t.jsx)(e.code,{children:\"isIconOnly\"}),\" prop and the desired icon as \",(0,t.jsx)(e.code,{children:\"children\"}),\".\"]}),`\n`,(0,t.jsx)(n,{title:\"With Icons\",files:r.iconOnly}),`\n`,(0,t.jsx)(e.h3,{id:\"custom-styles\",children:\"Custom Styles\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can customize the \",(0,t.jsx)(e.code,{children:\"Button\"}),\" component by passing custom Tailwind CSS classes to the component slots.\"]}),`\n`,(0,t.jsx)(n,{title:\"Custom Styles\",files:r.customStyles}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsxs)(e.p,{children:[\"Custom class names will override the default ones thanks to \",(0,t.jsx)(e.a,{href:\"https://github.com/dcastil/tailwind-merge\",children:\"Tailwind Merge\"}),` library. It\nmeans that you don't need to worry about class conflicts.`]}),`\n`]}),`\n`,(0,t.jsx)(e.h3,{id:\"custom-implementation\",children:\"Custom Implementation\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can also use the \",(0,t.jsx)(e.code,{children:\"useButton\"}),\" hook to create your own button component.\"]}),`\n`,(0,t.jsx)(n,{showPreview:!1,showOpenInCodeSandbox:!1,title:\"Custom Implementation\",files:r.customImpl}),`\n`,(0,t.jsx)(e.h2,{id:\"button-group\",children:\"Button Group\"}),`\n`,(0,t.jsx)(n,{title:\"Button Group\",files:r.group}),`\n`,(0,t.jsx)(e.h3,{id:\"group-disabled\",children:\"Group Disabled\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The \",(0,t.jsx)(e.code,{children:\"ButtonGroup\"}),\" component also accepts the \",(0,t.jsx)(e.code,{children:\"isDisabled\"}),\" prop to disable all buttons inside it.\"]}),`\n`,(0,t.jsx)(n,{title:\"Group Disabled\",files:r.groupDisabled}),`\n`,(0,t.jsx)(e.h3,{id:\"group-use-case\",children:\"Group Use case\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"A common use case for the \",(0,t.jsx)(e.code,{children:\"ButtonGroup\"}),\" component is to display a group of two buttons one for the selected value and another for the \",(0,t.jsx)(e.code,{children:\"dropdown\"}),\".\"]}),`\n`,(0,t.jsx)(n,{title:\"Group Use case\",files:r.groupUseCase}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsxs)(e.p,{children:[\"See the \",(0,t.jsx)(e.a,{href:\"/docs/components/dropdown\",children:\"Dropdown\"}),\" component for more details.\"]}),`\n`]}),`\n`,(0,t.jsx)(l,{y:4}),`\n`,(0,t.jsx)(e.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"Button\"}),\" has the following attributes on the \",(0,t.jsx)(e.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-hover\"}),`:\nWhen the button is being hovered. Based on `,(0,t.jsx)(e.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-focus\"}),`:\nWhen the button is being focused. Based on `,(0,t.jsx)(e.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-focus-visible\"}),`:\nWhen the button is being focused with the keyboard. Based on `,(0,t.jsx)(e.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-disabled\"}),`:\nWhen the button is disabled. Based on `,(0,t.jsx)(e.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-pressed\"}),`:\nWhen the button is pressed. Based on `,(0,t.jsx)(e.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"})]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-loading\"}),`:\nWhen the button is loading. Based on `,(0,t.jsx)(e.code,{children:\"isLoading\"}),\" prop.\"]}),`\n`]}),`\n`,(0,t.jsx)(l,{y:4}),`\n`,(0,t.jsx)(e.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Button has role of \",(0,t.jsx)(e.code,{children:\"button\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Keyboard event support for \",(0,t.jsx)(p,{children:\"Space\"}),\" and \",(0,t.jsx)(p,{children:\"Enter\"}),\" keys.\"]}),`\n`,(0,t.jsx)(e.li,{children:\"Mouse and touch event handling, and press state management.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Keyboard focus management and cross browser normalization.\"}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"We recommend to read this \",(0,t.jsx)(e.a,{href:\"https://react-spectrum.adobe.com/blog/building-a-button-part-1.html\",children:\"blog post\"}),` about the complexities of\nbuilding buttons that work well across devices and interaction methods.`]}),`\n`,(0,t.jsx)(l,{y:4}),`\n`,(0,t.jsx)(e.h2,{id:\"api\",children:\"API\"}),`\n`,(0,t.jsx)(e.h3,{id:\"button-props\",children:\"Button Props\"}),`\n`,(0,t.jsx)(i,{data:[{attribute:\"children\",type:\"ReactNode\",description:\"The content to display in the button.\",default:\"-\"},{attribute:\"variant\",type:\"solid | bordered | light | flat | faded | shadow | ghost\",description:\"The button appearance style.\",default:\"solid\"},{attribute:\"color\",type:\"default | primary | secondary | success | warning | danger\",description:\"The button color theme.\",default:\"default\"},{attribute:\"size\",type:\"sm | md | lg\",description:\"The button size.\",default:\"md\"},{attribute:\"radius\",type:\"none | sm | md | lg | full\",description:\"The button border radius.\",default:\"-\"},{attribute:\"startContent\",type:\"ReactNode\",description:\"The button start content.\",default:\"-\"},{attribute:\"endContent\",type:\"ReactNode\",description:\"The button end content.\",default:\"-\"},{attribute:\"spinner\",type:\"ReactNode\",description:\"Spinner to display when loading.\",default:\"-\"},{attribute:\"spinnerPlacement\",type:\"start | end\",description:\"The spinner placement.\",default:\"start\"},{attribute:\"fullWidth\",type:\"boolean\",description:\"Whether the button should take the full width of its parent.\",default:\"false\"},{attribute:\"isIconOnly\",type:\"boolean\",description:\"Whether the button should have the same width and height.\",default:\"false\"},{attribute:\"isDisabled\",type:\"boolean\",description:\"Whether the button is disabled.\",default:\"false\"},{attribute:\"isLoading\",type:\"boolean\",description:\"Whether the button is loading.\",default:\"false\"},{attribute:\"disableRipple\",type:\"boolean\",description:\"Whether the button should display a ripple effect on press.\",default:\"false\"},{attribute:\"disableAnimation\",type:\"boolean\",description:\"Whether the button should display animations.\",default:\"false\"}]}),`\n`,(0,t.jsx)(e.h3,{id:\"button-events\",children:\"Button Events\"}),`\n`,(0,t.jsx)(i,{data:[{attribute:\"onPress\",type:\"(e: PressEvent) => void\",description:\"Handler called when the press is released over the target.\",default:\"-\"},{attribute:\"onPressStart\",type:\"(e: PressEvent) => void\",description:\"Handler called when a press interaction starts.\",default:\"-\"},{attribute:\"onPressEnd\",type:\"(e: PressEvent) => void\",description:\"Handler called when a press interaction ends, either over the target or when the pointer leaves the target.\",default:\"-\"},{attribute:\"onPressChange\",type:\"(isPressed: boolean) => void\",description:\"Handler called when the press state changes.\",default:\"-\"},{attribute:\"onPressUp\",type:\"(e: PressEvent) => void\",description:\"Handler called when a press is released over the target, regardless of whether it started on the target or not.\",default:\"-\"},{attribute:\"onKeyDown\",type:\"(e: KeyboardEvent) => void\",description:\"Handler called when a key is pressed.\",default:\"-\"},{attribute:\"onKeyUp\",type:\"(e: KeyboardEvent) => void\",description:\"Handler called when a key is released.\",default:\"-\"},{attribute:\"onClick\",deprecated:!0,type:\"MouseEventHandler\",description:\"The native button click event handler (Deprecated) use onPress instead.\",default:\"-\"}]}),`\n`,(0,t.jsx)(e.h3,{id:\"button-group-props\",children:\"Button Group Props\"}),`\n`,(0,t.jsx)(i,{data:[{attribute:\"children\",type:\"ReactNode | ReactNode[]\",description:\"The buttons to display.\",default:\"-\"},{attribute:\"variant\",type:\"solid | bordered | light | flat | faded | shadow | ghost\",description:\"The buttons appearance style.\",default:\"solid\"},{attribute:\"color\",type:\"default | primary | secondary | success | warning | danger\",description:\"The buttons color theme.\",default:\"default\"},{attribute:\"size\",type:\"sm | md | lg\",description:\"The buttons size.\",default:\"md\"},{attribute:\"radius\",type:\"none | sm | md | lg | full\",description:\"The buttons border radius.\",default:\"xl\"},{attribute:\"fullWidth\",type:\"boolean\",description:\"Whether the buttons should take the full width.\",default:\"false\"},{attribute:\"isDisabled\",type:\"boolean\",description:\"Whether the buttons are disabled.\",default:\"false\"}]})]})}function X(o={}){let{wrapper:e}=o.components||{};return e?(0,t.jsx)(e,{...o,children:(0,t.jsx)(Y,{...o})}):Y(o)}function a(o,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+o+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return rt(Ht);})();\n;return Component;"
  },
  "_id": "docs/components/button.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/button.mdx",
    "sourceFileName": "button.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/button"
  },
  "type": "Doc",
  "slug": "/docs/components/button",
  "slugAsParams": "components/button",
  "url": "/docs/components/button"
}