{
  "title": "Snippet",
  "description": "Snippet is a component that can be used to display inline or multiline code snippets.",
  "body": {
    "raw": "\nimport {snippetContent} from \"@/content/components/snippet\";\n\n# Snippet\n\nSnippet is a component that can be used to display inline or multiline code snippets.\n\n<ComponentLinks component=\"snippet\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx heroui-cli@latest add snippet\",\n    npm: \"npm install @heroui/snippet\",\n    yarn: \"yarn add @heroui/snippet\",\n    pnpm: \"pnpm add @heroui/snippet\",\n    bun: \"bun add @heroui/snippet\"\n  }}\n/>\n\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Snippet} from \"@heroui/react\";',\n    individual: 'import {Snippet} from \"@heroui/snippet\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Snippet\" files={snippetContent.usage} />\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={snippetContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={snippetContent.colors} />\n\n### Variants\n\n<CodeDemo title=\"Variants\" files={snippetContent.variants} />\n\n### Custom Symbol\n\n<CodeDemo title=\"Custom Symbol\" files={snippetContent.symbol} />\n\n### Without Copy\n\nYou can hide the copy button by setting the `hideCopyButton` property to `true`.\n\n<CodeDemo title=\"Without Copy\" files={snippetContent.withoutCopy} />\n\n### Custom Tooltip\n\nYou can customize the tooltip by using the `tooltipProps` property.\n\n<CodeDemo title=\"Custom Tooltip\" highlightedLines=\"7-10\" files={snippetContent.customTooltip} />\n\n> **Note**: For more information about the `Tooltip` props, please visit the [Tooltip](/docs/components/tooltip) page.\n\n### Multiline\n\n<CodeDemo title=\"Multiline\" files={snippetContent.multiline} />\n\n### Custom Icons\n\nYou can customize the copy and copied icons by using the `copyIcon` and `checkIcon` properties.\n\n<CodeDemo title=\"Custom Icons\" highlightedLines=\"9-10\" files={snippetContent.customIcons} />\n\n## Slots\n\n- **base**: The base slot of the snippet, it is the main container.\n- **content**: This is the wrapper of the `<pre/>` slot.\n- **pre**: The `<pre/>` slot of the snippet. It is used to wrap the code.\n- **symbol**: The symbol wrapper slot.\n- **copyButton**: The copy button slot.\n- **copyIcon**: The copy icon slot.\n- **checkIcon**: The check icon slot.\n\n<Spacer y={4} />\n\n## API\n\n### Snippet Props\n\n<APITable\n  data={[\n    {\n      attribute: \"children\",\n      type: \"ReactNode | ReactNode[]\",\n      description: \"The content of the snippet.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"size\", \n      type: \"sm | md | lg\",\n      description: \"The size of the snippet.\",\n      default: \"md\"\n    },\n    {\n      attribute: \"radius\",\n      type: \"none | sm | md | lg\",\n      description: \"The radius of the snippet.\",\n      default: \"lg\"\n    },\n    {\n      attribute: \"symbol\",\n      type: \"string | ReactNode\",\n      description: \"The symbol to show before the snippet.\",\n      default: \"$\"\n    },\n    {\n      attribute: \"timeout\",\n      type: \"number\",\n      description: \"The time in milliseconds to wait before resetting the clipboard.\",\n      default: \"2000\"\n    },\n    {\n      attribute: \"codeString\",\n      type: \"string\",\n      description: \"The code string to copy. if codeString is passed, it will be copied instead of the children.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"tooltipProps\",\n      type: \"TooltipProps\",\n      description: \"The props of the tooltip.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"copyIcon\",\n      type: \"ReactNode\",\n      description: \"The copy icon.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"checkIcon\",\n      type: \"ReactNode\", \n      description: \"The check icon.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"disableTooltip\",\n      type: \"boolean\",\n      description: \"Whether to disable the tooltip.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"disableCopy\",\n      type: \"boolean\",\n      description: \"Whether to disable the copy button.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"hideCopyButton\",\n      type: \"boolean\",\n      description: \"Whether to hide the copy button.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"hideSymbol\",\n      type: \"boolean\",\n      description: \"Whether to hide the symbol.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"copyButtonProps\",\n      type: \"ButtonProps\",\n      description: \"The props of the copy button.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"disableAnimation\",\n      type: \"boolean\",\n      description: \"Whether to disable the animations.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"classNames\",\n      type: \"Partial<Record<'base' | 'content' | 'pre' | 'symbol' | 'copyButton' | 'checkIcon', string>>\",\n      description: \"Allows to set custom class names for the snippet slots.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### Snippet Events\n\n<APITable\n  data={[\n    {\n      attribute: \"onCopy\",\n      type: \"(value: string | string[]) => void\",\n      description: \"Handler that is called when the code is copied.\",\n      default: \"-\"\n    }\n  ]}\n/>\n",
    "code": "var Component=(()=>{var _=Object.create;var l=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var V=Object.getPrototypeOf,H=Object.prototype.hasOwnProperty;var q=(i,t)=>()=>(t||i((t={exports:{}}).exports,t),t.exports),E=(i,t)=>{for(var n in t)l(i,n,{get:t[n],enumerable:!0})},u=(i,t,n,s)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let o of D(t))!H.call(i,o)&&o!==n&&l(i,o,{get:()=>t[o],enumerable:!(s=L(t,o))||s.enumerable});return i};var F=(i,t,n)=>(n=i!=null?_(V(i)):{},u(t||!i||!i.__esModule?l(n,\"default\",{value:i,enumerable:!0}):n,i)),Y=i=>u(l({},\"__esModule\",{value:!0}),i);var f=q((ht,m)=>{m.exports=_jsx_runtime});var ct={};E(ct,{default:()=>R,frontmatter:()=>at});var e=F(f());var y=`import {Snippet} from \"@heroui/react\";\n\nexport default function App() {\n  return <Snippet>npm install @heroui/react</Snippet>;\n}\n`;var G={\"/App.jsx\":y},b={...G};var g=`import {Snippet} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      <Snippet size=\"sm\">npm install @heroui/react</Snippet>\n      <Snippet size=\"md\">npm install @heroui/react</Snippet>\n      <Snippet size=\"lg\">npm install @heroui/react</Snippet>\n    </div>\n  );\n}\n`;var Z={\"/App.jsx\":g},S={...Z};var x=`import {Snippet} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      <Snippet color=\"default\">npm install @heroui/react</Snippet>\n      <Snippet color=\"primary\">npm install @heroui/react</Snippet>\n      <Snippet color=\"secondary\">npm install @heroui/react</Snippet>\n      <Snippet color=\"success\">npm install @heroui/react</Snippet>\n      <Snippet color=\"warning\">npm install @heroui/react</Snippet>\n      <Snippet color=\"danger\">npm install @heroui/react</Snippet>\n    </div>\n  );\n}\n`;var J={\"/App.jsx\":x},C={...J};var A=`import {Snippet} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      <Snippet variant=\"bordered\">npm install @heroui/react</Snippet>\n      <Snippet color=\"warning\" variant=\"flat\">\n        npm install @heroui/react\n      </Snippet>\n      <Snippet color=\"primary\" variant=\"solid\">\n        npm install @heroui/react\n      </Snippet>\n      <Snippet color=\"secondary\" variant=\"shadow\">\n        npm install @heroui/react\n      </Snippet>\n    </div>\n  );\n}\n`;var O={\"/App.jsx\":A},w={...O};var v=`import {Snippet} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Snippet symbol=\"#\" variant=\"bordered\">\n      npm install @heroui/react\n    </Snippet>\n  );\n}\n`;var tt={\"/App.jsx\":v},T={...tt};var I=`import {Snippet} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Snippet hideCopyButton color=\"primary\" variant=\"solid\">\n      npm install @heroui/react\n    </Snippet>\n  );\n}\n`;var it={\"/App.jsx\":I},k={...it};var z=`import {Snippet} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Snippet\n      tooltipProps={{\n        color: \"foreground\",\n        content: \"Copy this snippet\",\n        disableAnimation: true,\n        placement: \"right\",\n        closeDelay: 0,\n      }}\n    >\n      npm install @heroui/react\n    </Snippet>\n  );\n}\n`;var nt={\"/App.jsx\":z},j={...nt};var P=`import {Snippet} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Snippet>\n      <span>npm install @heroui/react</span>\n      <span>yarn add @heroui/react</span>\n      <span>pnpm add @heroui/react</span>\n    </Snippet>\n  );\n}\n`;var rt={\"/App.jsx\":P},M={...rt};var N=`import {Snippet} from \"@heroui/react\";\n\nexport const CopyIcon = ({size, height, width, ...props}) => {\n  return (\n    <svg\n      fill=\"none\"\n      height={size || height || 20}\n      shapeRendering=\"geometricPrecision\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n      viewBox=\"0 0 24 24\"\n      width={size || width || 20}\n      {...props}\n    >\n      <path d=\"M6 17C4.89543 17 4 16.1046 4 15V5C4 3.89543 4.89543 3 6 3H13C13.7403 3 14.3866 3.4022 14.7324 4M11 21H18C19.1046 21 20 20.1046 20 19V9C20 7.89543 19.1046 7 18 7H11C9.89543 7 9 7.89543 9 9V19C9 20.1046 9.89543 21 11 21Z\" />\n    </svg>\n  );\n};\n\nexport const CheckIcon = ({size, height, width, ...props}) => {\n  return (\n    <svg\n      fill=\"currentColor\"\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      width={size || width || 24}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path d=\"m2.394 13.742 4.743 3.62 7.616-8.704-1.506-1.316-6.384 7.296-3.257-2.486zm19.359-5.084-1.506-1.316-6.369 7.279-.753-.602-1.25 1.562 2.247 1.798z\" />\n    </svg>\n  );\n};\n\nexport default function App() {\n  return (\n    <Snippet checkIcon={<CheckIcon />} copyIcon={<CopyIcon />} variant=\"bordered\">\n      npm install @heroui/react\n    </Snippet>\n  );\n}\n`;var lt={\"/App.jsx\":N},B={...lt};var p={usage:b,sizes:S,colors:C,variants:w,symbol:T,withoutCopy:k,customTooltip:j,multiline:M,customIcons:B};var at={title:\"Snippet\",description:\"Snippet is a component that can be used to display inline or multiline code snippets.\"};function W(i){let t={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",ul:\"ul\",...i.components},{APITable:n,CarbonAd:s,CodeDemo:o,ComponentLinks:a,ImportTabs:c,PackageManagers:d,Spacer:h}=t;return n||r(\"APITable\",!0),s||r(\"CarbonAd\",!0),o||r(\"CodeDemo\",!0),a||r(\"ComponentLinks\",!0),c||r(\"ImportTabs\",!0),d||r(\"PackageManagers\",!0),h||r(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:\"snippet\",children:\"Snippet\"}),`\n`,(0,e.jsx)(t.p,{children:\"Snippet is a component that can be used to display inline or multiline code snippets.\"}),`\n`,(0,e.jsx)(a,{component:\"snippet\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(s,{}),`\n`,(0,e.jsx)(t.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(d,{showGlobalInstallWarning:!0,commands:{cli:\"npx heroui-cli@latest add snippet\",npm:\"npm install @heroui/snippet\",yarn:\"yarn add @heroui/snippet\",pnpm:\"pnpm add @heroui/snippet\",bun:\"bun add @heroui/snippet\"}}),`\n`,(0,e.jsx)(t.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(c,{commands:{main:'import {Snippet} from \"@heroui/react\";',individual:'import {Snippet} from \"@heroui/snippet\";'}}),`\n`,(0,e.jsx)(t.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(o,{title:\"Snippet\",files:p.usage}),`\n`,(0,e.jsx)(t.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,e.jsx)(o,{title:\"Sizes\",files:p.sizes}),`\n`,(0,e.jsx)(t.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,e.jsx)(o,{title:\"Colors\",files:p.colors}),`\n`,(0,e.jsx)(t.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,e.jsx)(o,{title:\"Variants\",files:p.variants}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-symbol\",children:\"Custom Symbol\"}),`\n`,(0,e.jsx)(o,{title:\"Custom Symbol\",files:p.symbol}),`\n`,(0,e.jsx)(t.h3,{id:\"without-copy\",children:\"Without Copy\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can hide the copy button by setting the \",(0,e.jsx)(t.code,{children:\"hideCopyButton\"}),\" property to \",(0,e.jsx)(t.code,{children:\"true\"}),\".\"]}),`\n`,(0,e.jsx)(o,{title:\"Without Copy\",files:p.withoutCopy}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-tooltip\",children:\"Custom Tooltip\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize the tooltip by using the \",(0,e.jsx)(t.code,{children:\"tooltipProps\"}),\" property.\"]}),`\n`,(0,e.jsx)(o,{title:\"Custom Tooltip\",highlightedLines:\"7-10\",files:p.customTooltip}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": For more information about the \",(0,e.jsx)(t.code,{children:\"Tooltip\"}),\" props, please visit the \",(0,e.jsx)(t.a,{href:\"/docs/components/tooltip\",children:\"Tooltip\"}),\" page.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"multiline\",children:\"Multiline\"}),`\n`,(0,e.jsx)(o,{title:\"Multiline\",files:p.multiline}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-icons\",children:\"Custom Icons\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize the copy and copied icons by using the \",(0,e.jsx)(t.code,{children:\"copyIcon\"}),\" and \",(0,e.jsx)(t.code,{children:\"checkIcon\"}),\" properties.\"]}),`\n`,(0,e.jsx)(o,{title:\"Custom Icons\",highlightedLines:\"9-10\",files:p.customIcons}),`\n`,(0,e.jsx)(t.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),\": The base slot of the snippet, it is the main container.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"content\"}),\": This is the wrapper of the \",(0,e.jsx)(t.code,{children:\"<pre/>\"}),\" slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"pre\"}),\": The \",(0,e.jsx)(t.code,{children:\"<pre/>\"}),\" slot of the snippet. It is used to wrap the code.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"symbol\"}),\": The symbol wrapper slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"copyButton\"}),\": The copy button slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"copyIcon\"}),\": The copy icon slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"checkIcon\"}),\": The check icon slot.\"]}),`\n`]}),`\n`,(0,e.jsx)(h,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(t.h3,{id:\"snippet-props\",children:\"Snippet Props\"}),`\n`,(0,e.jsx)(n,{data:[{attribute:\"children\",type:\"ReactNode | ReactNode[]\",description:\"The content of the snippet.\",default:\"-\"},{attribute:\"size\",type:\"sm | md | lg\",description:\"The size of the snippet.\",default:\"md\"},{attribute:\"radius\",type:\"none | sm | md | lg\",description:\"The radius of the snippet.\",default:\"lg\"},{attribute:\"symbol\",type:\"string | ReactNode\",description:\"The symbol to show before the snippet.\",default:\"$\"},{attribute:\"timeout\",type:\"number\",description:\"The time in milliseconds to wait before resetting the clipboard.\",default:\"2000\"},{attribute:\"codeString\",type:\"string\",description:\"The code string to copy. if codeString is passed, it will be copied instead of the children.\",default:\"-\"},{attribute:\"tooltipProps\",type:\"TooltipProps\",description:\"The props of the tooltip.\",default:\"-\"},{attribute:\"copyIcon\",type:\"ReactNode\",description:\"The copy icon.\",default:\"-\"},{attribute:\"checkIcon\",type:\"ReactNode\",description:\"The check icon.\",default:\"-\"},{attribute:\"disableTooltip\",type:\"boolean\",description:\"Whether to disable the tooltip.\",default:\"false\"},{attribute:\"disableCopy\",type:\"boolean\",description:\"Whether to disable the copy button.\",default:\"false\"},{attribute:\"hideCopyButton\",type:\"boolean\",description:\"Whether to hide the copy button.\",default:\"false\"},{attribute:\"hideSymbol\",type:\"boolean\",description:\"Whether to hide the symbol.\",default:\"false\"},{attribute:\"copyButtonProps\",type:\"ButtonProps\",description:\"The props of the copy button.\",default:\"-\"},{attribute:\"disableAnimation\",type:\"boolean\",description:\"Whether to disable the animations.\",default:\"false\"},{attribute:\"classNames\",type:\"Partial<Record<'base' | 'content' | 'pre' | 'symbol' | 'copyButton' | 'checkIcon', string>>\",description:\"Allows to set custom class names for the snippet slots.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"snippet-events\",children:\"Snippet Events\"}),`\n`,(0,e.jsx)(n,{data:[{attribute:\"onCopy\",type:\"(value: string | string[]) => void\",description:\"Handler that is called when the code is copied.\",default:\"-\"}]})]})}function R(i={}){let{wrapper:t}=i.components||{};return t?(0,e.jsx)(t,{...i,children:(0,e.jsx)(W,{...i})}):W(i)}function r(i,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+i+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return Y(ct);})();\n;return Component;"
  },
  "_id": "docs/components/snippet.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/snippet.mdx",
    "sourceFileName": "snippet.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/snippet"
  },
  "type": "Doc",
  "slug": "/docs/components/snippet",
  "slugAsParams": "components/snippet",
  "url": "/docs/components/snippet"
}