{
  "title": "Customize theme",
  "description": "Learn how HeroUI enables effortless customization of default themes.",
  "body": {
    "raw": "\n# Customize theme\n\nHeroUI provides `light` and `dark` themes that can be customized to match your needs. You can also create custom themes based on these defaults, using [Layout](/docs/customization/layout) and [Color](/docs/customization/colors) tokens.\n\n<CarbonAd/>\n\n## Customizing Layout\n\nLayout tokens let you customize spacing, typography, borders and more - either globally or per theme.\n\n### Global Layout Customization\n\nYou can customize border radius, border width, and disabled opacity across all themes by modifying your `tailwind.config.js` file:\n\n```js {9-19}\n// tailwind.config.js\nconst {heroui} = require(\"@heroui/react\");\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  plugins: [\n    heroui({\n      layout: {\n        disabledOpacity: \"0.3\", // opacity-[0.3]\n        radius: {\n          small: \"2px\", // rounded-small\n          medium: \"4px\", // rounded-medium\n          large: \"6px\", // rounded-large\n        },\n        borderWidth: {\n          small: \"1px\", // border-small\n          medium: \"1px\", // border-medium\n          large: \"2px\", // border-large\n        },\n      },\n      themes: {\n        light: {},\n        dark: {},\n      },\n    }),\n  ],\n};\n```\n\nLayout tokens are used across all HeroUI components. For example, the [Button](/docs/components/button) component uses `radius` and `borderWidth` tokens for its styling. Here's how it looks with the customized values:\n\n\n```jsx\nimport {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Button variant=\"bordered\" radius=\"md\">\n        Button\n      </Button>\n      <Button isDisabled color=\"primary\" radius=\"md\">\n        Disabled\n      </Button>\n    </div>\n  );\n}\n```\n\n<Spacer y={4} />\n\nimport customLayout from \"@/content/customization/customize-theme/custom-layout\";\n\n<CodeDemo title=\"Custom layout example\" showEditor={false} files={customLayout} />\n\n> See the [Layout](/docs/customization/layout#default-layout) section for more details about the available tokens.\n\n### Customizing Colors\n\nNow, Let's say you wish to modify the primary and focus colors of the dark theme. This can \nbe achieved by adding the following code to your `tailwind.config.js` file.\n\n```js {10-16}\n// tailwind.config.js\nconst {heroui} = require(\"@heroui/react\");\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  plugins: [\n    heroui({\n      themes: {\n        dark: {\n          colors: {\n            primary: {\n              DEFAULT: \"#BEF264\",\n              foreground: \"#000000\",\n            },\n            focus: \"#BEF264\",\n          },\n        },\n      },\n    }),\n  ],\n};\n```\n\nThis modification will impact all components using the `primary` color. For instance, \nthe [Button](/docs/components/button) component uses the `primary` color as background color when the \nvariant is `solid` or `ghost`.\n\n```jsx\nimport {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Button color=\"primary\" variant=\"solid\">Solid</Button>\n      <Button color=\"primary\" variant=\"ghost\">Ghost</Button>\n    </div>\n  );\n}\n```\n\n<Spacer y={4} />\n\nimport customColors from \"@/content/customization/customize-theme/custom-colors\";\n\n<CodeDemo title=\"Custom colors example\" showEditor={false} files={customColors} />\n\n> ðŸŽ‰ That's it! You have successfully customized the default theme. See the [Colors](/docs/customization/colors) \n> section for more details about the available semantic colors and color tokens. \n",
    "code": "var Component=(()=>{var f=Object.create;var a=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var B=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),v=(n,e)=>{for(var t in e)a(n,t,{get:e[t],enumerable:!0})},d=(n,e,t,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of y(e))!x.call(n,r)&&r!==t&&a(n,r,{get:()=>e[r],enumerable:!(i=g(e,r))||i.enumerable});return n};var w=(n,e,t)=>(t=n!=null?f(b(n)):{},d(e||!n||!n.__esModule?a(t,\"default\",{value:n,enumerable:!0}):t,n)),z=n=>d(a({},\"__esModule\",{value:!0}),n);var l=B((L,c)=>{c.exports=_jsx_runtime});var F={};v(F,{default:()=>p,frontmatter:()=>E});var o=w(l());var C=`import {Button} from '@heroui/react';\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Button variant=\"bordered\" className=\"rounded-[4px] border-[1px]\">\n        Button\n      </Button>\n      <Button isDisabled color=\"primary\" className=\"rounded-[4px] opacity-30\">\n        Disabled\n      </Button>\n    </div>\n  );\n}`,k={\"/App.jsx\":C},u={...k};var j=`import {Button} from '@heroui/react';\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Button className=\"rounded-[4px] bg-[#BEF264] text-[#000000] data-[focus-visible=true]:outline-[#BEF264]\">\n        Solid\n      </Button>\n      <Button variant=\"ghost\" className=\"rounded-[4px] border-[1px] border-[#BEF264] hover:!bg-[#BEF264] hover:!text-[#000000] data-[focus-visible=true]:outline-[#BEF264]\">\n        Ghost\n      </Button>\n    </div>  \n  );\n}`,N={\"/App.jsx\":j},h={...N};var E={title:\"Customize theme\",description:\"Learn how HeroUI enables effortless customization of default themes.\"};function m(n){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",p:\"p\",pre:\"pre\",...n.components},{CarbonAd:t,CodeDemo:i,Spacer:r}=e;return t||s(\"CarbonAd\",!0),i||s(\"CodeDemo\",!0),r||s(\"Spacer\",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:\"customize-theme\",children:\"Customize theme\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"HeroUI provides \",(0,o.jsx)(e.code,{children:\"light\"}),\" and \",(0,o.jsx)(e.code,{children:\"dark\"}),\" themes that can be customized to match your needs. You can also create custom themes based on these defaults, using \",(0,o.jsx)(e.a,{href:\"/docs/customization/layout\",children:\"Layout\"}),\" and \",(0,o.jsx)(e.a,{href:\"/docs/customization/colors\",children:\"Color\"}),\" tokens.\"]}),`\n`,(0,o.jsx)(t,{}),`\n`,(0,o.jsx)(e.h2,{id:\"customizing-layout\",children:\"Customizing Layout\"}),`\n`,(0,o.jsx)(e.p,{children:\"Layout tokens let you customize spacing, typography, borders and more - either globally or per theme.\"}),`\n`,(0,o.jsx)(e.h3,{id:\"global-layout-customization\",children:\"Global Layout Customization\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"You can customize border radius, border width, and disabled opacity across all themes by modifying your \",(0,o.jsx)(e.code,{children:\"tailwind.config.js\"}),\" file:\"]}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",meta:\"{9-19}\",children:`// tailwind.config.js\nconst {heroui} = require(\"@heroui/react\");\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  plugins: [\n    heroui({\n      layout: {\n        disabledOpacity: \"0.3\", // opacity-[0.3]\n        radius: {\n          small: \"2px\", // rounded-small\n          medium: \"4px\", // rounded-medium\n          large: \"6px\", // rounded-large\n        },\n        borderWidth: {\n          small: \"1px\", // border-small\n          medium: \"1px\", // border-medium\n          large: \"2px\", // border-large\n        },\n      },\n      themes: {\n        light: {},\n        dark: {},\n      },\n    }),\n  ],\n};\n`})}),`\n`,(0,o.jsxs)(e.p,{children:[\"Layout tokens are used across all HeroUI components. For example, the \",(0,o.jsx)(e.a,{href:\"/docs/components/button\",children:\"Button\"}),\" component uses \",(0,o.jsx)(e.code,{children:\"radius\"}),\" and \",(0,o.jsx)(e.code,{children:\"borderWidth\"}),\" tokens for its styling. Here's how it looks with the customized values:\"]}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-jsx\",children:`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Button variant=\"bordered\" radius=\"md\">\n        Button\n      </Button>\n      <Button isDisabled color=\"primary\" radius=\"md\">\n        Disabled\n      </Button>\n    </div>\n  );\n}\n`})}),`\n`,(0,o.jsx)(r,{y:4}),`\n`,`\n`,(0,o.jsx)(i,{title:\"Custom layout example\",showEditor:!1,files:u}),`\n`,(0,o.jsxs)(e.blockquote,{children:[`\n`,(0,o.jsxs)(e.p,{children:[\"See the \",(0,o.jsx)(e.a,{href:\"/docs/customization/layout#default-layout\",children:\"Layout\"}),\" section for more details about the available tokens.\"]}),`\n`]}),`\n`,(0,o.jsx)(e.h3,{id:\"customizing-colors\",children:\"Customizing Colors\"}),`\n`,(0,o.jsxs)(e.p,{children:[`Now, Let's say you wish to modify the primary and focus colors of the dark theme. This can\nbe achieved by adding the following code to your `,(0,o.jsx)(e.code,{children:\"tailwind.config.js\"}),\" file.\"]}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",meta:\"{10-16}\",children:`// tailwind.config.js\nconst {heroui} = require(\"@heroui/react\");\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  plugins: [\n    heroui({\n      themes: {\n        dark: {\n          colors: {\n            primary: {\n              DEFAULT: \"#BEF264\",\n              foreground: \"#000000\",\n            },\n            focus: \"#BEF264\",\n          },\n        },\n      },\n    }),\n  ],\n};\n`})}),`\n`,(0,o.jsxs)(e.p,{children:[\"This modification will impact all components using the \",(0,o.jsx)(e.code,{children:\"primary\"}),` color. For instance,\nthe `,(0,o.jsx)(e.a,{href:\"/docs/components/button\",children:\"Button\"}),\" component uses the \",(0,o.jsx)(e.code,{children:\"primary\"}),` color as background color when the\nvariant is `,(0,o.jsx)(e.code,{children:\"solid\"}),\" or \",(0,o.jsx)(e.code,{children:\"ghost\"}),\".\"]}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-jsx\",children:`import {Button} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Button color=\"primary\" variant=\"solid\">Solid</Button>\n      <Button color=\"primary\" variant=\"ghost\">Ghost</Button>\n    </div>\n  );\n}\n`})}),`\n`,(0,o.jsx)(r,{y:4}),`\n`,`\n`,(0,o.jsx)(i,{title:\"Custom colors example\",showEditor:!1,files:h}),`\n`,(0,o.jsxs)(e.blockquote,{children:[`\n`,(0,o.jsxs)(e.p,{children:[\"\\u{1F389} That's it! You have successfully customized the default theme. See the \",(0,o.jsx)(e.a,{href:\"/docs/customization/colors\",children:\"Colors\"}),`\nsection for more details about the available semantic colors and color tokens.`]}),`\n`]})]})}function p(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(m,{...n})}):m(n)}function s(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return z(F);})();\n;return Component;"
  },
  "_id": "docs/customization/customize-theme.mdx",
  "_raw": {
    "sourceFilePath": "docs/customization/customize-theme.mdx",
    "sourceFileName": "customize-theme.mdx",
    "sourceFileDir": "docs/customization",
    "contentType": "mdx",
    "flattenedPath": "docs/customization/customize-theme"
  },
  "type": "Doc",
  "slug": "/docs/customization/customize-theme",
  "slugAsParams": "customization/customize-theme",
  "url": "/docs/customization/customize-theme"
}