{
  "title": "Pagination",
  "description": "The Pagination component allows you to display active page and navigate between multiple pages.",
  "body": {
    "raw": "\nimport {paginationContent} from \"@/content/components/pagination\";\n\n# Pagination\n\nThe Pagination component allows you to display active page and navigate between multiple pages.\n\n<ComponentLinks component=\"pagination\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx heroui-cli@latest add pagination\",\n    npm: \"npm install @heroui/pagination\",\n    yarn: \"yarn add @heroui/pagination\",\n    pnpm: \"pnpm add @heroui/pagination\",\n    bun: \"bun add @heroui/pagination\"\n  }}\n/>\n\n## Import\n\nHeroUI exports 3 pagination-related components:\n\n- **Pagination**: The main component to display a pagination.\n- **PaginationItem**: The internal component to display a pagination item.\n- **PaginationCursor**: The internal item component to display the current page.\n\n<ImportTabs\n  commands={{\n    main: 'import {Pagination, PaginationItem, PaginationCursor} from \"@heroui/react\";',\n    individual:\n      'import {Pagination, PaginationItem, PaginationCursor} from \"@heroui/pagination\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={paginationContent.usage} />\n\n### Disabled\n\n<CodeDemo title=\"Disabled\" files={paginationContent.disabled} />\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={paginationContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Radius\" files={paginationContent.colors} />\n\n### Variants\n\nYou can use the `variant` property to change the pagination items style.\n\n<CodeDemo title=\"Variants\" files={paginationContent.variants} />\n\n### With Controls\n\nYou can set the `showControls` to `true` to display the `next` and `previous` buttons.\n\n<CodeDemo title=\"With Controls\" files={paginationContent.controls} />\n\n### Pagination Loop\n\nIn case you want to loop the pagination, you can set the `loop` property to `true`.\nThe cursor will go back to the first page when it reaches the last page and vice versa.\n\n<CodeDemo title=\"Pagination Loop\" files={paginationContent.loop} />\n\n### Changing the initial page\n\nYou can change the initial page by setting the `initialPage` property.\n\n<CodeDemo title=\"Changing the initial page\" files={paginationContent.initialPage} />\n\n### Compact Pagination\n\nYou can set the `isCompact` property to `true` to display reduced version of the pagination.\n\n<CodeDemo title=\"Compact Pagination\" files={paginationContent.compact} />\n\n### With Shadow\n\nYou can use the `showShadow` property to display a shadow below the active page item.\n\n<CodeDemo title=\"With Shadow\" files={paginationContent.shadow} />\n\n### Controlled\n\n<CodeDemo title=\"Controlled\" files={paginationContent.controlled} />\n\n### Siblings\n\nYou can control the number of pages to show before and after the current page by setting the `siblings` property.\n\n<CodeDemo title=\"Siblings\" files={paginationContent.siblings} />\n\n### Boundaries\n\nYou can control the number of pages to show at the beginning and end of the pagination by setting the `boundaries` property.\n\n<CodeDemo title=\"Boundaries\" files={paginationContent.boundaries} />\n\n### Custom items\n\nYou can use the `renderItem` property to customize the pagination items.\n\n<CodeDemo title=\"Custom items\" files={paginationContent.customItems} />\n\n## Slots\n\n- **base**: The main pagination slot.\n- **wrapper**: The pagination wrapper slot. This wraps the pagination items.\n- **prev**: The previous button slot.\n- **next**: The next button slot.\n- **item**: The pagination item slot, applied to the middle items.\n- **cursor**: The current page slot. Available only when `disableCursorAnimation` is `false` and `disableAnimation` is `false`.\n- **forwardIcon**: The forward icon slot. The one that appears when hovering the ellipsis button.\n- **ellipsis**: The ellipsis slot.\n- **chevronNext**: The chevron next icon slot.\n\n### Custom Styles\n\nYou can customize the `Pagination` component by passing custom Tailwind CSS classes to the component slots.\n\n<CodeDemo title=\"Custom Styles\" files={paginationContent.customStyles} />\n\n### Custom Implementation\n\nIn case you need to customize the pagination even further, you can use the `usePagination` hook to create\nyour own implementation.\n\n<CodeDemo title=\"Custom Implementation\" files={paginationContent.customImpl} /> \n\n<Spacer y={4} />\n\n## Data Attributes\n\n`Pagination` has the following attributes on the `base` element:\n\n- **data-controls**:\n  Indicates whether the pagination has controls. Based on `showControls` prop.\n- **data-loop**:\n  When the pagination is looped. Based on `loop` prop.\n- **data-dots-jump**:\n  Indicates whether the pagination has dots jump. Based on `dotsJump` prop.\n- **data-total**:\n  The total number of pages. Based on `total` prop.\n- **data-active-page**:\n  The active page. Based on `activePage` prop.\n\n<Spacer y={4} />\n\n## Accessibility\n\n- The root node has a role of `navigation` by default.\n- The pagination items have an aria-label that identifies the item purpose (\"next page button\", \"previous page button\", etc.), you\n  can override this label by using the `getItemAriaLabel` function.\n- The pagination items are in tab order, with a tabindex of \"0\".\n\n<Spacer y={4} />\n\n## API\n\n### Pagination Props\n\n<APITable\n  data={[\n    {\n      attribute: \"variant\",\n      type: \"flat | bordered | light | faded\",\n      description: \"The pagination variant.\",\n      default: \"flat\"\n    },\n    {\n      attribute: \"color\",\n      type: \"default | primary | secondary | success | warning | danger\",\n      description: \"The pagination color theme.\",\n      default: \"default\"\n    },\n    {\n      attribute: \"size\",\n      type: \"sm | md | lg\",\n      description: \"The pagination size.\",\n      default: \"md\"\n    },\n    {\n      attribute: \"radius\",\n      type: \"none | sm | md | lg | full\",\n      description: \"The pagination border radius.\",\n      default: \"xl\"\n    },\n    {\n      attribute: \"total\",\n      type: \"number\",\n      description: \"The total number of pages.\",\n      default: \"1\"\n    },\n    {\n      attribute: \"dotsJump\",\n      type: \"number\",\n      description: \"The number of pages that are added or subtracted on the '...' button.\",\n      default: \"5\"\n    },\n    {\n      attribute: \"initialPage\",\n      type: \"number\",\n      description: \"The initial page. (uncontrolled)\",\n      default: \"1\"\n    },\n    {\n      attribute: \"page\",\n      type: \"number\",\n      description: \"The current page. (controlled)\",\n      default: \"-\"\n    },\n    {\n      attribute: \"siblings\",\n      type: \"number\",\n      description: \"The number of pages to show before and after the current page.\",\n      default: \"1\"\n    },\n    {\n      attribute: \"boundaries\",\n      type: \"number\",\n      description: \"The number of pages to show at the beginning and end of the pagination.\",\n      default: \"1\"\n    },\n    {\n      attribute: \"loop\",\n      type: \"boolean\",\n      description: \"Whether the pagination should be looped.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isCompact\",\n      type: \"boolean\",\n      description: \"Whether the pagination should have a compact style.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isDisabled\",\n      type: \"boolean\",\n      description: \"Whether the pagination is disabled.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"showShadow\",\n      type: \"boolean\",\n      description: \"Whether the pagination cursor should have a shadow.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"showControls\",\n      type: \"boolean\",\n      description: \"Whether the pagination should have controls.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"disableCursorAnimation\",\n      type: \"boolean\",\n      description: \"Whether the pagination cursor should be hidden.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"disableAnimation\",\n      type: \"boolean\",\n      description: \"Whether the pagination cursor should be animated.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"renderItem\",\n      type: \"PaginationItemProps\",\n      description: \"The pagination item render function.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"getItemAriaLabel\",\n      type: \"(page: string) => string\",\n      description: \"A function that allows you to customize the pagination items aria-label.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"classNames\",\n      type: \"Partial<Record<'base' | 'wrapper' | 'prev' | 'next' | 'item' | 'cursor' | 'forwardIcon' | 'ellipsis' | 'chevronNext', string>>\",\n      description: \"Allows to set custom class names for the pagination slots.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### Pagination Events\n\n<APITable\n  data={[\n    {\n      attribute: \"onChange\",\n      type: \"(page: number) => void\",\n      description: \"Handler that is called when the pagination active page changes.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n---\n\n### Types\n\n#### Pagination Item Props\n\n```ts\nexport type PaginationItemRenderProps = {\n  // The pagination item ref.\n  ref?: Ref<T>;\n  // The pagination item value.\n  value: PaginationItemValue;\n  // The pagination item index.\n  index: number;\n  // The active page number.\n  activePage: number;\n  // Whether the pagination item is active.\n  isActive: boolean;\n  // Whether the pagination item is the first item in the pagination.\n  isFirst: boolean;\n  // Whether the pagination item is the last item in the pagination.\n  isLast: boolean;\n  // Whether the pagination item is the next item in the pagination.\n  isNext: boolean;\n  // Whether the pagination item is the previous item in the pagination.\n  isPrevious: boolean;\n  // The pagination item className.\n  className: string;\n  // Callback to go to the next page.\n  onNext: () => void;\n  // Callback to go to the previous page.\n  onPrevious: () => void;\n  // Callback to go to the page.\n  setPage: (page: number) => void;\n};\n\ntype renderItem?: (props: PaginationItemRenderProps) => ReactNode;\n```\n",
    "code": "var Component=(()=>{var Z=Object.create;var p=Object.defineProperty;var ee=Object.getOwnPropertyDescriptor;var te=Object.getOwnPropertyNames;var ne=Object.getPrototypeOf,ie=Object.prototype.hasOwnProperty;var oe=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),ae=(n,t)=>{for(var a in t)p(n,a,{get:t[a],enumerable:!0})},h=(n,t,a,l)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of te(t))!ie.call(n,i)&&i!==a&&p(n,i,{get:()=>t[i],enumerable:!(l=ee(t,i))||l.enumerable});return n};var re=(n,t,a)=>(a=n!=null?Z(ne(n)):{},h(t||!n||!n.__esModule?p(a,\"default\",{value:n,enumerable:!0}):a,n)),le=n=>h(p({},\"__esModule\",{value:!0}),n);var g=oe((He,m)=>{m.exports=_jsx_runtime});var Oe={};ae(Oe,{default:()=>Q,frontmatter:()=>Fe});var e=re(g());var f=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  return <Pagination initialPage={1} total={10} />;\n}\n`;var pe={\"/App.jsx\":f},b={...pe};var P=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  return <Pagination isDisabled initialPage={1} total={10} />;\n}\n`;var de={\"/App.jsx\":P},v={...de};var y=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  const sizes = [\"sm\", \"md\", \"lg\"];\n\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      {sizes.map((size) => (\n        <Pagination key={size} initialPage={1} size={size} total={10} />\n      ))}\n    </div>\n  );\n}\n`;var he={\"/App.jsx\":y},x={...he};var w=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  const radius = [\"full\", \"xl\", \"lg\", \"md\", \"sm\", \"base\", \"none\"];\n\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      {radius.map((r) => (\n        <Pagination key={r} initialPage={1} radius={r} total={10} />\n      ))}\n    </div>\n  );\n}\n`;var ge={\"/App.jsx\":w},A={...ge};var C=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  const colors = [\"primary\", \"secondary\", \"success\", \"warning\", \"danger\"];\n\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      {colors.map((color) => (\n        <Pagination key={color} color={color} initialPage={1} total={10} />\n      ))}\n    </div>\n  );\n}\n`;var be={\"/App.jsx\":C},I={...be};var T=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  const variants = [\"flat\", \"bordered\", \"faded\", \"light\"];\n\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      {variants.map((variant) => (\n        <Pagination key={variant} initialPage={1} total={10} variant={variant} />\n      ))}\n    </div>\n  );\n}\n`;var ve={\"/App.jsx\":T},k={...ve};var N=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  return <Pagination showControls initialPage={1} total={10} />;\n}\n`;var xe={\"/App.jsx\":N},S={...xe};var j=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  return <Pagination loop showControls color=\"success\" initialPage={1} total={5} />;\n}\n`;var Ae={\"/App.jsx\":j},W={...Ae};var z=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  return <Pagination color=\"warning\" initialPage={3} total={10} />;\n}\n`;var Ie={\"/App.jsx\":z},B={...Ie};var L=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  return <Pagination isCompact showControls initialPage={1} total={10} />;\n}\n`;var ke={\"/App.jsx\":L},R={...ke};var D=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  return <Pagination showShadow color=\"warning\" initialPage={1} total={10} />;\n}\n`;var Se={\"/App.jsx\":D},E={...Se};var V=`import {Pagination, Button} from \"@heroui/react\";\n\nexport default function App() {\n  const [currentPage, setCurrentPage] = React.useState(1);\n\n  return (\n    <div className=\"flex flex-col gap-5\">\n      <p className=\"text-small text-default-500\">Selected Page: {currentPage}</p>\n      <Pagination color=\"secondary\" page={currentPage} total={10} onChange={setCurrentPage} />\n      <div className=\"flex gap-2\">\n        <Button\n          color=\"secondary\"\n          size=\"sm\"\n          variant=\"flat\"\n          onPress={() => setCurrentPage((prev) => (prev > 1 ? prev - 1 : prev))}\n        >\n          Previous\n        </Button>\n        <Button\n          color=\"secondary\"\n          size=\"sm\"\n          variant=\"flat\"\n          onPress={() => setCurrentPage((prev) => (prev < 10 ? prev + 1 : prev))}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n`;var We={\"/App.jsx\":V},M={...We};var Y=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col gap-5\">\n      <p>1 Sibling (default)</p>\n      <Pagination total={10} />\n      <p>2 Siblings</p>\n      <Pagination siblings={2} total={10} />\n      <p>3 Siblings</p>\n      <Pagination siblings={3} total={10} />\n    </div>\n  );\n}\n`;var Be={\"/App.jsx\":Y},_={...Be};var G=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col gap-5\">\n      <p>1 Boundary (default)</p>\n      <Pagination color=\"secondary\" total={10} />\n      <p>2 Boundaries</p>\n      <Pagination boundaries={2} color=\"secondary\" total={10} />\n      <p>3 Boundaries</p>\n      <Pagination boundaries={3} color=\"secondary\" total={10} />\n    </div>\n  );\n}\n`;var Re={\"/App.jsx\":G},X={...Re};var F=`import {Pagination, PaginationItemType} from \"@heroui/react\";\n\nexport const ChevronIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.5 19l-7-7 7-7\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"1.5\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  const renderItem = ({ref, key, value, isActive, onNext, onPrevious, setPage, className}) => {\n    if (value === PaginationItemType.NEXT) {\n      return (\n        <button\n          key={key}\n          className={cn(className, \"bg-default-200/50 min-w-8 w-8 h-8\")}\n          onClick={onNext}\n        >\n          <ChevronIcon className=\"rotate-180\" />\n        </button>\n      );\n    }\n\n    if (value === PaginationItemType.PREV) {\n      return (\n        <button\n          key={key}\n          className={cn(className, \"bg-default-200/50 min-w-8 w-8 h-8\")}\n          onClick={onPrevious}\n        >\n          <ChevronIcon />\n        </button>\n      );\n    }\n\n    if (value === PaginationItemType.DOTS) {\n      return (\n        <button key={key} className={className}>\n          ...\n        </button>\n      );\n    }\n\n    // cursor is the default item\n    return (\n      <button\n        key={key}\n        ref={ref}\n        className={cn(\n          className,\n          isActive && \"text-white bg-gradient-to-br from-indigo-500 to-pink-500 font-bold\",\n        )}\n        onClick={() => setPage(value)}\n      >\n        {value}\n      </button>\n    );\n  };\n\n  return (\n    <Pagination\n      disableCursorAnimation\n      showControls\n      className=\"gap-2\"\n      initialPage={1}\n      radius=\"full\"\n      renderItem={renderItem}\n      total={10}\n      variant=\"light\"\n    />\n  );\n}\n`;var O=`import React, {SVGProps} from \"react\";\nimport {cn, Pagination, PaginationItemType, PaginationItemRenderProps} from \"@heroui/react\";\n\ntype IconSvgProps = SVGProps<SVGSVGElement>;\n\nexport const ChevronIcon = (props: IconSvgProps) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.5 19l-7-7 7-7\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"1.5\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  const renderItem = ({\n    ref,\n    key,\n    value,\n    isActive,\n    onNext,\n    onPrevious,\n    setPage,\n    className,\n  }: PaginationItemRenderProps) => {\n    if (value === PaginationItemType.NEXT) {\n      return (\n        <button\n          key={key}\n          className={cn(className, \"bg-default-200/50 min-w-8 w-8 h-8\")}\n          onClick={onNext}\n        >\n          <ChevronIcon className=\"rotate-180\" />\n        </button>\n      );\n    }\n\n    if (value === PaginationItemType.PREV) {\n      return (\n        <button\n          key={key}\n          className={cn(className, \"bg-default-200/50 min-w-8 w-8 h-8\")}\n          onClick={onPrevious}\n        >\n          <ChevronIcon />\n        </button>\n      );\n    }\n\n    if (value === PaginationItemType.DOTS) {\n      return (\n        <button key={key} className={className}>\n          ...\n        </button>\n      );\n    }\n\n    // cursor is the default item\n    return (\n      <button\n        key={key}\n        ref={ref}\n        className={cn(\n          className,\n          isActive && \"text-white bg-gradient-to-br from-indigo-500 to-pink-500 font-bold\",\n        )}\n        onClick={() => setPage(value)}\n      >\n        {value}\n      </button>\n    );\n  };\n\n  return (\n    <Pagination\n      disableCursorAnimation\n      showControls\n      className=\"gap-2\"\n      initialPage={1}\n      radius=\"full\"\n      renderItem={renderItem}\n      total={10}\n      variant=\"light\"\n    />\n  );\n}\n`;var Ve={\"/App.jsx\":F},Me={\"/App.tsx\":O},U={...Ve,...Me};var H=`import {Pagination} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Pagination\n      classNames={{\n        wrapper: \"gap-0 overflow-visible h-8 rounded border border-divider\",\n        item: \"w-8 h-8 text-small rounded-none bg-transparent\",\n        cursor:\n          \"bg-gradient-to-b shadow-lg from-default-500 to-default-800 dark:from-default-300 dark:to-default-100 text-white font-bold\",\n      }}\n      total={10}\n    />\n  );\n}\n`;var _e={\"/App.jsx\":H},J={..._e};var $=`import {usePagination, PaginationItemType} from \"@heroui/react\";\n\nexport const ChevronIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        d=\"M15.5 19l-7-7 7-7\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"1.5\"\n      />\n    </svg>\n  );\n};\n\nexport default function App() {\n  const {activePage, range, setPage, onNext, onPrevious} = usePagination({\n    total: 6,\n    showControls: true,\n    siblings: 10,\n    boundaries: 10,\n  });\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <p>Active page: {activePage}</p>\n      <ul className=\"flex gap-2 items-center\">\n        {range.map((page) => {\n          if (page === PaginationItemType.NEXT) {\n            return (\n              <li key={page} aria-label=\"next page\" className=\"w-4 h-4\">\n                <button className=\"w-full h-full bg-default-200 rounded-full\" onClick={onNext}>\n                  <ChevronIcon className=\"rotate-180\" />\n                </button>\n              </li>\n            );\n          }\n\n          if (page === PaginationItemType.PREV) {\n            return (\n              <li key={page} aria-label=\"previous page\" className=\"w-4 h-4\">\n                <button className=\"w-full h-full bg-default-200 rounded-full\" onClick={onPrevious}>\n                  <ChevronIcon />\n                </button>\n              </li>\n            );\n          }\n\n          if (page === PaginationItemType.DOTS) {\n            return (\n              <li key={page} className=\"w-4 h-4\">\n                ...\n              </li>\n            );\n          }\n\n          return (\n            <li key={page} aria-label={\\`page \\${page}\\`} className=\"w-4 h-4\">\n              <button\n                className={cn(\n                  \"w-full h-full bg-default-300 rounded-full\",\n                  activePage === page && \"bg-secondary\",\n                )}\n                onClick={() => setPage(page)}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n`;var Xe={\"/App.jsx\":$},q={...Xe};var o={usage:b,disabled:v,sizes:x,radius:A,colors:I,variants:k,controls:S,loop:W,shadow:E,initialPage:B,compact:R,controlled:M,siblings:_,boundaries:X,customItems:U,customStyles:J,customImpl:q};var Fe={title:\"Pagination\",description:\"The Pagination component allows you to display active page and navigate between multiple pages.\"};function K(n){let t={code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...n.components},{APITable:a,CarbonAd:l,CodeDemo:i,ComponentLinks:c,ImportTabs:d,PackageManagers:u,Spacer:s}=t;return a||r(\"APITable\",!0),l||r(\"CarbonAd\",!0),i||r(\"CodeDemo\",!0),c||r(\"ComponentLinks\",!0),d||r(\"ImportTabs\",!0),u||r(\"PackageManagers\",!0),s||r(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:\"pagination\",children:\"Pagination\"}),`\n`,(0,e.jsx)(t.p,{children:\"The Pagination component allows you to display active page and navigate between multiple pages.\"}),`\n`,(0,e.jsx)(c,{component:\"pagination\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(l,{}),`\n`,(0,e.jsx)(t.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(u,{showGlobalInstallWarning:!0,commands:{cli:\"npx heroui-cli@latest add pagination\",npm:\"npm install @heroui/pagination\",yarn:\"yarn add @heroui/pagination\",pnpm:\"pnpm add @heroui/pagination\",bun:\"bun add @heroui/pagination\"}}),`\n`,(0,e.jsx)(t.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(t.p,{children:\"HeroUI exports 3 pagination-related components:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"Pagination\"}),\": The main component to display a pagination.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"PaginationItem\"}),\": The internal component to display a pagination item.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"PaginationCursor\"}),\": The internal item component to display the current page.\"]}),`\n`]}),`\n`,(0,e.jsx)(d,{commands:{main:'import {Pagination, PaginationItem, PaginationCursor} from \"@heroui/react\";',individual:'import {Pagination, PaginationItem, PaginationCursor} from \"@heroui/pagination\";'}}),`\n`,(0,e.jsx)(t.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(i,{title:\"Usage\",files:o.usage}),`\n`,(0,e.jsx)(t.h3,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,e.jsx)(i,{title:\"Disabled\",files:o.disabled}),`\n`,(0,e.jsx)(t.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,e.jsx)(i,{title:\"Sizes\",files:o.sizes}),`\n`,(0,e.jsx)(t.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,e.jsx)(i,{title:\"Radius\",files:o.colors}),`\n`,(0,e.jsx)(t.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"variant\"}),\" property to change the pagination items style.\"]}),`\n`,(0,e.jsx)(i,{title:\"Variants\",files:o.variants}),`\n`,(0,e.jsx)(t.h3,{id:\"with-controls\",children:\"With Controls\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can set the \",(0,e.jsx)(t.code,{children:\"showControls\"}),\" to \",(0,e.jsx)(t.code,{children:\"true\"}),\" to display the \",(0,e.jsx)(t.code,{children:\"next\"}),\" and \",(0,e.jsx)(t.code,{children:\"previous\"}),\" buttons.\"]}),`\n`,(0,e.jsx)(i,{title:\"With Controls\",files:o.controls}),`\n`,(0,e.jsx)(t.h3,{id:\"pagination-loop\",children:\"Pagination Loop\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"In case you want to loop the pagination, you can set the \",(0,e.jsx)(t.code,{children:\"loop\"}),\" property to \",(0,e.jsx)(t.code,{children:\"true\"}),`.\nThe cursor will go back to the first page when it reaches the last page and vice versa.`]}),`\n`,(0,e.jsx)(i,{title:\"Pagination Loop\",files:o.loop}),`\n`,(0,e.jsx)(t.h3,{id:\"changing-the-initial-page\",children:\"Changing the initial page\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can change the initial page by setting the \",(0,e.jsx)(t.code,{children:\"initialPage\"}),\" property.\"]}),`\n`,(0,e.jsx)(i,{title:\"Changing the initial page\",files:o.initialPage}),`\n`,(0,e.jsx)(t.h3,{id:\"compact-pagination\",children:\"Compact Pagination\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can set the \",(0,e.jsx)(t.code,{children:\"isCompact\"}),\" property to \",(0,e.jsx)(t.code,{children:\"true\"}),\" to display reduced version of the pagination.\"]}),`\n`,(0,e.jsx)(i,{title:\"Compact Pagination\",files:o.compact}),`\n`,(0,e.jsx)(t.h3,{id:\"with-shadow\",children:\"With Shadow\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"showShadow\"}),\" property to display a shadow below the active page item.\"]}),`\n`,(0,e.jsx)(i,{title:\"With Shadow\",files:o.shadow}),`\n`,(0,e.jsx)(t.h3,{id:\"controlled\",children:\"Controlled\"}),`\n`,(0,e.jsx)(i,{title:\"Controlled\",files:o.controlled}),`\n`,(0,e.jsx)(t.h3,{id:\"siblings\",children:\"Siblings\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can control the number of pages to show before and after the current page by setting the \",(0,e.jsx)(t.code,{children:\"siblings\"}),\" property.\"]}),`\n`,(0,e.jsx)(i,{title:\"Siblings\",files:o.siblings}),`\n`,(0,e.jsx)(t.h3,{id:\"boundaries\",children:\"Boundaries\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can control the number of pages to show at the beginning and end of the pagination by setting the \",(0,e.jsx)(t.code,{children:\"boundaries\"}),\" property.\"]}),`\n`,(0,e.jsx)(i,{title:\"Boundaries\",files:o.boundaries}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-items\",children:\"Custom items\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"renderItem\"}),\" property to customize the pagination items.\"]}),`\n`,(0,e.jsx)(i,{title:\"Custom items\",files:o.customItems}),`\n`,(0,e.jsx)(t.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),\": The main pagination slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"wrapper\"}),\": The pagination wrapper slot. This wraps the pagination items.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"prev\"}),\": The previous button slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"next\"}),\": The next button slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"item\"}),\": The pagination item slot, applied to the middle items.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"cursor\"}),\": The current page slot. Available only when \",(0,e.jsx)(t.code,{children:\"disableCursorAnimation\"}),\" is \",(0,e.jsx)(t.code,{children:\"false\"}),\" and \",(0,e.jsx)(t.code,{children:\"disableAnimation\"}),\" is \",(0,e.jsx)(t.code,{children:\"false\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"forwardIcon\"}),\": The forward icon slot. The one that appears when hovering the ellipsis button.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"ellipsis\"}),\": The ellipsis slot.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"chevronNext\"}),\": The chevron next icon slot.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-styles\",children:\"Custom Styles\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize the \",(0,e.jsx)(t.code,{children:\"Pagination\"}),\" component by passing custom Tailwind CSS classes to the component slots.\"]}),`\n`,(0,e.jsx)(i,{title:\"Custom Styles\",files:o.customStyles}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-implementation\",children:\"Custom Implementation\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"In case you need to customize the pagination even further, you can use the \",(0,e.jsx)(t.code,{children:\"usePagination\"}),` hook to create\nyour own implementation.`]}),`\n`,(0,e.jsx)(i,{title:\"Custom Implementation\",files:o.customImpl}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"Pagination\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-controls\"}),`:\nIndicates whether the pagination has controls. Based on `,(0,e.jsx)(t.code,{children:\"showControls\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-loop\"}),`:\nWhen the pagination is looped. Based on `,(0,e.jsx)(t.code,{children:\"loop\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-dots-jump\"}),`:\nIndicates whether the pagination has dots jump. Based on `,(0,e.jsx)(t.code,{children:\"dotsJump\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-total\"}),`:\nThe total number of pages. Based on `,(0,e.jsx)(t.code,{children:\"total\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-active-page\"}),`:\nThe active page. Based on `,(0,e.jsx)(t.code,{children:\"activePage\"}),\" prop.\"]}),`\n`]}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"The root node has a role of \",(0,e.jsx)(t.code,{children:\"navigation\"}),\" by default.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[`The pagination items have an aria-label that identifies the item purpose (\"next page button\", \"previous page button\", etc.), you\ncan override this label by using the `,(0,e.jsx)(t.code,{children:\"getItemAriaLabel\"}),\" function.\"]}),`\n`,(0,e.jsx)(t.li,{children:'The pagination items are in tab order, with a tabindex of \"0\".'}),`\n`]}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(t.h3,{id:\"pagination-props\",children:\"Pagination Props\"}),`\n`,(0,e.jsx)(a,{data:[{attribute:\"variant\",type:\"flat | bordered | light | faded\",description:\"The pagination variant.\",default:\"flat\"},{attribute:\"color\",type:\"default | primary | secondary | success | warning | danger\",description:\"The pagination color theme.\",default:\"default\"},{attribute:\"size\",type:\"sm | md | lg\",description:\"The pagination size.\",default:\"md\"},{attribute:\"radius\",type:\"none | sm | md | lg | full\",description:\"The pagination border radius.\",default:\"xl\"},{attribute:\"total\",type:\"number\",description:\"The total number of pages.\",default:\"1\"},{attribute:\"dotsJump\",type:\"number\",description:\"The number of pages that are added or subtracted on the '...' button.\",default:\"5\"},{attribute:\"initialPage\",type:\"number\",description:\"The initial page. (uncontrolled)\",default:\"1\"},{attribute:\"page\",type:\"number\",description:\"The current page. (controlled)\",default:\"-\"},{attribute:\"siblings\",type:\"number\",description:\"The number of pages to show before and after the current page.\",default:\"1\"},{attribute:\"boundaries\",type:\"number\",description:\"The number of pages to show at the beginning and end of the pagination.\",default:\"1\"},{attribute:\"loop\",type:\"boolean\",description:\"Whether the pagination should be looped.\",default:\"false\"},{attribute:\"isCompact\",type:\"boolean\",description:\"Whether the pagination should have a compact style.\",default:\"false\"},{attribute:\"isDisabled\",type:\"boolean\",description:\"Whether the pagination is disabled.\",default:\"false\"},{attribute:\"showShadow\",type:\"boolean\",description:\"Whether the pagination cursor should have a shadow.\",default:\"false\"},{attribute:\"showControls\",type:\"boolean\",description:\"Whether the pagination should have controls.\",default:\"false\"},{attribute:\"disableCursorAnimation\",type:\"boolean\",description:\"Whether the pagination cursor should be hidden.\",default:\"false\"},{attribute:\"disableAnimation\",type:\"boolean\",description:\"Whether the pagination cursor should be animated.\",default:\"false\"},{attribute:\"renderItem\",type:\"PaginationItemProps\",description:\"The pagination item render function.\",default:\"-\"},{attribute:\"getItemAriaLabel\",type:\"(page: string) => string\",description:\"A function that allows you to customize the pagination items aria-label.\",default:\"-\"},{attribute:\"classNames\",type:\"Partial<Record<'base' | 'wrapper' | 'prev' | 'next' | 'item' | 'cursor' | 'forwardIcon' | 'ellipsis' | 'chevronNext', string>>\",description:\"Allows to set custom class names for the pagination slots.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.h3,{id:\"pagination-events\",children:\"Pagination Events\"}),`\n`,(0,e.jsx)(a,{data:[{attribute:\"onChange\",type:\"(page: number) => void\",description:\"Handler that is called when the pagination active page changes.\",default:\"-\"}]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h3,{id:\"types\",children:\"Types\"}),`\n`,(0,e.jsx)(t.h4,{id:\"pagination-item-props\",children:\"Pagination Item Props\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-ts\",children:`export type PaginationItemRenderProps = {\n  // The pagination item ref.\n  ref?: Ref<T>;\n  // The pagination item value.\n  value: PaginationItemValue;\n  // The pagination item index.\n  index: number;\n  // The active page number.\n  activePage: number;\n  // Whether the pagination item is active.\n  isActive: boolean;\n  // Whether the pagination item is the first item in the pagination.\n  isFirst: boolean;\n  // Whether the pagination item is the last item in the pagination.\n  isLast: boolean;\n  // Whether the pagination item is the next item in the pagination.\n  isNext: boolean;\n  // Whether the pagination item is the previous item in the pagination.\n  isPrevious: boolean;\n  // The pagination item className.\n  className: string;\n  // Callback to go to the next page.\n  onNext: () => void;\n  // Callback to go to the previous page.\n  onPrevious: () => void;\n  // Callback to go to the page.\n  setPage: (page: number) => void;\n};\n\ntype renderItem?: (props: PaginationItemRenderProps) => ReactNode;\n`})})]})}function Q(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(K,{...n})}):K(n)}function r(n,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return le(Oe);})();\n;return Component;"
  },
  "_id": "docs/components/pagination.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/pagination.mdx",
    "sourceFileName": "pagination.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/pagination"
  },
  "type": "Doc",
  "slug": "/docs/components/pagination",
  "slugAsParams": "components/pagination",
  "url": "/docs/components/pagination"
}