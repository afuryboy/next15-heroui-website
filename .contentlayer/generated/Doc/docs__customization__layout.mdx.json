{
  "title": "Layout",
  "description": "HeroUI offers a set of layout options to customize the theme.",
  "body": {
    "raw": "\n# Layout\n\nHeroUI provides layout customization options for spacing, fonts, and other visual properties. Layout tokens help maintain consistency across components without modifying Tailwind CSS defaults.\n\n<CarbonAd/>\n\n<Spacer y={4} />\n\n```js {4,7,11}\nmodule.exports = {\n  plugins: [\n    heroui({\n      layout: {}, // common layout options\n      themes: {\n        light: {\n          layout: {}, // light theme layout options\n          // ...\n        },\n        dark: {\n          layout: {}, // dark theme layout options\n          // ...\n        },\n        // ... custom themes\n      },\n    }),\n  ],\n};\n```\n\n> Layout options are applied to all components.\n\n## Default Layout\n\nDefault values for the layout tokens are:\n\n```js\nmodule.exports = {\n  plugins: [\n    heroui({\n      layout: {\n        dividerWeight: \"1px\", // h-divider the default height applied to the divider component\n        disabledOpacity: 0.5, // this value is applied as opacity-[value] when the component is disabled\n        fontSize: {\n          tiny: \"0.75rem\", // text-tiny\n          small: \"0.875rem\", // text-small\n          medium: \"1rem\", // text-medium\n          large: \"1.125rem\", // text-large\n        },\n        lineHeight: {\n          tiny: \"1rem\", // text-tiny\n          small: \"1.25rem\", // text-small\n          medium: \"1.5rem\", // text-medium\n          large: \"1.75rem\", // text-large\n        },\n        radius: {\n          small: \"8px\", // rounded-small\n          medium: \"12px\", // rounded-medium\n          large: \"14px\", // rounded-large\n        },\n        borderWidth: {\n          small: \"1px\", // border-small\n          medium: \"2px\", // border-medium (default)\n          large: \"3px\", // border-large\n        },\n      },\n      themes: {\n        light: {\n          layout: {\n            hoverOpacity: 0.8, //  this value is applied as opacity-[value] when the component is hovered\n            boxShadow: {\n              // shadow-small\n              small:\n                \"0px 0px 5px 0px rgb(0 0 0 / 0.02), 0px 2px 10px 0px rgb(0 0 0 / 0.06), 0px 0px 1px 0px rgb(0 0 0 / 0.3)\",\n              // shadow-medium\n              medium:\n                \"0px 0px 15px 0px rgb(0 0 0 / 0.03), 0px 2px 30px 0px rgb(0 0 0 / 0.08), 0px 0px 1px 0px rgb(0 0 0 / 0.3)\",\n              // shadow-large\n              large:\n                \"0px 0px 30px 0px rgb(0 0 0 / 0.04), 0px 30px 60px 0px rgb(0 0 0 / 0.12), 0px 0px 1px 0px rgb(0 0 0 / 0.3)\",\n            },\n          },\n        },\n        dark: {\n          layout: {\n            hoverOpacity: 0.9, //  this value is applied as opacity-[value] when the component is hovered\n            boxShadow: {\n              // shadow-small\n              small:\n                \"0px 0px 5px 0px rgb(0 0 0 / 0.05), 0px 2px 10px 0px rgb(0 0 0 / 0.2), inset 0px 0px 1px 0px rgb(255 255 255 / 0.15)\",\n              // shadow-medium\n              medium:\n                \"0px 0px 15px 0px rgb(0 0 0 / 0.06), 0px 2px 30px 0px rgb(0 0 0 / 0.22), inset 0px 0px 1px 0px rgb(255 255 255 / 0.15)\",\n              // shadow-large\n              large:\n                \"0px 0px 30px 0px rgb(0 0 0 / 0.07), 0px 30px 60px 0px rgb(0 0 0 / 0.26), inset 0px 0px 1px 0px rgb(255 255 255 / 0.15)\",\n            },\n          },\n        },\n      },\n    }),\n  ],\n};\n```\n\n### CSS Variables\n\nHeroUI creates CSS variables using the format `--prefix-prop-name-scale` for each layout token. By\ndefault the prefix is `heroui`, but you can change it with the `prefix` option.\n\n```js {4}\nmodule.exports = {\n  plugins: [\n    heroui({\n      prefix: \"myapp\",\n    }),\n  ],\n};\n```\n\nThen you can use the CSS variables in your CSS files.\n\n```css\n/* With default prefix */\n.my-button {\n  font-size: var(--heroui-font-size-small);\n  line-height: var(--heroui-line-height-small);\n  border-radius: var(--heroui-radius-medium);\n}\n\n/*  With custom prefix */\n.my-component {\n  font-size: var(--myapp-font-size-small);\n  line-height: var(--myapp-line-height-small);\n  border-radius: var(--myapp-radius-medium);\n}\n```\n\n#### API Reference\n\n| Attribute       | Type                            | Description                                                                                 |\n| --------------- | ------------------------------- | ------------------------------------------------------------------------------------------- |\n| hoverOpacity    | string, number                  | A number between 0 and 1 that is applied as opacity-[value] when the component is hovered.  |\n| disabledOpacity | string, number                  | A number between 0 and 1 that is applied as opacity-[value] when the component is disabled. |\n| dividerWeight   | string                          | The default height applied to the divider component. We recommend to use `px` units.        |\n| fontSize        | [FontThemeUnit](#fontthemeunit) | The default font size applied across the components.                                        |\n| lineHeight      | [FontThemeUnit](#fontthemeunit) | The default line height applied across the components.                                      |\n| radius          | [BaseThemeUnit](#basethemeunit) | The default radius applied across the components. We recommend to use `rem` units.          |\n| borderWidth     | [BaseThemeUnit](#basethemeunit) | The border width applied across the components.                                             |\n| boxShadow       | [BaseThemeUnit](#basethemeunit) | The box shadow applied across the components.                                               |\n\n#### BaseThemeUnit\n\n```ts\nexport type BaseThemeUnit = {\n  small?: string;\n  medium?: string;\n  large?: string;\n};\n```\n\n#### FontThemeUnit\n\n```ts\nexport type FontThemeUnit = {\n  small?: string;\n  medium?: string;\n  large?: string;\n  tiny?: string;\n};\n```",
    "code": "var Component=(()=>{var m=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var y=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),f=(t,e)=>{for(var i in e)a(t,i,{get:e[i],enumerable:!0})},o=(t,e,i,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let d of x(e))!b.call(t,d)&&d!==i&&a(t,d,{get:()=>e[d],enumerable:!(r=u(e,d))||r.enumerable});return t};var v=(t,e,i)=>(i=t!=null?m(g(t)):{},o(e||!t||!t.__esModule?a(i,\"default\",{value:t,enumerable:!0}):i,t)),w=t=>o(a({},\"__esModule\",{value:!0}),t);var h=y((k,l)=>{l.exports=_jsx_runtime});var S={};f(S,{default:()=>c,frontmatter:()=>T});var n=v(h()),T={title:\"Layout\",description:\"HeroUI offers a set of layout options to customize the theme.\"};function p(t){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",p:\"p\",pre:\"pre\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",...t.components},{CarbonAd:i,Spacer:r}=e;return i||s(\"CarbonAd\",!0),r||s(\"Spacer\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:\"layout\",children:\"Layout\"}),`\n`,(0,n.jsx)(e.p,{children:\"HeroUI provides layout customization options for spacing, fonts, and other visual properties. Layout tokens help maintain consistency across components without modifying Tailwind CSS defaults.\"}),`\n`,(0,n.jsx)(i,{}),`\n`,(0,n.jsx)(r,{y:4}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",meta:\"{4,7,11}\",children:`module.exports = {\n  plugins: [\n    heroui({\n      layout: {}, // common layout options\n      themes: {\n        light: {\n          layout: {}, // light theme layout options\n          // ...\n        },\n        dark: {\n          layout: {}, // dark theme layout options\n          // ...\n        },\n        // ... custom themes\n      },\n    }),\n  ],\n};\n`})}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Layout options are applied to all components.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{id:\"default-layout\",children:\"Default Layout\"}),`\n`,(0,n.jsx)(e.p,{children:\"Default values for the layout tokens are:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`module.exports = {\n  plugins: [\n    heroui({\n      layout: {\n        dividerWeight: \"1px\", // h-divider the default height applied to the divider component\n        disabledOpacity: 0.5, // this value is applied as opacity-[value] when the component is disabled\n        fontSize: {\n          tiny: \"0.75rem\", // text-tiny\n          small: \"0.875rem\", // text-small\n          medium: \"1rem\", // text-medium\n          large: \"1.125rem\", // text-large\n        },\n        lineHeight: {\n          tiny: \"1rem\", // text-tiny\n          small: \"1.25rem\", // text-small\n          medium: \"1.5rem\", // text-medium\n          large: \"1.75rem\", // text-large\n        },\n        radius: {\n          small: \"8px\", // rounded-small\n          medium: \"12px\", // rounded-medium\n          large: \"14px\", // rounded-large\n        },\n        borderWidth: {\n          small: \"1px\", // border-small\n          medium: \"2px\", // border-medium (default)\n          large: \"3px\", // border-large\n        },\n      },\n      themes: {\n        light: {\n          layout: {\n            hoverOpacity: 0.8, //  this value is applied as opacity-[value] when the component is hovered\n            boxShadow: {\n              // shadow-small\n              small:\n                \"0px 0px 5px 0px rgb(0 0 0 / 0.02), 0px 2px 10px 0px rgb(0 0 0 / 0.06), 0px 0px 1px 0px rgb(0 0 0 / 0.3)\",\n              // shadow-medium\n              medium:\n                \"0px 0px 15px 0px rgb(0 0 0 / 0.03), 0px 2px 30px 0px rgb(0 0 0 / 0.08), 0px 0px 1px 0px rgb(0 0 0 / 0.3)\",\n              // shadow-large\n              large:\n                \"0px 0px 30px 0px rgb(0 0 0 / 0.04), 0px 30px 60px 0px rgb(0 0 0 / 0.12), 0px 0px 1px 0px rgb(0 0 0 / 0.3)\",\n            },\n          },\n        },\n        dark: {\n          layout: {\n            hoverOpacity: 0.9, //  this value is applied as opacity-[value] when the component is hovered\n            boxShadow: {\n              // shadow-small\n              small:\n                \"0px 0px 5px 0px rgb(0 0 0 / 0.05), 0px 2px 10px 0px rgb(0 0 0 / 0.2), inset 0px 0px 1px 0px rgb(255 255 255 / 0.15)\",\n              // shadow-medium\n              medium:\n                \"0px 0px 15px 0px rgb(0 0 0 / 0.06), 0px 2px 30px 0px rgb(0 0 0 / 0.22), inset 0px 0px 1px 0px rgb(255 255 255 / 0.15)\",\n              // shadow-large\n              large:\n                \"0px 0px 30px 0px rgb(0 0 0 / 0.07), 0px 30px 60px 0px rgb(0 0 0 / 0.26), inset 0px 0px 1px 0px rgb(255 255 255 / 0.15)\",\n            },\n          },\n        },\n      },\n    }),\n  ],\n};\n`})}),`\n`,(0,n.jsx)(e.h3,{id:\"css-variables\",children:\"CSS Variables\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"HeroUI creates CSS variables using the format \",(0,n.jsx)(e.code,{children:\"--prefix-prop-name-scale\"}),` for each layout token. By\ndefault the prefix is `,(0,n.jsx)(e.code,{children:\"heroui\"}),\", but you can change it with the \",(0,n.jsx)(e.code,{children:\"prefix\"}),\" option.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",meta:\"{4}\",children:`module.exports = {\n  plugins: [\n    heroui({\n      prefix: \"myapp\",\n    }),\n  ],\n};\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"Then you can use the CSS variables in your CSS files.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`/* With default prefix */\n.my-button {\n  font-size: var(--heroui-font-size-small);\n  line-height: var(--heroui-line-height-small);\n  border-radius: var(--heroui-radius-medium);\n}\n\n/*  With custom prefix */\n.my-component {\n  font-size: var(--myapp-font-size-small);\n  line-height: var(--myapp-line-height-small);\n  border-radius: var(--myapp-radius-medium);\n}\n`})}),`\n`,(0,n.jsx)(e.h4,{id:\"api-reference\",children:\"API Reference\"}),`\n`,(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:\"Attribute\"}),(0,n.jsx)(e.th,{children:\"Type\"}),(0,n.jsx)(e.th,{children:\"Description\"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"hoverOpacity\"}),(0,n.jsx)(e.td,{children:\"string, number\"}),(0,n.jsx)(e.td,{children:\"A number between 0 and 1 that is applied as opacity-[value] when the component is hovered.\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"disabledOpacity\"}),(0,n.jsx)(e.td,{children:\"string, number\"}),(0,n.jsx)(e.td,{children:\"A number between 0 and 1 that is applied as opacity-[value] when the component is disabled.\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"dividerWeight\"}),(0,n.jsx)(e.td,{children:\"string\"}),(0,n.jsxs)(e.td,{children:[\"The default height applied to the divider component. We recommend to use \",(0,n.jsx)(e.code,{children:\"px\"}),\" units.\"]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"fontSize\"}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"#fontthemeunit\",children:\"FontThemeUnit\"})}),(0,n.jsx)(e.td,{children:\"The default font size applied across the components.\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"lineHeight\"}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"#fontthemeunit\",children:\"FontThemeUnit\"})}),(0,n.jsx)(e.td,{children:\"The default line height applied across the components.\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"radius\"}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"#basethemeunit\",children:\"BaseThemeUnit\"})}),(0,n.jsxs)(e.td,{children:[\"The default radius applied across the components. We recommend to use \",(0,n.jsx)(e.code,{children:\"rem\"}),\" units.\"]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"borderWidth\"}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"#basethemeunit\",children:\"BaseThemeUnit\"})}),(0,n.jsx)(e.td,{children:\"The border width applied across the components.\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"boxShadow\"}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"#basethemeunit\",children:\"BaseThemeUnit\"})}),(0,n.jsx)(e.td,{children:\"The box shadow applied across the components.\"})]})]})]}),`\n`,(0,n.jsx)(e.h4,{id:\"basethemeunit\",children:\"BaseThemeUnit\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-ts\",children:`export type BaseThemeUnit = {\n  small?: string;\n  medium?: string;\n  large?: string;\n};\n`})}),`\n`,(0,n.jsx)(e.h4,{id:\"fontthemeunit\",children:\"FontThemeUnit\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-ts\",children:`export type FontThemeUnit = {\n  small?: string;\n  medium?: string;\n  large?: string;\n  tiny?: string;\n};\n`})})]})}function c(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(p,{...t})}):p(t)}function s(t,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return w(S);})();\n;return Component;"
  },
  "_id": "docs/customization/layout.mdx",
  "_raw": {
    "sourceFilePath": "docs/customization/layout.mdx",
    "sourceFileName": "layout.mdx",
    "sourceFileDir": "docs/customization",
    "contentType": "mdx",
    "flattenedPath": "docs/customization/layout"
  },
  "type": "Doc",
  "slug": "/docs/customization/layout",
  "slugAsParams": "customization/layout",
  "url": "/docs/customization/layout"
}