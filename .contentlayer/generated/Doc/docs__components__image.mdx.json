{
  "title": "Image",
  "description": "The Image component is used to display images with support for fallback.",
  "body": {
    "raw": "\nimport {imageContent} from \"@/content/components/image\";\n\n# Image\n\nThe Image component is used to display images with support for fallback.\n\n<ComponentLinks component=\"image\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx heroui-cli@latest add image\",\n    npm: \"npm install @heroui/image\",\n    yarn: \"yarn add @heroui/image\",\n    pnpm: \"pnpm add @heroui/image\",\n    bun: \"bun add @heroui/image\"\n  }}\n/>\n\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Image} from \"@heroui/react\";',\n    individual: 'import {Image} from \"@heroui/image\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={imageContent.usage} />\n\n### Blurred\n\nYou can use the `isBlurred` prop to duplicate the image and blur it to create a blurred effect.\n\n<CodeDemo title=\"Blurred\" files={imageContent.blurred} />\n\n### Zoomed\n\nYou can use the `isZoomed` prop make the image zoomed when hovered.\n\n<CodeDemo title=\"Zoomed\" files={imageContent.zoomed} />\n\n### Animated Loading\n\nImage component has a built-in `skeleton` animation to indicate the image is loading and an\n`opacity` animation when the image loads.\n\n<CodeDemo displayMode=\"visible\" title=\"Animated Loading\" files={imageContent.loading} />\n\n> **Note**: The `URL` uses `https://app.requestly.io/delay` to simulate a slow network.\n\n### Image with fallback\n\nYou can use the `fallbackSrc` prop to display a fallback image when:\n\n- The `fallbackSrc` prop is provided.\n- The image provided in `src` is still loading.\n- The image provided in `src` fails to load.\n- The image provided in `src` is not found.\n\n<CodeDemo displayMode=\"visible\" title=\"Image with fallback\" files={imageContent.fallback} />\n\n### With Next.js Image\n\nNext.js provides an optimized [Image](https://nextjs.org/docs/app/api-reference/components/image) component,\nyou can use it with HeroUI `Image` component as well.\n\n<CodeDemo showPreview={false} showOpenInCodeSandbox={false} title=\"With Next.js Image\" files={imageContent.nextjs} />\n\n> **Note**: HeroUI's `Image` component is `client-side`, using hooks like `useState` for loading states\n> and animations. Use Next.js `Image` alone if these features aren't required.\n\n## Slots\n\n- **img**: Slot for the image element.\n- **wrapper**: Image wrapper, it handles alignment, placement, and general appearance.\n- **zoomedWrapper**: The wrapper slot for the zoomed image it avoids the image content to overflow the parent container.\n- **blurredImg**: The wrapper slot for the duplicated blurred image.\n\n<Spacer y={4} />\n\n## API\n\n### Image Props\n\n<APITable\n  data={[\n    {\n      attribute: \"src\",\n      type: \"string\",\n      description: \"The image source.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"srcSet\",\n      type: \"string\",\n      description: \"The image srcSet.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"sizes\",\n      type: \"string\",\n      description: \"The image sizes.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"alt\",\n      type: \"string\",\n      description: \"The image alt.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"width\",\n      type: \"number\",\n      description: \"The image width.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"height\",\n      type: \"number\",\n      description: \"The image height.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"radius\",\n      type: \"none | sm | md | lg | full\",\n      description: \"The image border radius.\",\n      default: \"xl\"\n    },\n    {\n      attribute: \"shadow\",\n      type: \"none | sm | md | lg\",\n      description: \"The image shadow.\",\n      default: \"none\"\n    },\n    {\n      attribute: \"loading\",\n      type: \"eager | lazy\",\n      description: \"A loading strategy to use for the image.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"fallbackSrc\",\n      type: \"string\",\n      description: \"The fallback image source.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"isBlurred\",\n      type: \"boolean\",\n      description: \"Whether the image should have a duplicated blurred image at the background.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"isZoomed\",\n      type: \"boolean\",\n      description: \"Whether the image should be zoomed when hovered.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"removeWrapper\",\n      type: \"boolean\",\n      description: \"Whether to remove the wrapper element. This will cause the image to be rendered as a direct child of the parent element. If you set this prop as `true` neither the skeleton nor the zoom effect will work.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"disableSkeleton\",\n      type: \"boolean\",\n      description: \"Whether the image should disable the skeleton animation while loading.\",\n      default: \"false\"\n    },\n    {\n      attribute: \"classNames\",\n      type: 'Partial<Record<\"img\" | \"wrapper\" | \"zoomedWrapper\" | \"blurredImg\", string>>',\n      description: \"Allows to set custom class names for the image slots.\",\n      default: \"-\"\n    }\n  ]}\n/>\n\n### Image Events\n\n<APITable\n  data={[\n    {\n      attribute: \"onLoad\",\n      type: \"ReactEventHandler<HTMLImageElement>\",\n      description: \"Handler that is called when the image load.\",\n      default: \"-\"\n    },\n    {\n      attribute: \"onError\",\n      type: \"() => void\",\n      description: \"Handler that is called when the image fails to load.\",\n      default: \"-\"\n    }\n  ]}\n/>\n",
    "code": "var Component=(()=>{var H=Object.create;var d=Object.defineProperty;var U=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var W=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var q=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),L=(i,e)=>{for(var o in e)d(i,o,{get:e[o],enumerable:!0})},h=(i,e,o,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of N(e))!M.call(i,r)&&r!==o&&d(i,r,{get:()=>e[r],enumerable:!(l=U(e,r))||l.enumerable});return i};var P=(i,e,o)=>(o=i!=null?H(W(i)):{},h(e||!i||!i.__esModule?d(o,\"default\",{value:i,enumerable:!0}):o,i)),_=i=>h(d({},\"__esModule\",{value:!0}),i);var g=q((ee,u)=>{u.exports=_jsx_runtime});var V={};L(V,{default:()=>C,frontmatter:()=>Q});var t=P(g());var f=`import {Image} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Image\n      alt=\"HeroUI hero Image\"\n      src=\"https://heroui.com/images/hero-card-complete.jpeg\"\n      width={300}\n    />\n  );\n}\n`;var Z={\"/App.jsx\":f},b={...Z};var I=`import {Image} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Image\n      isBlurred\n      alt=\"HeroUI Album Cover\"\n      className=\"m-5\"\n      src=\"https://heroui.com/images/album-cover.png\"\n      width={240}\n    />\n  );\n}\n`;var D={\"/App.jsx\":I},w={...D};var x=`import {Image} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Image\n      isZoomed\n      alt=\"HeroUI Fruit Image with Zoom\"\n      src=\"https://heroui.com/images/fruit-1.jpeg\"\n      width={240}\n    />\n  );\n}\n`;var F={\"/App.jsx\":x},y={...F};var k=`import {Image} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Image\n      alt=\"HeroUI hero Image with delay\"\n      height={200}\n      src=\"https://app.requestly.io/delay/5000/https://heroui.com/images/hero-card-complete.jpeg\"\n      width={300}\n    />\n  );\n}\n`;var X={\"/App.jsx\":k},A={...X};var j=`import {Image} from \"@heroui/react\";\n\nexport default function App() {\n  return (\n    <Image\n      alt=\"HeroUI Image with fallback\"\n      fallbackSrc=\"https://via.placeholder.com/300x200\"\n      height={200}\n      src=\"https://app.requestly.io/delay/1000/https://heroui.com/images/fruit-4.jpeg\"\n      width={300}\n    />\n  );\n}\n`;var O={\"/App.jsx\":j},v={...O};var T=`import {Image} from \"@heroui/react\";\nimport NextImage from \"next/image\";\n\nexport default function App() {\n  return (\n    <Image\n      alt=\"HeroUI hero Image\"\n      as={NextImage}\n      height={200}\n      src=\"https://heroui.com/images/hero-card-complete.jpeg\"\n      width={300}\n    />\n  );\n}\n`;var K={\"/App.jsx\":T},z={...K};var a={usage:b,blurred:w,zoomed:y,loading:A,fallback:v,nextjs:z};var Q={title:\"Image\",description:\"The Image component is used to display images with support for fallback.\"};function S(i){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",ul:\"ul\",...i.components},{APITable:o,CarbonAd:l,CodeDemo:r,ComponentLinks:s,ImportTabs:p,PackageManagers:m,Spacer:c}=e;return o||n(\"APITable\",!0),l||n(\"CarbonAd\",!0),r||n(\"CodeDemo\",!0),s||n(\"ComponentLinks\",!0),p||n(\"ImportTabs\",!0),m||n(\"PackageManagers\",!0),c||n(\"Spacer\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:\"image\",children:\"Image\"}),`\n`,(0,t.jsx)(e.p,{children:\"The Image component is used to display images with support for fallback.\"}),`\n`,(0,t.jsx)(s,{component:\"image\"}),`\n`,(0,t.jsx)(e.hr,{}),`\n`,(0,t.jsx)(l,{}),`\n`,(0,t.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,t.jsx)(m,{showGlobalInstallWarning:!0,commands:{cli:\"npx heroui-cli@latest add image\",npm:\"npm install @heroui/image\",yarn:\"yarn add @heroui/image\",pnpm:\"pnpm add @heroui/image\",bun:\"bun add @heroui/image\"}}),`\n`,(0,t.jsx)(e.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,t.jsx)(p,{commands:{main:'import {Image} from \"@heroui/react\";',individual:'import {Image} from \"@heroui/image\";'}}),`\n`,(0,t.jsx)(e.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,t.jsx)(r,{title:\"Usage\",files:a.usage}),`\n`,(0,t.jsx)(e.h3,{id:\"blurred\",children:\"Blurred\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can use the \",(0,t.jsx)(e.code,{children:\"isBlurred\"}),\" prop to duplicate the image and blur it to create a blurred effect.\"]}),`\n`,(0,t.jsx)(r,{title:\"Blurred\",files:a.blurred}),`\n`,(0,t.jsx)(e.h3,{id:\"zoomed\",children:\"Zoomed\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can use the \",(0,t.jsx)(e.code,{children:\"isZoomed\"}),\" prop make the image zoomed when hovered.\"]}),`\n`,(0,t.jsx)(r,{title:\"Zoomed\",files:a.zoomed}),`\n`,(0,t.jsx)(e.h3,{id:\"animated-loading\",children:\"Animated Loading\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Image component has a built-in \",(0,t.jsx)(e.code,{children:\"skeleton\"}),` animation to indicate the image is loading and an\n`,(0,t.jsx)(e.code,{children:\"opacity\"}),\" animation when the image loads.\"]}),`\n`,(0,t.jsx)(r,{displayMode:\"visible\",title:\"Animated Loading\",files:a.loading}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"Note\"}),\": The \",(0,t.jsx)(e.code,{children:\"URL\"}),\" uses \",(0,t.jsx)(e.code,{children:\"https://app.requestly.io/delay\"}),\" to simulate a slow network.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h3,{id:\"image-with-fallback\",children:\"Image with fallback\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can use the \",(0,t.jsx)(e.code,{children:\"fallbackSrc\"}),\" prop to display a fallback image when:\"]}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"The \",(0,t.jsx)(e.code,{children:\"fallbackSrc\"}),\" prop is provided.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"The image provided in \",(0,t.jsx)(e.code,{children:\"src\"}),\" is still loading.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"The image provided in \",(0,t.jsx)(e.code,{children:\"src\"}),\" fails to load.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"The image provided in \",(0,t.jsx)(e.code,{children:\"src\"}),\" is not found.\"]}),`\n`]}),`\n`,(0,t.jsx)(r,{displayMode:\"visible\",title:\"Image with fallback\",files:a.fallback}),`\n`,(0,t.jsx)(e.h3,{id:\"with-nextjs-image\",children:\"With Next.js Image\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Next.js provides an optimized \",(0,t.jsx)(e.a,{href:\"https://nextjs.org/docs/app/api-reference/components/image\",children:\"Image\"}),` component,\nyou can use it with HeroUI `,(0,t.jsx)(e.code,{children:\"Image\"}),\" component as well.\"]}),`\n`,(0,t.jsx)(r,{showPreview:!1,showOpenInCodeSandbox:!1,title:\"With Next.js Image\",files:a.nextjs}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"Note\"}),\": HeroUI's \",(0,t.jsx)(e.code,{children:\"Image\"}),\" component is \",(0,t.jsx)(e.code,{children:\"client-side\"}),\", using hooks like \",(0,t.jsx)(e.code,{children:\"useState\"}),` for loading states\nand animations. Use Next.js `,(0,t.jsx)(e.code,{children:\"Image\"}),\" alone if these features aren't required.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"img\"}),\": Slot for the image element.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"wrapper\"}),\": Image wrapper, it handles alignment, placement, and general appearance.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"zoomedWrapper\"}),\": The wrapper slot for the zoomed image it avoids the image content to overflow the parent container.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"blurredImg\"}),\": The wrapper slot for the duplicated blurred image.\"]}),`\n`]}),`\n`,(0,t.jsx)(c,{y:4}),`\n`,(0,t.jsx)(e.h2,{id:\"api\",children:\"API\"}),`\n`,(0,t.jsx)(e.h3,{id:\"image-props\",children:\"Image Props\"}),`\n`,(0,t.jsx)(o,{data:[{attribute:\"src\",type:\"string\",description:\"The image source.\",default:\"-\"},{attribute:\"srcSet\",type:\"string\",description:\"The image srcSet.\",default:\"-\"},{attribute:\"sizes\",type:\"string\",description:\"The image sizes.\",default:\"-\"},{attribute:\"alt\",type:\"string\",description:\"The image alt.\",default:\"-\"},{attribute:\"width\",type:\"number\",description:\"The image width.\",default:\"-\"},{attribute:\"height\",type:\"number\",description:\"The image height.\",default:\"-\"},{attribute:\"radius\",type:\"none | sm | md | lg | full\",description:\"The image border radius.\",default:\"xl\"},{attribute:\"shadow\",type:\"none | sm | md | lg\",description:\"The image shadow.\",default:\"none\"},{attribute:\"loading\",type:\"eager | lazy\",description:\"A loading strategy to use for the image.\",default:\"-\"},{attribute:\"fallbackSrc\",type:\"string\",description:\"The fallback image source.\",default:\"-\"},{attribute:\"isBlurred\",type:\"boolean\",description:\"Whether the image should have a duplicated blurred image at the background.\",default:\"false\"},{attribute:\"isZoomed\",type:\"boolean\",description:\"Whether the image should be zoomed when hovered.\",default:\"false\"},{attribute:\"removeWrapper\",type:\"boolean\",description:\"Whether to remove the wrapper element. This will cause the image to be rendered as a direct child of the parent element. If you set this prop as `true` neither the skeleton nor the zoom effect will work.\",default:\"false\"},{attribute:\"disableSkeleton\",type:\"boolean\",description:\"Whether the image should disable the skeleton animation while loading.\",default:\"false\"},{attribute:\"classNames\",type:'Partial<Record<\"img\" | \"wrapper\" | \"zoomedWrapper\" | \"blurredImg\", string>>',description:\"Allows to set custom class names for the image slots.\",default:\"-\"}]}),`\n`,(0,t.jsx)(e.h3,{id:\"image-events\",children:\"Image Events\"}),`\n`,(0,t.jsx)(o,{data:[{attribute:\"onLoad\",type:\"ReactEventHandler<HTMLImageElement>\",description:\"Handler that is called when the image load.\",default:\"-\"},{attribute:\"onError\",type:\"() => void\",description:\"Handler that is called when the image fails to load.\",default:\"-\"}]})]})}function C(i={}){let{wrapper:e}=i.components||{};return e?(0,t.jsx)(e,{...i,children:(0,t.jsx)(S,{...i})}):S(i)}function n(i,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+i+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return _(V);})();\n;return Component;"
  },
  "_id": "docs/components/image.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/image.mdx",
    "sourceFileName": "image.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/image"
  },
  "type": "Doc",
  "slug": "/docs/components/image",
  "slugAsParams": "components/image",
  "url": "/docs/components/image"
}