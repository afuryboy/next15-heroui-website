[
  {
    "title": "fastify CORS跨域支持",
    "description": "使用fastify开发，前后端分离开发，如何实现CORS",
    "date": "2025-05-11T00:00:00.000Z",
    "tags": [
      "fastify",
      "cors"
    ],
    "author": {
      "name": "JiangBao",
      "avatar": "https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/avatar.png",
      "username": "这家伙很懒，什么也没留下",
      "type": "AuthorProperties",
      "_raw": {}
    },
    "image": "https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/fastify-logo.jpg",
    "body": {
      "raw": "\n\n\n<img\n  src=\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/fastify-logo.jpg\"\n  width={700}\n  height={350}\n  alt=\"HeroUI\"\n  className=\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"\n/>\n\n最近我正在使用`fastify`作为后端去开发，但是遇到了跨域cors问题，记录一下问题解决的过程。\n\n### 项目结构介绍\n\n前端：使用vite初始化一个react+ts模版项目\n\n后端：不借助任何cli工具初始化项目，就直接一个app.ts 然后tsx命令运行\n\n\n### 前端代码调用\n\n```jsx\n// about页面\nimport { useTRPC } from \"@/lib/trpc\"\nimport { useQuery } from \"@tanstack/react-query\"\nexport default function About() {\n    const trpc = useTRPC()\n    const {data, isLoading, error} = useQuery(trpc.beer.getBeers.queryOptions({size: 6}))\n    if(isLoading) return 'loading'\n    if(error) return 'error:' + error.message\n    return (\n        <div>{data}</div>\n    )\n}\n```\n我的前端服务是`localhost:3002`\n这里我是使用`trpc`+`react-query`的方式进行rpc调用，这里换成http请求也是一样。\n\n\n### 服务端代码\n\n```ts\nimport Fastify, { FastifyRequest, FastifyReply } from \"fastify\";\nimport { fastifyTRPCPlugin, FastifyTRPCPluginOptions } from \"@trpc/server/adapters/fastify\"\nimport dotenv from \"dotenv\";\ndotenv.config({ path: \".env\" });\nimport { AppRouter, appRouter } from \"./router\"\nimport createContext from \"./router/context\";\nconst fastify = Fastify();\nconst start = async () => {\n  try {\n    fastify.get(\"/\", async (_request: FastifyRequest, reply: FastifyReply) => {\n      return reply.send({ message: \"Hello world!\" });\n    });\n\n    await fastify.register(fastifyTRPCPlugin, {\n      prefix: \"/\",\n      trpcOptions: {\n        router: appRouter,\n        createContext,\n      } as FastifyTRPCPluginOptions<AppRouter>[\"trpcOptions\"],\n    })\n    await fastify.listen({ port: 3000, host: \"0.0.0.0\", });\n  } catch (err) {\n    fastify.log.error(err);\n    process.exit(1);\n  }\n};\n\nstart();\n\n```\n我的后端服务是`localhost:3000`\n\n\n\n### 调用报错\n\n当我进入前端服务/about页面\n\n<img\n  src=\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/20250512-fastify-cors-1.png\"\n  width={700}\n  \n  alt=\"cors\"\n  className=\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"\n/>\n\n页面报错: Access to fetch at 'http://localhost:3000/beer.getBeers?batch=1&input=%7B%220%22%3A%7B%22size%22%3A6%7D%7D' from origin 'http://localhost:3002' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.\n\n出现cors问题。\n\n\n### 解决方法\n\nfastify内置cors插件\n\n```ts\nimport Fastify, { FastifyRequest, FastifyReply } from \"fastify\";\nimport { fastifyTRPCPlugin, FastifyTRPCPluginOptions } from \"@trpc/server/adapters/fastify\"\nimport dotenv from \"dotenv\";\ndotenv.config({ path: \".env\" });\nimport { AppRouter, appRouter } from \"./router\"\nimport createContext from \"./router/context\";\nconst fastify = Fastify();\nconst start = async () => {\n  try {\n    // CORS跨域支持\n    await fastify.register(fastifyCors, {\n      credentials: true,\n      origin: process.env.CLIENT_URL,\n    })\n\n    fastify.get(\"/\", async (_request: FastifyRequest, reply: FastifyReply) => {\n      return reply.send({ message: \"Hello world!\" });\n    });\n\n    await fastify.register(fastifyTRPCPlugin, {\n      prefix: \"/\",\n      trpcOptions: {\n        router: appRouter,\n        createContext,\n      } as FastifyTRPCPluginOptions<AppRouter>[\"trpcOptions\"],\n    })\n    await fastify.listen({ port: 3000, host: \"0.0.0.0\", });\n  } catch (err) {\n    fastify.log.error(err);\n    process.exit(1);\n  }\n};\n\nstart();\n\n```\n\n配置参数 `origin: 配你前端服务地址` 比如: http://localhost:3002 \n\n重新看一下页面请求情况\n\n<img\n  src=\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/20250512-fastify-cors-2.png\"\n  width={700}\n  \n  alt=\"cors\"\n  className=\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"\n/>\n\n\n其实fastify解决跨域问题挺简单，使用内置cors插件即可",
      "code": "var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var m=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),b=(r,t)=>{for(var n in t)o(r,n,{get:t[n],enumerable:!0})},a=(r,t,n,i)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let s of y(t))!g.call(r,s)&&s!==n&&o(r,s,{get:()=>t[s],enumerable:!(i=h(t,s))||i.enumerable});return r};var R=(r,t,n)=>(n=r!=null?d(u(r)):{},a(t||!r||!r.__esModule?o(n,\"default\",{value:r,enumerable:!0}):n,r)),x=r=>a(o({},\"__esModule\",{value:!0}),r);var l=m((F,c)=>{c.exports=_jsx_runtime});var v={};b(v,{default:()=>f,frontmatter:()=>C});var e=R(l()),C={title:\"fastify CORS\\u8DE8\\u57DF\\u652F\\u6301\",description:\"\\u4F7F\\u7528fastify\\u5F00\\u53D1\\uFF0C\\u524D\\u540E\\u7AEF\\u5206\\u79BB\\u5F00\\u53D1\\uFF0C\\u5982\\u4F55\\u5B9E\\u73B0CORS\",date:\"2025-05-11\",image:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/fastify-logo.jpg\",tags:[\"fastify\",\"cors\"],author:{name:\"JiangBao\",username:\"\\u8FD9\\u5BB6\\u4F19\\u5F88\\u61D2\\uFF0C\\u4EC0\\u4E48\\u4E5F\\u6CA1\\u7559\\u4E0B\",avatar:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/avatar.png\"}};function p(r){let t={a:\"a\",code:\"code\",h3:\"h3\",p:\"p\",pre:\"pre\",...r.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(\"img\",{src:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/fastify-logo.jpg\",width:700,height:350,alt:\"HeroUI\",className:\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"\\u6700\\u8FD1\\u6211\\u6B63\\u5728\\u4F7F\\u7528\",(0,e.jsx)(t.code,{children:\"fastify\"}),\"\\u4F5C\\u4E3A\\u540E\\u7AEF\\u53BB\\u5F00\\u53D1\\uFF0C\\u4F46\\u662F\\u9047\\u5230\\u4E86\\u8DE8\\u57DFcors\\u95EE\\u9898\\uFF0C\\u8BB0\\u5F55\\u4E00\\u4E0B\\u95EE\\u9898\\u89E3\\u51B3\\u7684\\u8FC7\\u7A0B\\u3002\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"\\u9879\\u76EE\\u7ED3\\u6784\\u4ECB\\u7ECD\",children:\"\\u9879\\u76EE\\u7ED3\\u6784\\u4ECB\\u7ECD\"}),`\n`,(0,e.jsx)(t.p,{children:\"\\u524D\\u7AEF\\uFF1A\\u4F7F\\u7528vite\\u521D\\u59CB\\u5316\\u4E00\\u4E2Areact+ts\\u6A21\\u7248\\u9879\\u76EE\"}),`\n`,(0,e.jsx)(t.p,{children:\"\\u540E\\u7AEF\\uFF1A\\u4E0D\\u501F\\u52A9\\u4EFB\\u4F55cli\\u5DE5\\u5177\\u521D\\u59CB\\u5316\\u9879\\u76EE\\uFF0C\\u5C31\\u76F4\\u63A5\\u4E00\\u4E2Aapp.ts \\u7136\\u540Etsx\\u547D\\u4EE4\\u8FD0\\u884C\"}),`\n`,(0,e.jsx)(t.h3,{id:\"\\u524D\\u7AEF\\u4EE3\\u7801\\u8C03\\u7528\",children:\"\\u524D\\u7AEF\\u4EE3\\u7801\\u8C03\\u7528\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-jsx\",children:`// about\\u9875\\u9762\nimport { useTRPC } from \"@/lib/trpc\"\nimport { useQuery } from \"@tanstack/react-query\"\nexport default function About() {\n    const trpc = useTRPC()\n    const {data, isLoading, error} = useQuery(trpc.beer.getBeers.queryOptions({size: 6}))\n    if(isLoading) return 'loading'\n    if(error) return 'error:' + error.message\n    return (\n        <div>{data}</div>\n    )\n}\n`})}),`\n`,(0,e.jsxs)(t.p,{children:[\"\\u6211\\u7684\\u524D\\u7AEF\\u670D\\u52A1\\u662F\",(0,e.jsx)(t.code,{children:\"localhost:3002\"}),`\n\\u8FD9\\u91CC\\u6211\\u662F\\u4F7F\\u7528`,(0,e.jsx)(t.code,{children:\"trpc\"}),\"+\",(0,e.jsx)(t.code,{children:\"react-query\"}),\"\\u7684\\u65B9\\u5F0F\\u8FDB\\u884Crpc\\u8C03\\u7528\\uFF0C\\u8FD9\\u91CC\\u6362\\u6210http\\u8BF7\\u6C42\\u4E5F\\u662F\\u4E00\\u6837\\u3002\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"\\u670D\\u52A1\\u7AEF\\u4EE3\\u7801\",children:\"\\u670D\\u52A1\\u7AEF\\u4EE3\\u7801\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-ts\",children:`import Fastify, { FastifyRequest, FastifyReply } from \"fastify\";\nimport { fastifyTRPCPlugin, FastifyTRPCPluginOptions } from \"@trpc/server/adapters/fastify\"\nimport dotenv from \"dotenv\";\ndotenv.config({ path: \".env\" });\nimport { AppRouter, appRouter } from \"./router\"\nimport createContext from \"./router/context\";\nconst fastify = Fastify();\nconst start = async () => {\n  try {\n    fastify.get(\"/\", async (_request: FastifyRequest, reply: FastifyReply) => {\n      return reply.send({ message: \"Hello world!\" });\n    });\n\n    await fastify.register(fastifyTRPCPlugin, {\n      prefix: \"/\",\n      trpcOptions: {\n        router: appRouter,\n        createContext,\n      } as FastifyTRPCPluginOptions<AppRouter>[\"trpcOptions\"],\n    })\n    await fastify.listen({ port: 3000, host: \"0.0.0.0\", });\n  } catch (err) {\n    fastify.log.error(err);\n    process.exit(1);\n  }\n};\n\nstart();\n\n`})}),`\n`,(0,e.jsxs)(t.p,{children:[\"\\u6211\\u7684\\u540E\\u7AEF\\u670D\\u52A1\\u662F\",(0,e.jsx)(t.code,{children:\"localhost:3000\"})]}),`\n`,(0,e.jsx)(t.h3,{id:\"\\u8C03\\u7528\\u62A5\\u9519\",children:\"\\u8C03\\u7528\\u62A5\\u9519\"}),`\n`,(0,e.jsx)(t.p,{children:\"\\u5F53\\u6211\\u8FDB\\u5165\\u524D\\u7AEF\\u670D\\u52A1/about\\u9875\\u9762\"}),`\n`,(0,e.jsx)(\"img\",{src:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/20250512-fastify-cors-1.png\",width:700,alt:\"cors\",className:\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"\\u9875\\u9762\\u62A5\\u9519: Access to fetch at '\",(0,e.jsx)(t.a,{href:\"http://localhost:3000/beer.getBeers?batch=1&input=%7B%220%22%3A%7B%22size%22%3A6%7D%7D\",children:\"http://localhost:3000/beer.getBeers?batch=1&input=%7B%220%22%3A%7B%22size%22%3A6%7D%7D\"}),\"' from origin '\",(0,e.jsx)(t.a,{href:\"http://localhost:3002\",children:\"http://localhost:3002\"}),\"' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.\"]}),`\n`,(0,e.jsx)(t.p,{children:\"\\u51FA\\u73B0cors\\u95EE\\u9898\\u3002\"}),`\n`,(0,e.jsx)(t.h3,{id:\"\\u89E3\\u51B3\\u65B9\\u6CD5\",children:\"\\u89E3\\u51B3\\u65B9\\u6CD5\"}),`\n`,(0,e.jsx)(t.p,{children:\"fastify\\u5185\\u7F6Ecors\\u63D2\\u4EF6\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-ts\",children:`import Fastify, { FastifyRequest, FastifyReply } from \"fastify\";\nimport { fastifyTRPCPlugin, FastifyTRPCPluginOptions } from \"@trpc/server/adapters/fastify\"\nimport dotenv from \"dotenv\";\ndotenv.config({ path: \".env\" });\nimport { AppRouter, appRouter } from \"./router\"\nimport createContext from \"./router/context\";\nconst fastify = Fastify();\nconst start = async () => {\n  try {\n    // CORS\\u8DE8\\u57DF\\u652F\\u6301\n    await fastify.register(fastifyCors, {\n      credentials: true,\n      origin: process.env.CLIENT_URL,\n    })\n\n    fastify.get(\"/\", async (_request: FastifyRequest, reply: FastifyReply) => {\n      return reply.send({ message: \"Hello world!\" });\n    });\n\n    await fastify.register(fastifyTRPCPlugin, {\n      prefix: \"/\",\n      trpcOptions: {\n        router: appRouter,\n        createContext,\n      } as FastifyTRPCPluginOptions<AppRouter>[\"trpcOptions\"],\n    })\n    await fastify.listen({ port: 3000, host: \"0.0.0.0\", });\n  } catch (err) {\n    fastify.log.error(err);\n    process.exit(1);\n  }\n};\n\nstart();\n\n`})}),`\n`,(0,e.jsxs)(t.p,{children:[\"\\u914D\\u7F6E\\u53C2\\u6570 \",(0,e.jsx)(t.code,{children:\"origin: \\u914D\\u4F60\\u524D\\u7AEF\\u670D\\u52A1\\u5730\\u5740\"}),\" \\u6BD4\\u5982: \",(0,e.jsx)(t.a,{href:\"http://localhost:3002\",children:\"http://localhost:3002\"})]}),`\n`,(0,e.jsx)(t.p,{children:\"\\u91CD\\u65B0\\u770B\\u4E00\\u4E0B\\u9875\\u9762\\u8BF7\\u6C42\\u60C5\\u51B5\"}),`\n`,(0,e.jsx)(\"img\",{src:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/20250512-fastify-cors-2.png\",width:700,alt:\"cors\",className:\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"}),`\n`,(0,e.jsx)(t.p,{children:\"\\u5176\\u5B9Efastify\\u89E3\\u51B3\\u8DE8\\u57DF\\u95EE\\u9898\\u633A\\u7B80\\u5355\\uFF0C\\u4F7F\\u7528\\u5185\\u7F6Ecors\\u63D2\\u4EF6\\u5373\\u53EF\"})]})}function f(r={}){let{wrapper:t}=r.components||{};return t?(0,e.jsx)(t,{...r,children:(0,e.jsx)(p,{...r})}):p(r)}return x(v);})();\n;return Component;"
    },
    "_id": "blog/fastify-cors.mdx",
    "_raw": {
      "sourceFilePath": "blog/fastify-cors.mdx",
      "sourceFileName": "fastify-cors.mdx",
      "sourceFileDir": "blog",
      "contentType": "mdx",
      "flattenedPath": "blog/fastify-cors"
    },
    "type": "BlogPost",
    "slug": "/blog/fastify-cors",
    "slugAsParams": "fastify-cors",
    "url": "/blog/fastify-cors",
    "formattedDate": "May 11, 2025",
    "imageAsParams": "https://heroui.comhttps://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/fastify-logo.jpg"
  },
  {
    "title": "React Libraries for 2025",
    "description": "在本指南中，我们将探索 2025 年必备的 React 库。这些库是使用 React 开发大型应用程序的基石。无论您是初学者还是经验丰富的开发者，本指南都能帮助您轻松驾驭庞大的 React 生态系统。",
    "date": "2025-05-18T00:00:00.000Z",
    "tags": [
      "react 2025",
      "react libraries"
    ],
    "author": {
      "name": "JiangBao",
      "avatar": "https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/avatar.png",
      "username": "这家伙很懒，什么也没留下",
      "type": "AuthorProperties",
      "_raw": {}
    },
    "image": "https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/react-ecosystem-in-2025-20241230100040995.jpg",
    "body": {
      "raw": "\n<img\n  src=\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/react-ecosystem-in-2025-20241230100040995.jpg\"\n  width={700}\n  height={350}\n  alt=\"HeroUI\"\n  className=\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"\n/>\n\n<div className='px-2.5 py-2.5 border-1 dark:border-white border-black'>\n原文地址：[https://www.robinwieruch.de/react-libraries/](https://www.robinwieruch.de/react-libraries/) \n</div>\n\n\nReact has been around for quite some time, and over the years, an extensive—yet sometimes overwhelming—ecosystem of libraries has grown around it. Developers transitioning from other languages or frameworks often struggle to navigate all the libraries needed to build web applications with React.\nReact 已经存在了相当长一段时间，多年来，它周围已经发展出一个庞大（有时甚至令人眼花缭乱）的库生态系统。从其他语言或框架过渡到 React 的开发者经常难以驾驭构建 Web 应用程序所需的所有库 。\n\nAt its core, React allows developers to build component-driven user interfaces using function components. While it includes built-in solutions like React Hooks for managing local state, handling side effects, and optimizing performance, everything ultimately boils down to working with functions—both components and hooks—to construct a UI.\nReact 的核心在于允许开发者使用函数组件构建组件驱动的用户界面。虽然它内置了 React Hooks 等解决方案，用于管理本地状态、处理副作用和优化性能，但最终一切都归结为使用函数（包括组件和 Hooks）来构建 UI。\n\nIn this walkthrough, we'll explore the essential React libraries for 2025. These libraries are the building blocks for developing large-scale applications with React. Whether you're a beginner or an experienced developer, this guide will help you navigate the vast React ecosystem effortlessly.\n在本指南中，我们将探索 2025 年必备的 React 库。这些库是使用 React 开发大型应用程序的基石。无论您是初学者还是经验丰富的开发者，本指南都能帮助您轻松驾驭庞大的 React 生态系统。\n\n<div style={{border: '1px solid #ccc', padding: '10px 20px'}}>\n<p>[Continue Reading: React Tech Stack for 2025](https://www.robinwieruch.de/react-tech-stack/)</p>\n<p>[继续阅读： 2025 年的 React 技术栈](https://www.robinwieruch.de/react-tech-stack/)</p>\n</div>\n\n\nLet's dive into the libraries that you could use for your next React application.\n让我们深入了解可用于下一个 React 应用程序的库。\n\n<hr />\n\n<div align=\"center\">\n  <h2 align=\"center\">Table of Contents  目录</h2>\n</div>\n\n- [Starting a new React Project（开始一个新的 React 项目）](#Starting-a-new-React-Project)\n- [Package Manager for React（React 包管理器）](#Package-Manager-for-React)\n- [React State Management（React 状态管理）](#React-State-Management)\n- [React Data Fetching（React 数据获取）](#React-Data-Fetching)\n- [Routing with React Router（使用 React Router 进行路由）](#Routing-with-React-Router)\n- [CSS Styling in React（React 中的 CSS 样式）](#CSS-Styling-in-React)\n- [React UI Libraries（React UI 库）](#React-UI-Libraries)\n- [React Animation Libraries（React 动画库）](#React-Animation-Libraries)\n- [Visualization and Chart Libraries in React（React 中的可视化和图表库）](#Visualization-and-Chart-Libraries-in-React)\n- [Form Libraries in React（React 中的表单库）](#Form-Libraries-in-React)\n- [Code Structure in React（React 中的代码结构）](#Code-Structure-in-React)\n- [React Authentication（React 身份验证）](#React-Authentication)\n- [React Backend（React后端）](#React-Backend)\n- [React Database（React数据库）](#React-Database)\n- [React Hosting (React 托管)](#React-Hosting)\n- [Testing in React (React 中测试)](#Testing-in-React)\n- [React and Immutable Data Structures(React 和不可变数据结构)](#React-and-Immutable-Data-Structures)\n- [React Internationalization (React 国际化)](#React-Internationalization)\n- [Rich Text Editor in React(React 中的富文本编辑器)](#Rich-Text-Editor-in-React)\n- [Payments in React (React 支付)](#Payments-in-React)\n- [Time in React（React 中的时间）](#Time-in-React)\n- [React Desktop Applications （React 桌面应用程序）](#React-Desktop-Applications)\n- [File Upload in React（React 中的文件上传）](#File-Upload-in-React)\n- [Mails in React（React 中的邮件）](#Mails-in-React)\n- [Drag and Drop  （拖放）](#Drag-and-Drop)\n- [Mobile Development with React（使用 React 进行移动开发）](#Mobile-Development-with-React)\n- [React VR/AR  （React VR/AR）](#React-VR/AR)\n- [Design Prototyping for React（React 的设计原型）](#Design-Prototyping-for-React)\n- [React Component Documentation（React 组件文档）](#React-Component-Documentation)\n\n<hr />\n\n<div align=\"center\" id=\"Starting-a-new-React-Project\">\n  <h3 align=\"center\">Starting a new React Project</h3>\n  <h3 align=\"center\">开始一个新的 React 项目</h3>\n</div>\n\nThe first question a React beginner often asks is: how do you set up a React project? With so many tools available, choosing the right one can be overwhelming. The most popular option in the React community is Vite, which makes it easy to create projects with different libraries (such as React) and optional TypeScript support.\nReact 初学者经常问的第一个问题是：如何搭建 React 项目？市面上有如此多的工具，选择合适的工具可能会让人不知所措。React 社区中最流行的工具是 Vite ，它可以轻松创建包含不同库（例如 React）的项目，并可选地支持 TypeScript。\n\nVite also offers exceptional performance.\nVite 还提供卓越的性能 。\n\n\nIf you're already familiar with React, you might consider using one of its popular (meta) frameworks instead of Vite. Next.js is a widely used choice that builds on top of React, so understanding React's fundamentals is essential. It comes with many features out of the box, such as different rendering techniques, file-based routing and API routes.\n如果您已经熟悉 React，可以考虑使用其流行的元框架之一来代替 Vite。Next.js 是一个广泛使用的框架，它基于 React 构建，因此了解 React 的基础知识至关重要 。它具有许多开箱即用的功能，例如不同的渲染技术、基于文件的路由和 API 路由。\n\n\nWhile Next.js has been initially used for server-side rendering (web applications), it can be used for static site generation (websites) next to other rendering patterns (i.e. ISR) too. The most recent addition to Next.js are React Server Components (RSC) and React Server Functions (RSF) which contribute since 2023 to a big paradigm shift by moving React components from the client to the server.\n虽然 Next.js 最初用于服务器端渲染（Web 应用程序），但它也可以与其他渲染模式（例如 ISR）一起用于静态站点生成（网站）。Next.js 的最新成员是 React 服务器组件 (RSC) 和 React 服务器函数 (RSF)，它们自 2023 年以来通过将 React 组件从客户端迁移到服务器，促成了重大的范式转变。\n\nTwo alternatives to Next.js are TanStack Start (beta) and React Router (in transition from Remix) which do not support (yet) React Server Components.\nNext.js 的两个替代方案是 TanStack Start（测试版）和 React Router（从 Remix 过渡而来），它们尚不支持 React 服务器组件。\n\nIf performance for static content is your priority, take a look at Astro. As a framework-agnostic tool, it works seamlessly with React while shipping only HTML and CSS to the browser, even when using React for components. JavaScript is loaded only when components require interactivity, ensuring optimal performance.\n如果您优先考虑静态内容的性能，不妨考虑一下 Astro。Astro 是一款与框架无关的工具，它可以与 React 无缝协作，并且只需将 HTML 和 CSS 传输到浏览器，即使在使用 React 构建组件时也是如此。JavaScript 仅在组件需要交互时加载，从而确保最佳性能。\n\nIf you just want to understand how tools like Vite work, try to set up a React project yourself. You will start with a bare bones HTML with JavaScript project and add React with its supportive tools (e.g. Webpack, Babel) yourself. It's not something you will have to deal with in your day to day work, especially since Vite became the successor of Webpack, but it's a great learning experience to get to know the underlying tooling.\n如果你只是想了解 Vite 等工具的工作原理，可以尝试自己搭建一个 React 项目 。你将从一个包含 JavaScript 的简单 HTML 项目开始，然后自行添加 React 及其支持工具（例如 Webpack、Babel）。这在日常工作中并不常见，尤其是在 Vite 取代 Webpack 之后，但了解底层工具仍然是一次很棒的学习经历。\n\nIf you are a React veteran and want to try something new, check out Nitro, Redwood, or Waku. The latter, created by the developer behind Zustand, also includes support for React Server Components (RSC).\n如果你是 React 老手，并且想尝试一些新东西，可以看看 Nitro 、 Redwood 或 Waku 。后者由 Zustand 的开发者创建，也支持 React 服务器组件 (RSC)。\n\nRecommendations:  建议：\n\n- Vite for client-side rendered React applications\nVite 用于客户端渲染的 React 应用程序\n\n- Next server-side rendered React applications\n下一个服务器端渲染的 React 应用程序\n\n- Astro for static-side generated React applications\nAstro 用于静态端生成的 React 应用程序\n\n\n\n\n\n<hr />\n<div align=\"center\" id=\"Package-Manager-for-React\">\n  <h3 align=\"center\">Package Manager for React</h3>\n  <h3 align=\"center\">REACT 包管理器</h3>\n</div>\n\nThe most widely used package manager to install libraries (read: dependencies, node packages) in the JavaScript ecosystem (and therefore React) is npm, because it comes with every Node.js installation. However, yarn yarn and pnpm are great alternatives. Especially the latter comes with a greater performance boost.\n在 JavaScript 生态系统（以及 React）中，安装库（即依赖项、Node 包）最常用的包管理器是 npm ，因为它随每个 Node.js 安装而来。然而， yarn 和 pnpm 也是不错的选择。尤其是后者，性能提升更大。\n\nIf you happen to create multiple React applications which depend on each other or which share a common set of custom UI components, you may want to check out the concept of a monorepo. All previously mentioned package managers allow you to create monorepos by using their in-house workspaces feature, however, I had the best developer experience using yarn or pnpm. In combination with monorepo pipeline tools such as Turborepo, the monorepo experience becomes perfect.\n如果您碰巧创建了多个相互依赖或共享一组自定义 UI 组件的 React 应用程序，您可能需要了解一下 monorepo 的概念。所有前面提到的包管理器都允许您使用其内部工作区功能创建 monorepo，但是，我使用 yarn 或 pnpm 获得了最佳的开发体验。结合 Turborepo 等 monorepo 管道工具，monorepo 体验将更加完美。\n\nRecommendations:  建议：\n\n- choose one package manager and stick to it\n选择一个包管理器并坚持使用它\n  - default and most widely used -> npm\n默认且最广泛使用的 -> npm\n  - increased performance but not as popular -> pnpm\n性能提升但不那么受欢迎 -> pnpm\n- if a monorepo is needed, check out Turborepo (see tutorial)\n如果需要 monorepo，请查看 Turborepo（参见教程）\n<hr />\n\n<div align=\"center\" id=\"React-State-Management\">\n  <h3 align=\"center\">React State Management</h3>\n  <h3 align=\"center\">React状态管理</h3>\n</div>\nReact provides two built-in hooks for managing local state: useState and useReducer. For global state management, the built-in useContext hook allows you to pass data from top-level components to deeper components without relying on props, effectively preventing prop drilling.\nReact 提供了两个内置钩子来管理本地状态： useState 和 useReducer 。对于全局状态管理，内置的 useContext 钩子允许你将数据从顶级组件传递到更深层的组件，而无需依赖 props ，从而有效地防止 prop 钻取。\n\nAll three React hooks enable developers to implement powerful state management in React which is either co-located in components by using React's useState/useReducer Hooks or globally managed by combining them with React's useContext Hook.\n所有这三个 React hooks 都使开发人员能够在 React 中实现强大的状态管理，这些状态管理要么通过使用 React 的 useState/useReducer Hooks 位于组件中，要么通过将它们与 React 的 useContext Hook 结合进行全局管理。\n\nIf you find yourself using React's Context too often for shared/global state, you should definitely check out Zustand. It allows you to manage global application state which can be read and modified by any React component that is connected to its store(s).\n如果你发现自己过于频繁地使用 React 的 Context 来处理共享/全局状态，那么你一定要看看 Zustand 。它允许你管理全局应用程序状态，这些状态可以被连接到其 store 的任何 React 组件读取和修改。\n\nWhile Zustand is becoming the de facto standard in the React community, many projects still use Redux. Personally, I haven't used Redux in my recent freelance work over the past few years, as I prefer Zustand for its simplicity. However, you'll encounter plenty of older React applications built with Redux.\n虽然 Zustand 正在成为 React 社区的事实标准，但许多项目仍在使用 Redux。就我个人而言，过去几年在从事自由职业时，我很少使用 Redux，因为我更喜欢 Zustand 的简洁性。不过，你还是会遇到很多使用 Redux 构建的旧版 React 应用程序。\n\nIf you happen to use Redux, you should definitely check out Redux Toolkit as well. If you are into state machines, check out XState or Zag. As alternatives, if you need a global store but do not like Zustand or Redux, check other popular local state management solutions like Mobx, Jotai, or Nano Stores.\n如果你恰好使用 Redux，那么你也应该了解一下 Redux Toolkit 。如果你喜欢状态机，可以看看 XState 或 Zag 。此外，如果你需要一个全局 store，但不喜欢 Zustand 或 Redux，可以看看其他流行的本地状态管理解决方案，例如 Mobx 、 Jotai 或 Nano Stores 。\n\nRecommendations:  建议：\n\n- useState/useReducer for co-located or shared state (see tutorial)\nuseState/useReducer 用于共置或共享状态（参见教程）\n- opt-in useContext for enabling little global state (see tutorial)\n选择使用 useContext 来启用小全局状态（参见教程）\n- Zustand (or an alternative) for lots of global state\nZustand（或替代方案）用于许多全局状态\n\n<hr />\n\n<div align=\"center\" id=\"React-Data-Fetching\">\n  <h3 align=\"center\">React Data Fetching</h3>\n  <h3 align=\"center\">React数据获取</h3>\n</div>\n\nReact's built-in hooks are great for UI state, but when it comes to state management (read: caching) for remote data (and therefore data fetching), I would recommend using a dedicated data fetching library such as TanStack Query (formerly React Query).\nReact 的内置钩子非常适合 UI 状态，但是当涉及到远程数据（以及数据提取）的状态管理（读取：缓存）时，我建议使用专用的数据提取库，例如 TanStack Query （以前称为 React Query）。\n\nWhile TanStack Query itself is not seen as a state management library, because it is primarily used to fetch your remote data from APIs, it takes care of all the state management (e.g. caching, optimistic updates) of this remote data for you.\n虽然 TanStack Query 本身并不被视为状态管理库，因为它主要用于从 API 获取远程数据，但它会为您处理这些远程数据的所有状态管理（例如缓存、乐观更新）。\n\nTanStack Query was designed for consuming REST APIs. However, these days it supports GraphQL too. However, if you are looking for a more dedicated GraphQL library for your React frontend, check out either Apollo Client (popular), urql (lightweight), or Relay (by Facebook).\nTanStack Query 最初设计用于处理 REST API 。不过，现在它也支持 GraphQL 。如果您正在为 React 前端寻找更专用的 GraphQL 库，可以考虑 Apollo Client （比较流行）、 urql （轻量级）或 Relay （由 Facebook 开发）。\n\nIf you are already using Redux and want to add data fetching with integrated state management in Redux, instead of adding TanStack Query, you may want to check out RTK Query which integrates data fetching neatly into Redux.\n如果您已经在使用 Redux，并且想要在 Redux 中添加带有集成状态管理的数据获取功能，而不是添加 TanStack Query，那么您可能需要查看将数据获取功能巧妙地集成到 Redux 中的 RTK Query 。\n\nIf you control the frontend and the backend (both TypeScript), check out tRPC for end-to-end type safe APIs. It is a tremendous productivity boost and DX. You can also combine it with TanStack Query for all the niceties regarding data fetching while still being able to call your backend from your frontend by using typed functions.\n如果您控制着前端和后端（均使用 TypeScript），不妨尝试一下 tRPC ，它提供了端到端类型安全的 API。它能够极大地提升生产力和用户体验。您还可以将它与 TanStack Query 结合使用，以获得所有与数据获取相关的细节，同时仍然能够通过使用类型化函数从前端调用后端。\n\nLast but not least, if you have a (meta) framework which supports React Server Components/Server Functions (RSC/RSF) (i.e. Next.js), you may want to use them instead for data fetching. They allow you to fetch data on the server and pass it down to the client. This way you can avoid the need for a client-side data fetching library.\n最后但同样重要的一点是，如果你有一个支持 React 服务器组件/服务器函数 (RSC/RSF) 的（元）框架（例如 Next.js），你可能想使用它们来获取数据。它们允许你在服务器上获取数据并将其传递给客户端。这样，你就不需要客户端数据获取库了。\n\nRecommendations:  建议：\n\n- server-side data fetching\n服务器端数据获取\n  - React Server Components/Functions (if supported by (meta) framework)\nReact 服务器组件/功能（如果受（元）框架支持）\n- client-side data fetching\n客户端数据获取\n  - TanStack Query (REST APIs or GraphQL APIs)\nTanStack 查询（REST API 或 GraphQL API）\n   - combined with axios or fetch\n与 axios 或 fetch 结合\n  - Apollo Client (GraphQL APIs)\nApollo 客户端（GraphQL API）\n   - for a more sophisticated GraphQL experience\n获得更复杂的 GraphQL 体验\n-  tRPC for tightly coupled client-server architectures\ntRPC 用于紧密耦合的客户端-服务器架构\n\n\n<hr />\n\n<div align=\"center\" id=\"Routing-with-React-Router\">\n  <h3 align=\"center\">Routing with React Router</h3>\n  <h3 align=\"center\">使用 React Router 进行路由</h3>\n</div>\n\nIf you are using a React framework like Next.js, routing is already taken care of for you. However, if you are using React without a framework and only for client-side rendering (e.g. Vite without SSR), the most popular routing library out there is React Router.\n如果您使用的是像 Next.js 这样的 React 框架，那么路由已经为您处理好了。但是，如果您不使用框架而只使用 React 进行客户端渲染（例如，不带 SSR 的 Vite），那么最流行的路由库是 React Router 。\n\nHowever, this year may be the year of TanStack Router which is a new routing library for React. It is a great alternative to React Router, especially if you are using TypeScript in your React project. Although it is still in beta, anyone familiar with TanStack knows it will be excellent.\n然而，今年可能是 TanStack Router 的元年，它是 React 的一个新路由库。它是 React Router 的绝佳替代品，尤其是在 React 项目中使用 TypeScript 的情况下。虽然它仍处于测试阶段，但熟悉 TanStack 的人都知道它会非常出色。\n\nBoth React Router and TanStack Router (with TanStack Start) are working on React Server Components (RSC) support. This means that you can execute components on the server for different use cases (e.g. smaller bundle size, server-side data fetching).\nReact Router 和 TanStack Router（以及 TanStack Start）均支持 React 服务器组件 (RSC)。这意味着您可以针对不同的用例（例如，更小的包大小、服务器端数据获取）在服务器上执行组件。\n\nBefore you introduce a router in your React project, when you are just about to learn React, you can give React's conditional rendering a shot first. It is not a replacement for routing, but gives you a glimpse on how replacing components on a page level works.\n在 React 项目中引入路由器之前，如果你刚开始学习 React，可以先尝试一下 React 的条件渲染 。它并非路由的替代品，只是让你大致了解一下如何在页面级别替换组件。\n\nRecommendations:  建议：\n\n- server-side routing: Next.js\n服务器端路由：Next.js\n- client-side routing:  客户端路由：\n  - most used: React Router  最常用：React Router\n  - trending: TanStack Router\n趋势：TanStack 路由器\n<hr />\n\n<div align=\"center\" id=\"CSS-Styling-in-React\">\n  <h3 align=\"center\">CSS Styling in React</h3>\n  <h3 align=\"center\">React 中的 CSS 样式</h3>\n</div>\n\nThere are many options and even more opinions about styling/CSS in React out there, so putting everything in one section here does not suffice. If you want to get deeper into this topic and get to know all the options, check out the following guide.\n关于 React 中的样式/CSS，市面上有很多选项，甚至还有更多不同的意见，因此将所有内容放在一个章节中是不够的。如果您想深入了解这个主题并了解所有选项，请查看以下指南。\n\nAs a React beginner, it is okay to start with inline styles and bare bones CSS by using a style object in JSX. It should be rarely used for actual applications though:\n作为 React 初学者，可以通过在 JSX 中使用样式对象来开始使用内联样式和基本 CSS。不过，在实际应用中，这种方法应该很少使用：\n\n```tsx\nconst Headline = ({ title }) =>\n  <h1 style={{ color: 'blue' }}>\n    {title}\n  </h1>\n```\n\nWhereas inline style can be used to add style dynamically with JavaScript in React's JSX, an external CSS file could hold all the remaining style for your React application:\n虽然可以使用内联样式在 React 的 JSX 中使用 JavaScript 动态添加样式，但外部 CSS 文件可以保存 React 应用程序的所有剩余样式：\n\n```tsx\nimport './Headline.css';\n\nconst Headline = ({ title }) =>\n  <h1 className=\"headline\" style={{ color: 'blue' }}>\n    {title}\n  </h1>\n```\nOnce your application grows in size, there are other styling approaches to check out. One last hint before we continue: If you want to apply a className conditionally in React, use a utility library like clsx.\n当你的应用程序规模扩大时，还有其他样式方法可以尝试。继续之前的最后一点提示：如果你想在 React 中有条件地应用 className，可以使用像 clsx 这样的实用程序库。\n\n\n\nFirst, I want to recommend Tailwind CSS as the most popular Utility-First-CSS solution. It comes with pre-defined CSS classes. This makes you more efficient as a developer and streamlines the design system of your React application, but comes with the tradeoff of getting to know all the classes and verbose inlining of many CSS classes:\n首先，我想推荐 Tailwind CSS ，它是最受欢迎的 “实用优先”CSS 解决方案。它自带预定义的 CSS 类。这可以提高开发者的效率，并简化 React 应用程序的设计系统，但同时也需要你了解所有 CSS 类，并且需要对许多 CSS 类进行冗长的内联：\n\n```tsx\nconst Headline = ({ title }) =>\n  <h1 className=\"text-blue-700\">\n    {title}\n  </h1>\n```\n\n\nSecond, I would recommend you to have a look into CSS Modules as one of many CSS-in-CSS solutions. CSS Modules give you a way to encapsulate your CSS into component co-located modules. This way, styles don't leak accidentally into other components:\n其次，我推荐你了解一下 CSS 模块，它是众多 CSS-in-CSS 解决方案之一。CSS 模块提供了一种将 CSS 封装到组件中的方法。这样，样式就不会意外泄漏到其他组件中：\n\n```tsx\nimport styles from './style.module.css';\n\nconst Headline = ({ title }) =>\n  <h1 className={styles.headline}>\n    {title}\n  </h1>\n```\n\n\nAnd third, I want to show (not recommend anymore) you Styled Components as one of many CSS-in-JS solutions for React. This approach is brought to you by a library called styled-components (or alternatives such as emotion) which co-locates styling created with JavaScript next to your React components in the same file or a co-located file:\n第三，我想向你展示（不再推荐）样式化组件 (Styled Components)，它是众多 React CSS-in-JS 解决方案之一。这种方法由一个名为 styled-components 的库（或其他类似库，例如 emotion ）提供，它将用 JavaScript 创建的样式与你的 React 组件放在同一个文件或共置文件中：\n\n```tsx\nimport styled from 'styled-components';\n\nconst BlueHeadline = styled.h1`\n  color: blue;\n`;\n\nconst Headline = ({ title }) =>\n  <BlueHeadline>\n    {title}\n  </BlueHeadline>\n```\n\n\nWhether you choose CSS-in-CSS or Utility-First-CSS is up to you. The trend goes towards Utility-First-CSS with Tailwind CSS as the industry standard. CSS-in-JS solutions are not as popular anymore because of their performance and hydration problems with server-side environments, even though newer solutions (but not as popular as Styled Components or Emotion) are solving these problems.\n选择 CSS-in-CSS 还是 Utility-First-CSS 取决于您自己。目前趋势是 Utility-First-CSS，而 Tailwind CSS 已成为行业标准。CSS-in-JS 解决方案由于其在服务器端环境中的性能和数据迁移问题而不再流行，尽管较新的解决方案（但不如 Styled Components 或 Emotion 流行）正在解决这些问题。\n\nOther libraries to check out: PandaCSS, linaria, vanilla-extract, nanocss, UnoCSS, and Styled JSX.\n其他值得一试的库有： PandaCSS 、 linaria 、 vanilla-extract 、 nanocss 、 UnoCSS 和 Styled JSX 。\n\nRecommendations:  建议：\n\n- Utility-First-CSS (most popular)\nUtility-First-CSS（最流行）\n - e.g. Tailwind CSS  例如 Tailwind CSS\n- CSS-in-CSS  CSS 中的 CSS\n - e.g. CSS Modules  例如 CSS 模块\n- CSS-in-JS\n - e.g. StyleX by Facebook (compiles to utility-first CSS)\n例如 Facebook 的 StyleX （编译为实用优先的 CSS）\n<hr />\n\n\n<div align=\"center\" id=\"React-UI-Libraries\">\n  <h3 align=\"center\">React UI Libraries</h3>\n  <h3 align=\"center\">React UI 库</h3>\n</div>\n\nAs a beginner, it is a great and recommended learning experience to build reusable components from scratch. Whether it is a dropdown, a select, a radio button, or a checkbox, you should know how to create these UI components yourself eventually.\n作为初学者，从头开始构建可复用组件是一个很好的学习体验，值得推荐。无论是下拉菜单 、 选择框 、 单选按钮还是复选框 ，你最终都应该知道如何自己创建这些 UI 组件。\n\nHowever, if you don't have the resources to come up with all the components yourself, you want to use a UI library which gives you access to lots of pre-built components which share the same design system, functionalities, and rules for accessibility:\n但是，如果您没有足够的资源自己设计所有组件，那么您需要使用 UI 库，它可以让您访问许多预先构建的组件，这些组件共享相同的设计系统、功能和可访问性规则：\n\n- Material UI (MUI) (still most wanted in freelance projects)\nMaterial UI（MUI） （在自由职业项目中仍然是最需要的）\n- Mantine UI (most popular 2022)\nMantine UI （2022 年最受欢迎）\n- Chakra UI (most popular 2021)\nChakra UI （2021 年最受欢迎）\n- Hero UI ([previously] Next UI)\n英雄 UI （[之前] Next UI）\n- Park UI (based on Ark UI)\nPark UI （基于 Ark UI）\n- PrimeReact\n\n\n\nThe trend moves towards headless UI libraries though. They come without styling, but with all the functionalities and accessibilities that a modern component library needs. Most of the time they are combined with a Utility-First-CSS solution like Tailwind:\n不过，趋势正在朝着无头 UI 库的方向发展。它们没有样式，但具备现代组件库所需的所有功能和可访问性。大多数情况下，它们与 Tailwind 等“实用优先”的 CSS 解决方案结合使用：\n\n\n- shadcn/ui (most popular 2023 - 2024)\nshadcn/ui （2023 - 2024 年最受欢迎）\n- Radix (foundation for shadcn/ui)\nRadix （shadcn/ui 的基础）\n- React Aria\n- Ark UI (from the makers of Chakra UI)\nArk UI （来自 Chakra UI 的制造商）\n- Ariakit  阿里亚基特\n- Daisy UI  雏菊用户界面\n- Headless UI  无头用户界面\n- Tailwind UI (not free)\nTailwind UI （非免费）\n\nPerhaps more out of fashion compared to the other UI libraries:\n与其他 UI 库相比，可能更加过时：\n\n- Ant Design\n- Semantic UI  语义用户界面\n- React Bootstrap  反应引导\n- Reactstrap  反应带\n<hr />\n\n<div align=\"center\" id=\"React-Animation-Libraries\">\n  <h3 align=\"center\">React Animation Libraries</h3>\n  <h3 align=\"center\">React 动画库</h3>\n</div>\nEvery animation in a web application begins with CSS. However, you'll soon realize that CSS animations may not fully meet your requirements. Some popular animation libraries for React include:\nWeb 应用程序中的每个动画都始于 CSS。然而，您很快就会意识到 CSS 动画可能无法完全满足您的需求。一些流行的 React 动画库包括：\n\n- Motion (most recommended, previously Framer Motion)\nMotion （最推荐，以前称为 Framer Motion）\n- react-spring  反应弹簧\n\n<hr />\n\n\n<div align=\"center\" id=\"Visualization-and-Chart-Libraries-in-React\">\n  <h3 align=\"center\">Visualization and Chart Libraries in React</h3>\n  <h3 align=\"center\">REACT 中的可视化和图表库</h3>\n</div>\n\nIf you really want to build charts from the ground up yourself, there is no way around D3. It's a low level visualization library that gives you everything you need to create amazing charts. However, learning D3 is a whole other adventure, thus many developers just pick a React charting library which does everything in exchange for flexibility. Popular solutions are:\n如果你真的想自己从头开始构建图表，那么 D3 是你的不二之选。它是一个底层可视化库，可以为你提供创建精彩图表所需的一切。然而，学习 D3 又是另一回事，因此许多开发者干脆选择一个功能齐全的 React 图表库，以换取灵活性。常见的解决方案包括：\n\n- Recharts (personal recommendation)\n Recharts （个人推荐）\n  - off the shelf charts  现成的图表\n  - great composability  出色的可组合性\n  -optional customization due to opt-in composability\n由于选择加入可组合性而实现的可选定制\n\n- visx  维斯克斯\n  - leaning more towards low-level D3 than high-level abstraction\n更倾向于低级 D3 而不是高级抽象\n  - steeper learning curve  更陡峭的学习曲线\n  \n- more off the shelf charts, more difficult to customize\n现成的图表越多，定制难度就越大\n  - Victory  胜利\n  - nivo  等级\n  - react-chartjs\n\n<hr />\n\n<div align=\"center\" id=\"Form-Libraries-in-React\">\n  <h3 align=\"center\">Form Libraries in React</h3>\n  <h3 align=\"center\">REACT 中的表单库</h3>\n</div>\n\nThe by far most popular library for forms in React is React Hook Form. It comes with everything needed: validation (zod as the most popular), form submission, form state management, and more. It is a great library to get started with forms in React.\n目前为止，React 中最流行的表单库是 React Hook Form 。它提供了所需的一切：表单验证（ zod 最受欢迎）、表单提交、表单状态管理等等。它是一个非常适合在 React 中入门的表单库。\n\nAn upcoming alternative is Conform which integrates more nicely with full-stack applications.\n即将推出的替代方案是 Conform ，它与全栈应用程序的集成效果更好。\n\n\nAlternatively, you can use Formik or React Final Form. If you are using a React UI library, see how it integrates with these form libraries.\n或者，您可以使用 Formik 或 React Final Form 。如果您正在使用 React UI 库，请查看它如何与这些表单库集成。\n\nRecommendations:  建议：\n\n - React Hook Form  React Hook 表单\n   - with zod integration for validation\n集成 zod 进行验证\n<hr />\n\n\n<div align=\"center\" id=\"Code-Structure-in-React\">\n  <h3 align=\"center\">Code Structure in React</h3>\n  <h3 align=\"center\">REACT 中的代码结构</h3>\n</div>\n\nIf you want to embrace a unified and common sense code style, use ESLint in your React project. A linter such as ESLint enforces a particular code style. For example, you can make it a requirement with ESLint to follow a popular style guides. You can also integrate ESLint in your IDE/editor and it will point you to every mistake.\n如果您想拥有统一且符合常识的代码风格，请在您的 React 项目中使用 ESLint 。像 ESLint 这样的代码检查工具会强制执行特定的代码风格。例如，您可以要求 ESLint 遵循流行的代码风格指南。您还可以将 ESLint 集成到您的 IDE/编辑器中 ，它会指出您的所有错误。\n\nIf you want to embrace a unified code format, use Prettier in your React project. It is an opinionated code formatter with only a handful of opt-in configurations. You can integrate it in your editor or IDE so that it formats your code every time you save a file. Prettier doesn't replace ESLint though, but it integrates nicely with it.\n如果您想采用统一的代码格式，请在 React 项目中使用 Prettier 。它是一款功能强大的代码格式化程序，只需少量可选配置。您可以将其集成到编辑器或 IDE 中 ，以便在每次保存文件时自动格式化代码。Prettier 并不能取代 ESLint，但它可以与 ESLint 完美集成 。\n\nMaybe a rising star in 2025 will be Biome (formerly Rome). ESLint and Prettier are not the most favorite utilities when it comes to their setup and especially interplay. But they are necessary in every web developer's daily work. Biome wants to be an alternative to Prettier and ESLint by providing a fast (Rust based) and all-in-one toolchain.\n2025 年， Biome （原名 Rome）或许会成为一颗冉冉升起的新星。ESLint 和 Prettier 在设置和交互方面并非最受欢迎的工具，但它们却是每个 Web 开发者日常工作中必不可少的工具。Biome 希望通过提供快速（基于 Rust）且一体化的工具链，成为 Prettier 和 ESLint 的替代品。\n\nRecommendations:  建议：\n\n- ESLint + Prettier\n- optionally check out Biome\n可选地检查 Biome\n\n<hr />\n\n\n<div align=\"center\" id=\"React-Authentication\">\n  <h3 align=\"center\">React Authentication</h3>\n  <h3 align=\"center\">React 验证</h3>\n</div>\nIn a React application, you may want to introduce authentication with functionalities such as sign up, sign in, and sign out. Other features like password reset and password change features are often needed as well. These features go far beyond React, because a backend application manages these things for you.\n在 React 应用中，你可能希望引入身份验证功能，例如注册、登录和退出。此外，通常还需要其他功能，例如密码重置和密码更改功能。这些功能远远超出了 React 的范畴，因为后端应用程序会为你管理这些功能。\n\nThe best learning experience would be implementing a full-stack application with authentication (e.g. The Road to Next) yourself. Since authentication comes with lots of security risks and nitty gritty details not everyone knows about, I'd recommend using a third-party service for authentication in production:\n最好的学习经验是自己实现一个支持身份验证的全栈应用程序（例如 The Road to Next ）。由于身份验证存在许多安全风险，而且一些细节并非人人皆知，因此我建议在生产环境中使用第三方身份验证服务：\n\n- Lucia (Resource)\n露西亚 （资源）\n  - Oslo: Auth and Cryptography\n奥斯陆：身份验证和密码学\n  - Arctic: OAuth 2.0 with support for 50+ providers\nArctic：OAuth 2.0 支持 50 多家提供商\n- Better Auth  更好的身份验证\nAuth.js\n- Clerk (paid) or Kinde (paid)\n职员 （付费）或 Kinde （付费）\n- Supabase (Auth)  Supabase（授权）\n- AuthKit\n- Auth0\n- AWS Cognito  AWS 知识库\n\n<hr />\n\n\n<div align=\"center\" id=\"React-Backend\">\n  <h3 align=\"center\">React Backend</h3>\n  <h3 align=\"center\">React后端</h3>\n</div>\n\nSince there is a strong trend moving React to the server, the most natural habitat for a React project would be a (meta) framework like Next.js (mostly dynamic web applications) or Astro (mostly static website). React Router (previously Remix) and TanStack Start are also great alternatives, but they are in earlier stages of development.\n由于 React 迁移到服务器的趋势强劲，React 项目最自然的栖息地将是像 Next.js（主要面向动态 Web 应用程序）或 Astro（主要面向静态网站）这样的（元）框架。React Router（前身为 Remix）和 TanStack Start 也是不错的选择，但它们还处于早期开发阶段。\n\n If you can't use a full-stack framework due to various reasons (while still being able to use a JS/TS), you have to check out tRPC or Hono. Honorable mention goes to the old school but must popular Node backend Express. Other alternatives are Fasitfy, Nest, or Elysia.\n如果您由于各种原因无法使用全栈框架（但仍能使用 JS/TS），那么您应该考虑 tRPC 或 Hono 。值得一提的是老牌但非常流行的 Node 后端 Express 。其他替代方案包括 Fasitfy 、 Nest 或 Elysia 。\n\nHonorable mention goes to Koa and Hapi.\n值得一提的是 Koa 和 Hapi 。\n\n\n\n<hr />\n\n\n<div align=\"center\" id=\"React-Database\">\n  <h3 align=\"center\">React Database</h3>\n  <h3 align=\"center\">React 数据库</h3>\n</div>\n\nNot tied to React, but since full-stack React applications are getting popular these days, React is closer than ever to the database layer. While developing any Next.js application, you will most likely deal with a database ORM. The most popular ORM choice these days is Prisma. A trending alternative is Drizzle ORM.\n虽然与 React 无关，但由于全栈 React 应用程序如今越来越流行，React 比以往任何时候都更接近数据库层。在开发任何 Next.js 应用程序时，你很可能会处理数据库 ORM。目前最流行的 ORM 选择是 Prisma 。另一个流行的替代方案是 Drizzle ORM 。\n\nMore alternatives are Kysely and database-js (only PlanetScale).\n更多的替代方案是 Kysely 和 database-js （仅限 PlanetScale）。\n\nWhen it comes to choosing a database, Supabase (or Firebase) are valid database providers. Supabase with its PostgreSQL can be self-hosted or used as a paid service.\n在选择数据库时，Supabase（或 Firebase）是不错的选择。Supabase 及其 PostgreSQL 可以自托管，也可以作为付费服务使用。\n\nPopular serverless database alternatives are PlanetScale (paid), Neon, Xata, and Turso.\n流行的无服务器数据库替代品有 PlanetScale （付费）、 Neon 、 Xata 和 Turso 。\n\n<hr />\n\n\n<div align=\"center\" id=\"React-Hosting\">\n  <h3 align=\"center\">React Hosting</h3>\n  <h3 align=\"center\">React 托管</h3>\n</div>\n\nDeploying and hosting a React application is similar to deploying any other web app. For complete control over your environment, consider using services like Digital Ocean or Hetzner. These options allow you to manage your infrastructure yourself.\n部署和托管 React 应用程序与部署任何其他 Web 应用类似。为了完全控制您的环境，请考虑使用 Digital Ocean 或 Hetzner 等服务。这些选项允许您自行管理基础架构。\n\nIf you prefer a hands-off approach where the hosting platform manages everything for you, Vercel is a well-regarded option, particularly for projects built with Next.js.\n如果您更喜欢托管平台为您管理一切的放手方式，那么 Vercel 是一个备受推崇的选择，特别是对于使用 Next.js 构建的项目。\n\nFor a middle ground, Coolify provides an excellent solution, offering some autonomy while simplifying many hosting tasks.\n对于中间立场， Coolify 提供了一个出色的解决方案，在简化许多托管任务的同时提供了一定的自主权。\n\nIf you are already using a third-party backend as a service like Firebase/Supabase, you can check whether they offer hosting as well. Other popular hosting providers are Render, Fly.io, Railway, or directly at CloudFlare/AWS/Azure/Google Cloud.\n如果您已经在使用第三方后端即服务（例如 Firebase/Supabase），可以查看它们是否也提供托管服务。其他热门托管服务提供商包括 Render 、 Fly.io 、 Railway ，或者直接使用 CloudFlare/AWS/Azure/Google Cloud。\n\n\n<hr />\n\n\n<div align=\"center\" id=\"React-Hosting\">\n  <h3 align=\"center\">Testing in React</h3>\n  <h3 align=\"center\">React 中测试</h3>\n</div>\n\nThe backbone of testing a React application is a test framework like Vitest (recommended) or Jest. It gives you test runner, assertion library and spying, mocking, stubbing functionalities. Everything that's needed in a comprehensive test framework.\n测试 React 应用程序的核心是像 Vitest （推荐）或 Jest 这样的测试框架。它提供了测试运行器、断言库以及监听、模拟、存根等功能。一个全面的测试框架所需的一切都具备了。\n\nEventually you will find yourself using the popular React Testing Library (RTL), which is used within your testing framework's environment, as a comprehensive testing library for React. RTL makes it possible to render your components and to simulate events on HTML elements. Afterward, your test framework is used for the assertions.\n最终，你会发现自己正在使用流行的 React 测试库 (RTL) ，它在你的测试框架环境中使用，是一个全面的 React 测试库。RTL 可以渲染你的组件并模拟 HTML 元素上的事件。之后，你的测试框架将用于断言。\n\nWhen it comes to selecting a testing tool for React end-to-end (E2E) testing, two of the most widely recommended and popular options are Playwright (recommended) and Cypress. Both tools allow you to automate and simulate user interactions within a browser, ensuring that your React application behaves as expected from a user's perspective.\n在选择用于 React 端到端 (E2E) 测试的工具时，最受推荐和最受欢迎的两个选项是 Playwright （推荐）和 Cypress 。这两种工具都允许您在浏览器中自动化和模拟用户交互，从而确保您的 React 应用程序从用户的角度按预期运行。\n\nRecommendations:  建议：\n\n- Unit/Integration: Vitest + React Testing Library (most popular)\n单元/集成：Vitest + React 测试库（最受欢迎）\n- E2E Tests: Playwright (or Cypress)\nE2E 测试：Playwright（或 Cypress）\n- optionally Snapshot Tests with Vitest\n可选使用 Vitest 进行快照测试\n\n<hr />\n\n\n<div align=\"center\" id=\"React-and-Immutable-Data-Structures\">\n  <h3 align=\"center\">React and Immutable Data Structures</h3>\n  <h3 align=\"center\">React 和不可变数据结构</h3>\n</div>\n\nVanilla JavaScript gives you plenty of built-in tools to handle data structures as if they are immutable. However, if you and your team feel the need to enforce immutable data structures, the most popular choice is Immer.\n原生 JavaScript 提供了许多内置工具来处理数据结构，就好像它们是不可变的一样。但是，如果您和您的团队觉得需要强制使用不可变的数据结构，那么最受欢迎的选择是 Immer 。\n\n<hr />\n\n\n<div align=\"center\" id=\"React-Hosting\">\n  <h3 align=\"center\">React Internationalization</h3>\n  <h3 align=\"center\">REACT 国际化</h3>\n</div>\n\nWhen it comes to internationalization i18n for your React application, you need to think not only about translations, but also about pluralizations, formattings for dates and currencies, and a handful of other things. These are the most popular libraries for dealing with it:\n在为 React 应用程序进行国际化 i18n 时，你不仅需要考虑翻译，还需要考虑复数形式、日期和货币的格式以及其他一些问题。以下是一些常用的库来处理这些问题：\n\n- FormatJS\n- react-i18next\n- Lingui  语言\n- next-intl (Next.js)\nnext-intl （Next.js）\n\n<hr />\n\n\n<div align=\"center\" id=\"Rich-Text-Editor-in-React\">\n  <h3 align=\"center\">Rich Text Editor in React</h3>\n  <h3 align=\"center\">React 中的富文本编辑器</h3>\n</div>\n\nWhen it comes to Rich Text Editors in React, I can only think of the following:\n当谈到 React 中的富文本编辑器时，我只能想到以下几点：\n\n- TipTap  提示\n- Plate  盘子\n- Lexical  词汇\n- Slate  石板\n\n<hr />\n\n\n<div align=\"center\" id=\"Payments-in-React\">\n  <h3 align=\"center\">Payments in React</h3>\n  <h3 align=\"center\">REACT 支付</h3>\n</div>\n\nWhen it comes to integrating payment solutions into your React application, Stripe and PayPal are the most commonly used providers. Both offer seamless integration options for React.\n在将支付解决方案集成到 React 应用程序中时，Stripe 和 PayPal 是最常用的提供商。两者都为 React 提供了无缝集成选项。\n\n- PayPal\n- Stripe  条纹\n  - React Stripe Elements  React Stripe 元素\n  - Stripe Checkout  Stripe 结账\nOther payment providers are Braintree (PayPal) and Lemon Squeezy (Stripe) which have been acquired by their competitors.\n其他支付提供商包括 Braintree （PayPal）和 Lemon Squeezy （Stripe），它们已被竞争对手收购。\n\n\n<hr />\n\n\n<div align=\"center\" id=\"Time-in-React\">\n  <h3 align=\"center\">Time in React</h3>\n  <h3 align=\"center\">REACT 时间</h3>\n</div>\n\nIf your React application frequently handles dates, times, and timezones, consider using a dedicated library to manage these aspects efficiently. Here are some options:\n如果您的 React 应用程序经常处理日期、时间和时区，请考虑使用专用库来高效地管理这些方面。以下是一些选项：\n\n- date-fns  日期函数\n- Day.js\n\n<hr />\n\n\n<div align=\"center\" id=\"Payments-in-React\">\n  <h3 align=\"center\">React Desktop Applications</h3>\n  <h3 align=\"center\">React 桌面应用程序</h3>\n</div>\n\nElectron and Tauri are the go to frameworks for cross-platform desktop applications.\nElectron 和 Tauri 是跨平台桌面应用程序的首选框架。\n\n<hr />\n\n\n<div align=\"center\" id=\"File-Upload-in-React\">\n  <h3 align=\"center\">File Upload in React</h3>\n  <h3 align=\"center\">REACT 上传文件</h3>\n</div>\n\n- input field with type=\"file\"\ntype=\"file\" 的输入字段\n- react-dropzone  反应拖放区\n<hr />\n\n\n<div align=\"center\" id=\"File-Upload-in-React\">\n  <h3 align=\"center\">File Upload in React</h3>\n  <h3 align=\"center\">REACT 上传文件</h3>\n</div>\n\nE-Mail rendering is a pain if you are just using HTML. Fortunately, there are libraries out there which help you to create responsive HTML emails with React components:\n如果只使用 HTML，电子邮件渲染会非常麻烦。幸运的是，有一些库可以帮助你使用 React 组件创建响应式 HTML 电子邮件：\n\n- react-email (recommendation)\n- react-email （推荐）\n- mjml  嗯\n- Mailing  邮寄\n- jsx-email  jsx-电子邮件\n\nIf you are looking for a email service provider, check out Resend, Postmark, SendGrid, or Mailgun.\n如果您正在寻找电子邮件服务提供商，请查看 Resend 、 Postmark 、 SendGrid 或 Mailgun 。\n\n\n<hr />\n\n\n<div align=\"center\" id=\"Drag-and-Drop\">\n  <h3 align=\"center\">Drag and Drop</h3>\n  <h3 align=\"center\">拖放</h3>\n</div>\nPersonally I have used the successor of react-beautiful-dnd and cannot say anything negative about it. A popular alternative which offers way more flexibility and options, but comes with the cost of a steeper learning curve, is dnd kit.\n我个人用过 react-beautiful-dnd 的后续版本 ，对它没什么不满。dnd kit 是一个很受欢迎的替代方案，它提供了更多的灵活性和选项，但学习起来比较费劲。\n\n<hr />\n\n\n<div align=\"center\" id=\"Mobile-Development-with-React\">\n  <h3 align=\"center\">Mobile Development with React</h3>\n  <h3 align=\"center\">使用 React 进行移动开发</h3>\n</div>\n\nThe go-to solution for bringing React from the web to mobile is still React Native. The most popular framework for creating React Native applications is Expo. If you need unified components across web and mobile, you want to check out Tamagui.\n将 React 从 Web 迁移到移动端的首选解决方案仍然是 React Native 。最流行的 React Native 应用创建框架是 Expo 。如果您需要跨 Web 和移动端的统一组件，您可以考虑 Tamagui 。\n\n<hr />\n\n\n<div align=\"center\" id=\"React-VR/AR\">\n  <h3 align=\"center\">React VR/AR</h3>\n  <h3 align=\"center\">React 虚拟现实/增强现实</h3>\n</div>\n\n\nIt's possible to dive into virtual reality or augmented reality with React. To be honest, I haven't used any of these libraries and most are early stage (experimental), but they are the ones I know from the top of my head when it comes to AR/VR in React:\n使用 React 可以深入探索虚拟现实或增强现实。说实话，我还没用过这些库，而且它们大多数都处于早期阶段（实验性），但说到 React 中的 AR/VR，我最先想到的就是这些：\n\n- react-three-fiber (popular 3d library, however, I have seen VR examples too)\n- react-three-fiber （流行的 3d 库，不过我也见过 VR 示例）\n- react-360 (archived)\nreact-360 （已存档）\n- aframe-react (not maintained anymore)\naframe-react （不再维护）\n\n\n<hr />\n\n\n<div align=\"center\" id=\"Design-Prototyping-for-React\">\n  <h3 align=\"center\">Design Prototyping for React</h3>\n  <h3 align=\"center\">为 React 设计原型</h3>\n</div>\n\n\nIf you are coming from a UI/UX background, you may want to use a tool for fast prototyping for new React components, layouts, or UI/UX concepts. Personally I use Figma. For rough yet lightweight sketches, I like to use Excalidraw, others prefer tldraw.\n如果您有 UI/UX 背景，您可能需要使用一个工具来快速为新的 React 组件、布局或 UI/UX 概念进行原型设计。我个人使用 Figma 。对于粗略但轻量级的草图，我喜欢使用 Excalidraw ，其他人更喜欢 tldraw 。\n\n\n<hr />\n\n\n<div align=\"center\" id=\"React-Component-Documentation\">\n  <h3 align=\"center\">React Component Documentation</h3>\n  <h3 align=\"center\">React 组件文档</h3>\n</div>\n\nIf you are in charge of writing the documentation for your components, there are various neat React documentation tools out there. I've used Storybook in many projects and have a neutral opinion about it. I've heard good things about these other solutions too:\n如果您负责编写组件文档，那么市面上有各种简洁的 React 文档工具可供选择。我在许多项目中使用过 Storybook ，对它持中立态度。我也听说过其他一些解决方案的好评：\n\n- Docusaurus  多库萨乌斯\n- Styleguidist  风格指南\n- React Cosmos\n\nUltimately, the React ecosystem functions as a flexible framework centered around React. It allows you to make informed choices about which libraries to incorporate, enabling you to start small and add libraries as needed to address specific challenges. Conversely, if React alone meets your requirements, you can maintain a lightweight setup by using just the core library.\n归根结底，React 生态系统是一个以 React 为中心的灵活框架。它允许您在选择要集成的库时做出明智的选择，让您能够从小处着手，并根据需要添加库以应对特定挑战。相反，如果 React 本身就能满足您的需求，那么您可以只使用核心库来维护一个轻量级的设置。\n\n\n",
      "code": "var Component=(()=>{var u=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var g=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),f=(t,n)=>{for(var i in n)r(t,i,{get:n[i],enumerable:!0})},c=(t,n,i,o)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let a of m(n))!y.call(t,a)&&a!==i&&r(t,a,{get:()=>n[a],enumerable:!(o=p(n,a))||o.enumerable});return t};var S=(t,n,i)=>(i=t!=null?u(R(t)):{},c(n||!t||!t.__esModule?r(i,\"default\",{value:t,enumerable:!0}):i,t)),b=t=>c(r({},\"__esModule\",{value:!0}),t);var s=g((C,l)=>{l.exports=_jsx_runtime});var v={};f(v,{default:()=>h,frontmatter:()=>w});var e=S(s()),w={title:\"React Libraries for 2025\",description:\"\\u5728\\u672C\\u6307\\u5357\\u4E2D\\uFF0C\\u6211\\u4EEC\\u5C06\\u63A2\\u7D22 2025 \\u5E74\\u5FC5\\u5907\\u7684 React \\u5E93\\u3002\\u8FD9\\u4E9B\\u5E93\\u662F\\u4F7F\\u7528 React \\u5F00\\u53D1\\u5927\\u578B\\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u57FA\\u77F3\\u3002\\u65E0\\u8BBA\\u60A8\\u662F\\u521D\\u5B66\\u8005\\u8FD8\\u662F\\u7ECF\\u9A8C\\u4E30\\u5BCC\\u7684\\u5F00\\u53D1\\u8005\\uFF0C\\u672C\\u6307\\u5357\\u90FD\\u80FD\\u5E2E\\u52A9\\u60A8\\u8F7B\\u677E\\u9A7E\\u9A6D\\u5E9E\\u5927\\u7684 React \\u751F\\u6001\\u7CFB\\u7EDF\\u3002\",date:\"2025-05-18\",image:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/react-ecosystem-in-2025-20241230100040995.jpg\",tags:[\"react 2025\",\"react libraries\"],author:{name:\"JiangBao\",username:\"\\u8FD9\\u5BB6\\u4F19\\u5F88\\u61D2\\uFF0C\\u4EC0\\u4E48\\u4E5F\\u6CA1\\u7559\\u4E0B\",avatar:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/avatar.png\"}};function d(t){let n={a:\"a\",code:\"code\",li:\"li\",p:\"p\",pre:\"pre\",ul:\"ul\",...t.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(\"img\",{src:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/react-ecosystem-in-2025-20241230100040995.jpg\",width:700,height:350,alt:\"HeroUI\",className:\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"}),`\n`,(0,e.jsx)(\"div\",{className:\"px-2.5 py-2.5 border-1 dark:border-white border-black\",children:(0,e.jsxs)(n.p,{children:[\"\\u539F\\u6587\\u5730\\u5740\\uFF1A\",(0,e.jsx)(n.a,{href:\"https://www.robinwieruch.de/react-libraries/\",children:\"https://www.robinwieruch.de/react-libraries/\"})]})}),`\n`,(0,e.jsx)(n.p,{children:`React has been around for quite some time, and over the years, an extensive\\u2014yet sometimes overwhelming\\u2014ecosystem of libraries has grown around it. Developers transitioning from other languages or frameworks often struggle to navigate all the libraries needed to build web applications with React.\nReact \\u5DF2\\u7ECF\\u5B58\\u5728\\u4E86\\u76F8\\u5F53\\u957F\\u4E00\\u6BB5\\u65F6\\u95F4\\uFF0C\\u591A\\u5E74\\u6765\\uFF0C\\u5B83\\u5468\\u56F4\\u5DF2\\u7ECF\\u53D1\\u5C55\\u51FA\\u4E00\\u4E2A\\u5E9E\\u5927\\uFF08\\u6709\\u65F6\\u751A\\u81F3\\u4EE4\\u4EBA\\u773C\\u82B1\\u7F2D\\u4E71\\uFF09\\u7684\\u5E93\\u751F\\u6001\\u7CFB\\u7EDF\\u3002\\u4ECE\\u5176\\u4ED6\\u8BED\\u8A00\\u6216\\u6846\\u67B6\\u8FC7\\u6E21\\u5230 React \\u7684\\u5F00\\u53D1\\u8005\\u7ECF\\u5E38\\u96BE\\u4EE5\\u9A7E\\u9A6D\\u6784\\u5EFA Web \\u5E94\\u7528\\u7A0B\\u5E8F\\u6240\\u9700\\u7684\\u6240\\u6709\\u5E93 \\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`At its core, React allows developers to build component-driven user interfaces using function components. While it includes built-in solutions like React Hooks for managing local state, handling side effects, and optimizing performance, everything ultimately boils down to working with functions\\u2014both components and hooks\\u2014to construct a UI.\nReact \\u7684\\u6838\\u5FC3\\u5728\\u4E8E\\u5141\\u8BB8\\u5F00\\u53D1\\u8005\\u4F7F\\u7528\\u51FD\\u6570\\u7EC4\\u4EF6\\u6784\\u5EFA\\u7EC4\\u4EF6\\u9A71\\u52A8\\u7684\\u7528\\u6237\\u754C\\u9762\\u3002\\u867D\\u7136\\u5B83\\u5185\\u7F6E\\u4E86 React Hooks \\u7B49\\u89E3\\u51B3\\u65B9\\u6848\\uFF0C\\u7528\\u4E8E\\u7BA1\\u7406\\u672C\\u5730\\u72B6\\u6001\\u3001\\u5904\\u7406\\u526F\\u4F5C\\u7528\\u548C\\u4F18\\u5316\\u6027\\u80FD\\uFF0C\\u4F46\\u6700\\u7EC8\\u4E00\\u5207\\u90FD\\u5F52\\u7ED3\\u4E3A\\u4F7F\\u7528\\u51FD\\u6570\\uFF08\\u5305\\u62EC\\u7EC4\\u4EF6\\u548C Hooks\\uFF09\\u6765\\u6784\\u5EFA UI\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`In this walkthrough, we'll explore the essential React libraries for 2025. These libraries are the building blocks for developing large-scale applications with React. Whether you're a beginner or an experienced developer, this guide will help you navigate the vast React ecosystem effortlessly.\n\\u5728\\u672C\\u6307\\u5357\\u4E2D\\uFF0C\\u6211\\u4EEC\\u5C06\\u63A2\\u7D22 2025 \\u5E74\\u5FC5\\u5907\\u7684 React \\u5E93\\u3002\\u8FD9\\u4E9B\\u5E93\\u662F\\u4F7F\\u7528 React \\u5F00\\u53D1\\u5927\\u578B\\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u57FA\\u77F3\\u3002\\u65E0\\u8BBA\\u60A8\\u662F\\u521D\\u5B66\\u8005\\u8FD8\\u662F\\u7ECF\\u9A8C\\u4E30\\u5BCC\\u7684\\u5F00\\u53D1\\u8005\\uFF0C\\u672C\\u6307\\u5357\\u90FD\\u80FD\\u5E2E\\u52A9\\u60A8\\u8F7B\\u677E\\u9A7E\\u9A6D\\u5E9E\\u5927\\u7684 React \\u751F\\u6001\\u7CFB\\u7EDF\\u3002`}),`\n`,(0,e.jsxs)(\"div\",{style:{border:\"1px solid #ccc\",padding:\"10px 20px\"},children:[(0,e.jsx)(\"p\",{children:(0,e.jsx)(n.a,{href:\"https://www.robinwieruch.de/react-tech-stack/\",children:\"Continue Reading: React Tech Stack for 2025\"})}),(0,e.jsx)(\"p\",{children:(0,e.jsx)(n.a,{href:\"https://www.robinwieruch.de/react-tech-stack/\",children:\"\\u7EE7\\u7EED\\u9605\\u8BFB\\uFF1A 2025 \\u5E74\\u7684 React \\u6280\\u672F\\u6808\"})})]}),`\n`,(0,e.jsx)(n.p,{children:`Let's dive into the libraries that you could use for your next React application.\n\\u8BA9\\u6211\\u4EEC\\u6DF1\\u5165\\u4E86\\u89E3\\u53EF\\u7528\\u4E8E\\u4E0B\\u4E00\\u4E2A React \\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u5E93\\u3002`}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsx)(\"div\",{align:\"center\",children:(0,e.jsx)(\"h2\",{align:\"center\",children:\"Table of Contents  \\u76EE\\u5F55\"})}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Starting-a-new-React-Project\",children:\"Starting a new React Project\\uFF08\\u5F00\\u59CB\\u4E00\\u4E2A\\u65B0\\u7684 React \\u9879\\u76EE\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Package-Manager-for-React\",children:\"Package Manager for React\\uFF08React \\u5305\\u7BA1\\u7406\\u5668\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-State-Management\",children:\"React State Management\\uFF08React \\u72B6\\u6001\\u7BA1\\u7406\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-Data-Fetching\",children:\"React Data Fetching\\uFF08React \\u6570\\u636E\\u83B7\\u53D6\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Routing-with-React-Router\",children:\"Routing with React Router\\uFF08\\u4F7F\\u7528 React Router \\u8FDB\\u884C\\u8DEF\\u7531\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#CSS-Styling-in-React\",children:\"CSS Styling in React\\uFF08React \\u4E2D\\u7684 CSS \\u6837\\u5F0F\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-UI-Libraries\",children:\"React UI Libraries\\uFF08React UI \\u5E93\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-Animation-Libraries\",children:\"React Animation Libraries\\uFF08React \\u52A8\\u753B\\u5E93\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Visualization-and-Chart-Libraries-in-React\",children:\"Visualization and Chart Libraries in React\\uFF08React \\u4E2D\\u7684\\u53EF\\u89C6\\u5316\\u548C\\u56FE\\u8868\\u5E93\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Form-Libraries-in-React\",children:\"Form Libraries in React\\uFF08React \\u4E2D\\u7684\\u8868\\u5355\\u5E93\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Code-Structure-in-React\",children:\"Code Structure in React\\uFF08React \\u4E2D\\u7684\\u4EE3\\u7801\\u7ED3\\u6784\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-Authentication\",children:\"React Authentication\\uFF08React \\u8EAB\\u4EFD\\u9A8C\\u8BC1\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-Backend\",children:\"React Backend\\uFF08React\\u540E\\u7AEF\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-Database\",children:\"React Database\\uFF08React\\u6570\\u636E\\u5E93\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-Hosting\",children:\"React Hosting (React \\u6258\\u7BA1)\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Testing-in-React\",children:\"Testing in React (React \\u4E2D\\u6D4B\\u8BD5)\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-and-Immutable-Data-Structures\",children:\"React and Immutable Data Structures(React \\u548C\\u4E0D\\u53EF\\u53D8\\u6570\\u636E\\u7ED3\\u6784)\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-Internationalization\",children:\"React Internationalization (React \\u56FD\\u9645\\u5316)\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Rich-Text-Editor-in-React\",children:\"Rich Text Editor in React(React \\u4E2D\\u7684\\u5BCC\\u6587\\u672C\\u7F16\\u8F91\\u5668)\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Payments-in-React\",children:\"Payments in React (React \\u652F\\u4ED8)\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Time-in-React\",children:\"Time in React\\uFF08React \\u4E2D\\u7684\\u65F6\\u95F4\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-Desktop-Applications\",children:\"React Desktop Applications \\uFF08React \\u684C\\u9762\\u5E94\\u7528\\u7A0B\\u5E8F\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#File-Upload-in-React\",children:\"File Upload in React\\uFF08React \\u4E2D\\u7684\\u6587\\u4EF6\\u4E0A\\u4F20\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Mails-in-React\",children:\"Mails in React\\uFF08React \\u4E2D\\u7684\\u90AE\\u4EF6\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Drag-and-Drop\",children:\"Drag and Drop  \\uFF08\\u62D6\\u653E\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Mobile-Development-with-React\",children:\"Mobile Development with React\\uFF08\\u4F7F\\u7528 React \\u8FDB\\u884C\\u79FB\\u52A8\\u5F00\\u53D1\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-VR/AR\",children:\"React VR/AR  \\uFF08React VR/AR\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#Design-Prototyping-for-React\",children:\"Design Prototyping for React\\uFF08React \\u7684\\u8BBE\\u8BA1\\u539F\\u578B\\uFF09\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"#React-Component-Documentation\",children:\"React Component Documentation\\uFF08React \\u7EC4\\u4EF6\\u6587\\u6863\\uFF09\"})}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Starting-a-new-React-Project\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Starting a new React Project\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"\\u5F00\\u59CB\\u4E00\\u4E2A\\u65B0\\u7684 React \\u9879\\u76EE\"})]}),`\n`,(0,e.jsx)(n.p,{children:`The first question a React beginner often asks is: how do you set up a React project? With so many tools available, choosing the right one can be overwhelming. The most popular option in the React community is Vite, which makes it easy to create projects with different libraries (such as React) and optional TypeScript support.\nReact \\u521D\\u5B66\\u8005\\u7ECF\\u5E38\\u95EE\\u7684\\u7B2C\\u4E00\\u4E2A\\u95EE\\u9898\\u662F\\uFF1A\\u5982\\u4F55\\u642D\\u5EFA React \\u9879\\u76EE\\uFF1F\\u5E02\\u9762\\u4E0A\\u6709\\u5982\\u6B64\\u591A\\u7684\\u5DE5\\u5177\\uFF0C\\u9009\\u62E9\\u5408\\u9002\\u7684\\u5DE5\\u5177\\u53EF\\u80FD\\u4F1A\\u8BA9\\u4EBA\\u4E0D\\u77E5\\u6240\\u63AA\\u3002React \\u793E\\u533A\\u4E2D\\u6700\\u6D41\\u884C\\u7684\\u5DE5\\u5177\\u662F Vite \\uFF0C\\u5B83\\u53EF\\u4EE5\\u8F7B\\u677E\\u521B\\u5EFA\\u5305\\u542B\\u4E0D\\u540C\\u5E93\\uFF08\\u4F8B\\u5982 React\\uFF09\\u7684\\u9879\\u76EE\\uFF0C\\u5E76\\u53EF\\u9009\\u5730\\u652F\\u6301 TypeScript\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Vite also offers exceptional performance.\nVite \\u8FD8\\u63D0\\u4F9B\\u5353\\u8D8A\\u7684\\u6027\\u80FD \\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you're already familiar with React, you might consider using one of its popular (meta) frameworks instead of Vite. Next.js is a widely used choice that builds on top of React, so understanding React's fundamentals is essential. It comes with many features out of the box, such as different rendering techniques, file-based routing and API routes.\n\\u5982\\u679C\\u60A8\\u5DF2\\u7ECF\\u719F\\u6089 React\\uFF0C\\u53EF\\u4EE5\\u8003\\u8651\\u4F7F\\u7528\\u5176\\u6D41\\u884C\\u7684\\u5143\\u6846\\u67B6\\u4E4B\\u4E00\\u6765\\u4EE3\\u66FF Vite\\u3002Next.js \\u662F\\u4E00\\u4E2A\\u5E7F\\u6CDB\\u4F7F\\u7528\\u7684\\u6846\\u67B6\\uFF0C\\u5B83\\u57FA\\u4E8E React \\u6784\\u5EFA\\uFF0C\\u56E0\\u6B64\\u4E86\\u89E3 React \\u7684\\u57FA\\u7840\\u77E5\\u8BC6\\u81F3\\u5173\\u91CD\\u8981 \\u3002\\u5B83\\u5177\\u6709\\u8BB8\\u591A\\u5F00\\u7BB1\\u5373\\u7528\\u7684\\u529F\\u80FD\\uFF0C\\u4F8B\\u5982\\u4E0D\\u540C\\u7684\\u6E32\\u67D3\\u6280\\u672F\\u3001\\u57FA\\u4E8E\\u6587\\u4EF6\\u7684\\u8DEF\\u7531\\u548C API \\u8DEF\\u7531\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`While Next.js has been initially used for server-side rendering (web applications), it can be used for static site generation (websites) next to other rendering patterns (i.e. ISR) too. The most recent addition to Next.js are React Server Components (RSC) and React Server Functions (RSF) which contribute since 2023 to a big paradigm shift by moving React components from the client to the server.\n\\u867D\\u7136 Next.js \\u6700\\u521D\\u7528\\u4E8E\\u670D\\u52A1\\u5668\\u7AEF\\u6E32\\u67D3\\uFF08Web \\u5E94\\u7528\\u7A0B\\u5E8F\\uFF09\\uFF0C\\u4F46\\u5B83\\u4E5F\\u53EF\\u4EE5\\u4E0E\\u5176\\u4ED6\\u6E32\\u67D3\\u6A21\\u5F0F\\uFF08\\u4F8B\\u5982 ISR\\uFF09\\u4E00\\u8D77\\u7528\\u4E8E\\u9759\\u6001\\u7AD9\\u70B9\\u751F\\u6210\\uFF08\\u7F51\\u7AD9\\uFF09\\u3002Next.js \\u7684\\u6700\\u65B0\\u6210\\u5458\\u662F React \\u670D\\u52A1\\u5668\\u7EC4\\u4EF6 (RSC) \\u548C React \\u670D\\u52A1\\u5668\\u51FD\\u6570 (RSF)\\uFF0C\\u5B83\\u4EEC\\u81EA 2023 \\u5E74\\u4EE5\\u6765\\u901A\\u8FC7\\u5C06 React \\u7EC4\\u4EF6\\u4ECE\\u5BA2\\u6237\\u7AEF\\u8FC1\\u79FB\\u5230\\u670D\\u52A1\\u5668\\uFF0C\\u4FC3\\u6210\\u4E86\\u91CD\\u5927\\u7684\\u8303\\u5F0F\\u8F6C\\u53D8\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Two alternatives to Next.js are TanStack Start (beta) and React Router (in transition from Remix) which do not support (yet) React Server Components.\nNext.js \\u7684\\u4E24\\u4E2A\\u66FF\\u4EE3\\u65B9\\u6848\\u662F TanStack Start\\uFF08\\u6D4B\\u8BD5\\u7248\\uFF09\\u548C React Router\\uFF08\\u4ECE Remix \\u8FC7\\u6E21\\u800C\\u6765\\uFF09\\uFF0C\\u5B83\\u4EEC\\u5C1A\\u4E0D\\u652F\\u6301 React \\u670D\\u52A1\\u5668\\u7EC4\\u4EF6\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If performance for static content is your priority, take a look at Astro. As a framework-agnostic tool, it works seamlessly with React while shipping only HTML and CSS to the browser, even when using React for components. JavaScript is loaded only when components require interactivity, ensuring optimal performance.\n\\u5982\\u679C\\u60A8\\u4F18\\u5148\\u8003\\u8651\\u9759\\u6001\\u5185\\u5BB9\\u7684\\u6027\\u80FD\\uFF0C\\u4E0D\\u59A8\\u8003\\u8651\\u4E00\\u4E0B Astro\\u3002Astro \\u662F\\u4E00\\u6B3E\\u4E0E\\u6846\\u67B6\\u65E0\\u5173\\u7684\\u5DE5\\u5177\\uFF0C\\u5B83\\u53EF\\u4EE5\\u4E0E React \\u65E0\\u7F1D\\u534F\\u4F5C\\uFF0C\\u5E76\\u4E14\\u53EA\\u9700\\u5C06 HTML \\u548C CSS \\u4F20\\u8F93\\u5230\\u6D4F\\u89C8\\u5668\\uFF0C\\u5373\\u4F7F\\u5728\\u4F7F\\u7528 React \\u6784\\u5EFA\\u7EC4\\u4EF6\\u65F6\\u4E5F\\u662F\\u5982\\u6B64\\u3002JavaScript \\u4EC5\\u5728\\u7EC4\\u4EF6\\u9700\\u8981\\u4EA4\\u4E92\\u65F6\\u52A0\\u8F7D\\uFF0C\\u4ECE\\u800C\\u786E\\u4FDD\\u6700\\u4F73\\u6027\\u80FD\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you just want to understand how tools like Vite work, try to set up a React project yourself. You will start with a bare bones HTML with JavaScript project and add React with its supportive tools (e.g. Webpack, Babel) yourself. It's not something you will have to deal with in your day to day work, especially since Vite became the successor of Webpack, but it's a great learning experience to get to know the underlying tooling.\n\\u5982\\u679C\\u4F60\\u53EA\\u662F\\u60F3\\u4E86\\u89E3 Vite \\u7B49\\u5DE5\\u5177\\u7684\\u5DE5\\u4F5C\\u539F\\u7406\\uFF0C\\u53EF\\u4EE5\\u5C1D\\u8BD5\\u81EA\\u5DF1\\u642D\\u5EFA\\u4E00\\u4E2A React \\u9879\\u76EE \\u3002\\u4F60\\u5C06\\u4ECE\\u4E00\\u4E2A\\u5305\\u542B JavaScript \\u7684\\u7B80\\u5355 HTML \\u9879\\u76EE\\u5F00\\u59CB\\uFF0C\\u7136\\u540E\\u81EA\\u884C\\u6DFB\\u52A0 React \\u53CA\\u5176\\u652F\\u6301\\u5DE5\\u5177\\uFF08\\u4F8B\\u5982 Webpack\\u3001Babel\\uFF09\\u3002\\u8FD9\\u5728\\u65E5\\u5E38\\u5DE5\\u4F5C\\u4E2D\\u5E76\\u4E0D\\u5E38\\u89C1\\uFF0C\\u5C24\\u5176\\u662F\\u5728 Vite \\u53D6\\u4EE3 Webpack \\u4E4B\\u540E\\uFF0C\\u4F46\\u4E86\\u89E3\\u5E95\\u5C42\\u5DE5\\u5177\\u4ECD\\u7136\\u662F\\u4E00\\u6B21\\u5F88\\u68D2\\u7684\\u5B66\\u4E60\\u7ECF\\u5386\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you are a React veteran and want to try something new, check out Nitro, Redwood, or Waku. The latter, created by the developer behind Zustand, also includes support for React Server Components (RSC).\n\\u5982\\u679C\\u4F60\\u662F React \\u8001\\u624B\\uFF0C\\u5E76\\u4E14\\u60F3\\u5C1D\\u8BD5\\u4E00\\u4E9B\\u65B0\\u4E1C\\u897F\\uFF0C\\u53EF\\u4EE5\\u770B\\u770B Nitro \\u3001 Redwood \\u6216 Waku \\u3002\\u540E\\u8005\\u7531 Zustand \\u7684\\u5F00\\u53D1\\u8005\\u521B\\u5EFA\\uFF0C\\u4E5F\\u652F\\u6301 React \\u670D\\u52A1\\u5668\\u7EC4\\u4EF6 (RSC)\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:\"Recommendations:  \\u5EFA\\u8BAE\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:`Vite for client-side rendered React applications\nVite \\u7528\\u4E8E\\u5BA2\\u6237\\u7AEF\\u6E32\\u67D3\\u7684 React \\u5E94\\u7528\\u7A0B\\u5E8F`}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:`Next server-side rendered React applications\n\\u4E0B\\u4E00\\u4E2A\\u670D\\u52A1\\u5668\\u7AEF\\u6E32\\u67D3\\u7684 React \\u5E94\\u7528\\u7A0B\\u5E8F`}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:`Astro for static-side generated React applications\nAstro \\u7528\\u4E8E\\u9759\\u6001\\u7AEF\\u751F\\u6210\\u7684 React \\u5E94\\u7528\\u7A0B\\u5E8F`}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Package-Manager-for-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Package Manager for React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"REACT \\u5305\\u7BA1\\u7406\\u5668\"})]}),`\n`,(0,e.jsx)(n.p,{children:`The most widely used package manager to install libraries (read: dependencies, node packages) in the JavaScript ecosystem (and therefore React) is npm, because it comes with every Node.js installation. However, yarn yarn and pnpm are great alternatives. Especially the latter comes with a greater performance boost.\n\\u5728 JavaScript \\u751F\\u6001\\u7CFB\\u7EDF\\uFF08\\u4EE5\\u53CA React\\uFF09\\u4E2D\\uFF0C\\u5B89\\u88C5\\u5E93\\uFF08\\u5373\\u4F9D\\u8D56\\u9879\\u3001Node \\u5305\\uFF09\\u6700\\u5E38\\u7528\\u7684\\u5305\\u7BA1\\u7406\\u5668\\u662F npm \\uFF0C\\u56E0\\u4E3A\\u5B83\\u968F\\u6BCF\\u4E2A Node.js \\u5B89\\u88C5\\u800C\\u6765\\u3002\\u7136\\u800C\\uFF0C yarn \\u548C pnpm \\u4E5F\\u662F\\u4E0D\\u9519\\u7684\\u9009\\u62E9\\u3002\\u5C24\\u5176\\u662F\\u540E\\u8005\\uFF0C\\u6027\\u80FD\\u63D0\\u5347\\u66F4\\u5927\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you happen to create multiple React applications which depend on each other or which share a common set of custom UI components, you may want to check out the concept of a monorepo. All previously mentioned package managers allow you to create monorepos by using their in-house workspaces feature, however, I had the best developer experience using yarn or pnpm. In combination with monorepo pipeline tools such as Turborepo, the monorepo experience becomes perfect.\n\\u5982\\u679C\\u60A8\\u78B0\\u5DE7\\u521B\\u5EFA\\u4E86\\u591A\\u4E2A\\u76F8\\u4E92\\u4F9D\\u8D56\\u6216\\u5171\\u4EAB\\u4E00\\u7EC4\\u81EA\\u5B9A\\u4E49 UI \\u7EC4\\u4EF6\\u7684 React \\u5E94\\u7528\\u7A0B\\u5E8F\\uFF0C\\u60A8\\u53EF\\u80FD\\u9700\\u8981\\u4E86\\u89E3\\u4E00\\u4E0B monorepo \\u7684\\u6982\\u5FF5\\u3002\\u6240\\u6709\\u524D\\u9762\\u63D0\\u5230\\u7684\\u5305\\u7BA1\\u7406\\u5668\\u90FD\\u5141\\u8BB8\\u60A8\\u4F7F\\u7528\\u5176\\u5185\\u90E8\\u5DE5\\u4F5C\\u533A\\u529F\\u80FD\\u521B\\u5EFA monorepo\\uFF0C\\u4F46\\u662F\\uFF0C\\u6211\\u4F7F\\u7528 yarn \\u6216 pnpm \\u83B7\\u5F97\\u4E86\\u6700\\u4F73\\u7684\\u5F00\\u53D1\\u4F53\\u9A8C\\u3002\\u7ED3\\u5408 Turborepo \\u7B49 monorepo \\u7BA1\\u9053\\u5DE5\\u5177\\uFF0Cmonorepo \\u4F53\\u9A8C\\u5C06\\u66F4\\u52A0\\u5B8C\\u7F8E\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:\"Recommendations:  \\u5EFA\\u8BAE\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`choose one package manager and stick to it\n\\u9009\\u62E9\\u4E00\\u4E2A\\u5305\\u7BA1\\u7406\\u5668\\u5E76\\u575A\\u6301\\u4F7F\\u7528\\u5B83`,`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`default and most widely used -> npm\n\\u9ED8\\u8BA4\\u4E14\\u6700\\u5E7F\\u6CDB\\u4F7F\\u7528\\u7684 -> npm`}),`\n`,(0,e.jsx)(n.li,{children:`increased performance but not as popular -> pnpm\n\\u6027\\u80FD\\u63D0\\u5347\\u4F46\\u4E0D\\u90A3\\u4E48\\u53D7\\u6B22\\u8FCE -> pnpm`}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.li,{children:`if a monorepo is needed, check out Turborepo (see tutorial)\n\\u5982\\u679C\\u9700\\u8981 monorepo\\uFF0C\\u8BF7\\u67E5\\u770B Turborepo\\uFF08\\u53C2\\u89C1\\u6559\\u7A0B\\uFF09`}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-State-Management\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React State Management\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React\\u72B6\\u6001\\u7BA1\\u7406\"})]}),`\n`,(0,e.jsx)(n.p,{children:`React provides two built-in hooks for managing local state: useState and useReducer. For global state management, the built-in useContext hook allows you to pass data from top-level components to deeper components without relying on props, effectively preventing prop drilling.\nReact \\u63D0\\u4F9B\\u4E86\\u4E24\\u4E2A\\u5185\\u7F6E\\u94A9\\u5B50\\u6765\\u7BA1\\u7406\\u672C\\u5730\\u72B6\\u6001\\uFF1A useState \\u548C useReducer \\u3002\\u5BF9\\u4E8E\\u5168\\u5C40\\u72B6\\u6001\\u7BA1\\u7406\\uFF0C\\u5185\\u7F6E\\u7684 useContext \\u94A9\\u5B50\\u5141\\u8BB8\\u4F60\\u5C06\\u6570\\u636E\\u4ECE\\u9876\\u7EA7\\u7EC4\\u4EF6\\u4F20\\u9012\\u5230\\u66F4\\u6DF1\\u5C42\\u7684\\u7EC4\\u4EF6\\uFF0C\\u800C\\u65E0\\u9700\\u4F9D\\u8D56 props \\uFF0C\\u4ECE\\u800C\\u6709\\u6548\\u5730\\u9632\\u6B62 prop \\u94BB\\u53D6\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`All three React hooks enable developers to implement powerful state management in React which is either co-located in components by using React's useState/useReducer Hooks or globally managed by combining them with React's useContext Hook.\n\\u6240\\u6709\\u8FD9\\u4E09\\u4E2A React hooks \\u90FD\\u4F7F\\u5F00\\u53D1\\u4EBA\\u5458\\u80FD\\u591F\\u5728 React \\u4E2D\\u5B9E\\u73B0\\u5F3A\\u5927\\u7684\\u72B6\\u6001\\u7BA1\\u7406\\uFF0C\\u8FD9\\u4E9B\\u72B6\\u6001\\u7BA1\\u7406\\u8981\\u4E48\\u901A\\u8FC7\\u4F7F\\u7528 React \\u7684 useState/useReducer Hooks \\u4F4D\\u4E8E\\u7EC4\\u4EF6\\u4E2D\\uFF0C\\u8981\\u4E48\\u901A\\u8FC7\\u5C06\\u5B83\\u4EEC\\u4E0E React \\u7684 useContext Hook \\u7ED3\\u5408\\u8FDB\\u884C\\u5168\\u5C40\\u7BA1\\u7406\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you find yourself using React's Context too often for shared/global state, you should definitely check out Zustand. It allows you to manage global application state which can be read and modified by any React component that is connected to its store(s).\n\\u5982\\u679C\\u4F60\\u53D1\\u73B0\\u81EA\\u5DF1\\u8FC7\\u4E8E\\u9891\\u7E41\\u5730\\u4F7F\\u7528 React \\u7684 Context \\u6765\\u5904\\u7406\\u5171\\u4EAB/\\u5168\\u5C40\\u72B6\\u6001\\uFF0C\\u90A3\\u4E48\\u4F60\\u4E00\\u5B9A\\u8981\\u770B\\u770B Zustand \\u3002\\u5B83\\u5141\\u8BB8\\u4F60\\u7BA1\\u7406\\u5168\\u5C40\\u5E94\\u7528\\u7A0B\\u5E8F\\u72B6\\u6001\\uFF0C\\u8FD9\\u4E9B\\u72B6\\u6001\\u53EF\\u4EE5\\u88AB\\u8FDE\\u63A5\\u5230\\u5176 store \\u7684\\u4EFB\\u4F55 React \\u7EC4\\u4EF6\\u8BFB\\u53D6\\u548C\\u4FEE\\u6539\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`While Zustand is becoming the de facto standard in the React community, many projects still use Redux. Personally, I haven't used Redux in my recent freelance work over the past few years, as I prefer Zustand for its simplicity. However, you'll encounter plenty of older React applications built with Redux.\n\\u867D\\u7136 Zustand \\u6B63\\u5728\\u6210\\u4E3A React \\u793E\\u533A\\u7684\\u4E8B\\u5B9E\\u6807\\u51C6\\uFF0C\\u4F46\\u8BB8\\u591A\\u9879\\u76EE\\u4ECD\\u5728\\u4F7F\\u7528 Redux\\u3002\\u5C31\\u6211\\u4E2A\\u4EBA\\u800C\\u8A00\\uFF0C\\u8FC7\\u53BB\\u51E0\\u5E74\\u5728\\u4ECE\\u4E8B\\u81EA\\u7531\\u804C\\u4E1A\\u65F6\\uFF0C\\u6211\\u5F88\\u5C11\\u4F7F\\u7528 Redux\\uFF0C\\u56E0\\u4E3A\\u6211\\u66F4\\u559C\\u6B22 Zustand \\u7684\\u7B80\\u6D01\\u6027\\u3002\\u4E0D\\u8FC7\\uFF0C\\u4F60\\u8FD8\\u662F\\u4F1A\\u9047\\u5230\\u5F88\\u591A\\u4F7F\\u7528 Redux \\u6784\\u5EFA\\u7684\\u65E7\\u7248 React \\u5E94\\u7528\\u7A0B\\u5E8F\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you happen to use Redux, you should definitely check out Redux Toolkit as well. If you are into state machines, check out XState or Zag. As alternatives, if you need a global store but do not like Zustand or Redux, check other popular local state management solutions like Mobx, Jotai, or Nano Stores.\n\\u5982\\u679C\\u4F60\\u6070\\u597D\\u4F7F\\u7528 Redux\\uFF0C\\u90A3\\u4E48\\u4F60\\u4E5F\\u5E94\\u8BE5\\u4E86\\u89E3\\u4E00\\u4E0B Redux Toolkit \\u3002\\u5982\\u679C\\u4F60\\u559C\\u6B22\\u72B6\\u6001\\u673A\\uFF0C\\u53EF\\u4EE5\\u770B\\u770B XState \\u6216 Zag \\u3002\\u6B64\\u5916\\uFF0C\\u5982\\u679C\\u4F60\\u9700\\u8981\\u4E00\\u4E2A\\u5168\\u5C40 store\\uFF0C\\u4F46\\u4E0D\\u559C\\u6B22 Zustand \\u6216 Redux\\uFF0C\\u53EF\\u4EE5\\u770B\\u770B\\u5176\\u4ED6\\u6D41\\u884C\\u7684\\u672C\\u5730\\u72B6\\u6001\\u7BA1\\u7406\\u89E3\\u51B3\\u65B9\\u6848\\uFF0C\\u4F8B\\u5982 Mobx \\u3001 Jotai \\u6216 Nano Stores \\u3002`}),`\n`,(0,e.jsx)(n.p,{children:\"Recommendations:  \\u5EFA\\u8BAE\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`useState/useReducer for co-located or shared state (see tutorial)\nuseState/useReducer \\u7528\\u4E8E\\u5171\\u7F6E\\u6216\\u5171\\u4EAB\\u72B6\\u6001\\uFF08\\u53C2\\u89C1\\u6559\\u7A0B\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`opt-in useContext for enabling little global state (see tutorial)\n\\u9009\\u62E9\\u4F7F\\u7528 useContext \\u6765\\u542F\\u7528\\u5C0F\\u5168\\u5C40\\u72B6\\u6001\\uFF08\\u53C2\\u89C1\\u6559\\u7A0B\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`Zustand (or an alternative) for lots of global state\nZustand\\uFF08\\u6216\\u66FF\\u4EE3\\u65B9\\u6848\\uFF09\\u7528\\u4E8E\\u8BB8\\u591A\\u5168\\u5C40\\u72B6\\u6001`}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-Data-Fetching\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React Data Fetching\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React\\u6570\\u636E\\u83B7\\u53D6\"})]}),`\n`,(0,e.jsx)(n.p,{children:`React's built-in hooks are great for UI state, but when it comes to state management (read: caching) for remote data (and therefore data fetching), I would recommend using a dedicated data fetching library such as TanStack Query (formerly React Query).\nReact \\u7684\\u5185\\u7F6E\\u94A9\\u5B50\\u975E\\u5E38\\u9002\\u5408 UI \\u72B6\\u6001\\uFF0C\\u4F46\\u662F\\u5F53\\u6D89\\u53CA\\u5230\\u8FDC\\u7A0B\\u6570\\u636E\\uFF08\\u4EE5\\u53CA\\u6570\\u636E\\u63D0\\u53D6\\uFF09\\u7684\\u72B6\\u6001\\u7BA1\\u7406\\uFF08\\u8BFB\\u53D6\\uFF1A\\u7F13\\u5B58\\uFF09\\u65F6\\uFF0C\\u6211\\u5EFA\\u8BAE\\u4F7F\\u7528\\u4E13\\u7528\\u7684\\u6570\\u636E\\u63D0\\u53D6\\u5E93\\uFF0C\\u4F8B\\u5982 TanStack Query \\uFF08\\u4EE5\\u524D\\u79F0\\u4E3A React Query\\uFF09\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`While TanStack Query itself is not seen as a state management library, because it is primarily used to fetch your remote data from APIs, it takes care of all the state management (e.g. caching, optimistic updates) of this remote data for you.\n\\u867D\\u7136 TanStack Query \\u672C\\u8EAB\\u5E76\\u4E0D\\u88AB\\u89C6\\u4E3A\\u72B6\\u6001\\u7BA1\\u7406\\u5E93\\uFF0C\\u56E0\\u4E3A\\u5B83\\u4E3B\\u8981\\u7528\\u4E8E\\u4ECE API \\u83B7\\u53D6\\u8FDC\\u7A0B\\u6570\\u636E\\uFF0C\\u4F46\\u5B83\\u4F1A\\u4E3A\\u60A8\\u5904\\u7406\\u8FD9\\u4E9B\\u8FDC\\u7A0B\\u6570\\u636E\\u7684\\u6240\\u6709\\u72B6\\u6001\\u7BA1\\u7406\\uFF08\\u4F8B\\u5982\\u7F13\\u5B58\\u3001\\u4E50\\u89C2\\u66F4\\u65B0\\uFF09\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`TanStack Query was designed for consuming REST APIs. However, these days it supports GraphQL too. However, if you are looking for a more dedicated GraphQL library for your React frontend, check out either Apollo Client (popular), urql (lightweight), or Relay (by Facebook).\nTanStack Query \\u6700\\u521D\\u8BBE\\u8BA1\\u7528\\u4E8E\\u5904\\u7406 REST API \\u3002\\u4E0D\\u8FC7\\uFF0C\\u73B0\\u5728\\u5B83\\u4E5F\\u652F\\u6301 GraphQL \\u3002\\u5982\\u679C\\u60A8\\u6B63\\u5728\\u4E3A React \\u524D\\u7AEF\\u5BFB\\u627E\\u66F4\\u4E13\\u7528\\u7684 GraphQL \\u5E93\\uFF0C\\u53EF\\u4EE5\\u8003\\u8651 Apollo Client \\uFF08\\u6BD4\\u8F83\\u6D41\\u884C\\uFF09\\u3001 urql \\uFF08\\u8F7B\\u91CF\\u7EA7\\uFF09\\u6216 Relay \\uFF08\\u7531 Facebook \\u5F00\\u53D1\\uFF09\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you are already using Redux and want to add data fetching with integrated state management in Redux, instead of adding TanStack Query, you may want to check out RTK Query which integrates data fetching neatly into Redux.\n\\u5982\\u679C\\u60A8\\u5DF2\\u7ECF\\u5728\\u4F7F\\u7528 Redux\\uFF0C\\u5E76\\u4E14\\u60F3\\u8981\\u5728 Redux \\u4E2D\\u6DFB\\u52A0\\u5E26\\u6709\\u96C6\\u6210\\u72B6\\u6001\\u7BA1\\u7406\\u7684\\u6570\\u636E\\u83B7\\u53D6\\u529F\\u80FD\\uFF0C\\u800C\\u4E0D\\u662F\\u6DFB\\u52A0 TanStack Query\\uFF0C\\u90A3\\u4E48\\u60A8\\u53EF\\u80FD\\u9700\\u8981\\u67E5\\u770B\\u5C06\\u6570\\u636E\\u83B7\\u53D6\\u529F\\u80FD\\u5DE7\\u5999\\u5730\\u96C6\\u6210\\u5230 Redux \\u4E2D\\u7684 RTK Query \\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you control the frontend and the backend (both TypeScript), check out tRPC for end-to-end type safe APIs. It is a tremendous productivity boost and DX. You can also combine it with TanStack Query for all the niceties regarding data fetching while still being able to call your backend from your frontend by using typed functions.\n\\u5982\\u679C\\u60A8\\u63A7\\u5236\\u7740\\u524D\\u7AEF\\u548C\\u540E\\u7AEF\\uFF08\\u5747\\u4F7F\\u7528 TypeScript\\uFF09\\uFF0C\\u4E0D\\u59A8\\u5C1D\\u8BD5\\u4E00\\u4E0B tRPC \\uFF0C\\u5B83\\u63D0\\u4F9B\\u4E86\\u7AEF\\u5230\\u7AEF\\u7C7B\\u578B\\u5B89\\u5168\\u7684 API\\u3002\\u5B83\\u80FD\\u591F\\u6781\\u5927\\u5730\\u63D0\\u5347\\u751F\\u4EA7\\u529B\\u548C\\u7528\\u6237\\u4F53\\u9A8C\\u3002\\u60A8\\u8FD8\\u53EF\\u4EE5\\u5C06\\u5B83\\u4E0E TanStack Query \\u7ED3\\u5408\\u4F7F\\u7528\\uFF0C\\u4EE5\\u83B7\\u5F97\\u6240\\u6709\\u4E0E\\u6570\\u636E\\u83B7\\u53D6\\u76F8\\u5173\\u7684\\u7EC6\\u8282\\uFF0C\\u540C\\u65F6\\u4ECD\\u7136\\u80FD\\u591F\\u901A\\u8FC7\\u4F7F\\u7528\\u7C7B\\u578B\\u5316\\u51FD\\u6570\\u4ECE\\u524D\\u7AEF\\u8C03\\u7528\\u540E\\u7AEF\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Last but not least, if you have a (meta) framework which supports React Server Components/Server Functions (RSC/RSF) (i.e. Next.js), you may want to use them instead for data fetching. They allow you to fetch data on the server and pass it down to the client. This way you can avoid the need for a client-side data fetching library.\n\\u6700\\u540E\\u4F46\\u540C\\u6837\\u91CD\\u8981\\u7684\\u4E00\\u70B9\\u662F\\uFF0C\\u5982\\u679C\\u4F60\\u6709\\u4E00\\u4E2A\\u652F\\u6301 React \\u670D\\u52A1\\u5668\\u7EC4\\u4EF6/\\u670D\\u52A1\\u5668\\u51FD\\u6570 (RSC/RSF) \\u7684\\uFF08\\u5143\\uFF09\\u6846\\u67B6\\uFF08\\u4F8B\\u5982 Next.js\\uFF09\\uFF0C\\u4F60\\u53EF\\u80FD\\u60F3\\u4F7F\\u7528\\u5B83\\u4EEC\\u6765\\u83B7\\u53D6\\u6570\\u636E\\u3002\\u5B83\\u4EEC\\u5141\\u8BB8\\u4F60\\u5728\\u670D\\u52A1\\u5668\\u4E0A\\u83B7\\u53D6\\u6570\\u636E\\u5E76\\u5C06\\u5176\\u4F20\\u9012\\u7ED9\\u5BA2\\u6237\\u7AEF\\u3002\\u8FD9\\u6837\\uFF0C\\u4F60\\u5C31\\u4E0D\\u9700\\u8981\\u5BA2\\u6237\\u7AEF\\u6570\\u636E\\u83B7\\u53D6\\u5E93\\u4E86\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:\"Recommendations:  \\u5EFA\\u8BAE\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`server-side data fetching\n\\u670D\\u52A1\\u5668\\u7AEF\\u6570\\u636E\\u83B7\\u53D6`,`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`React Server Components/Functions (if supported by (meta) framework)\nReact \\u670D\\u52A1\\u5668\\u7EC4\\u4EF6/\\u529F\\u80FD\\uFF08\\u5982\\u679C\\u53D7\\uFF08\\u5143\\uFF09\\u6846\\u67B6\\u652F\\u6301\\uFF09`}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`client-side data fetching\n\\u5BA2\\u6237\\u7AEF\\u6570\\u636E\\u83B7\\u53D6`,`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`TanStack Query (REST APIs or GraphQL APIs)\nTanStack \\u67E5\\u8BE2\\uFF08REST API \\u6216 GraphQL API\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`combined with axios or fetch\n\\u4E0E axios \\u6216 fetch \\u7ED3\\u5408`}),`\n`,(0,e.jsx)(n.li,{children:`Apollo Client (GraphQL APIs)\nApollo \\u5BA2\\u6237\\u7AEF\\uFF08GraphQL API\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`for a more sophisticated GraphQL experience\n\\u83B7\\u5F97\\u66F4\\u590D\\u6742\\u7684 GraphQL \\u4F53\\u9A8C`}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.li,{children:`tRPC for tightly coupled client-server architectures\ntRPC \\u7528\\u4E8E\\u7D27\\u5BC6\\u8026\\u5408\\u7684\\u5BA2\\u6237\\u7AEF-\\u670D\\u52A1\\u5668\\u67B6\\u6784`}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Routing-with-React-Router\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Routing with React Router\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"\\u4F7F\\u7528 React Router \\u8FDB\\u884C\\u8DEF\\u7531\"})]}),`\n`,(0,e.jsx)(n.p,{children:`If you are using a React framework like Next.js, routing is already taken care of for you. However, if you are using React without a framework and only for client-side rendering (e.g. Vite without SSR), the most popular routing library out there is React Router.\n\\u5982\\u679C\\u60A8\\u4F7F\\u7528\\u7684\\u662F\\u50CF Next.js \\u8FD9\\u6837\\u7684 React \\u6846\\u67B6\\uFF0C\\u90A3\\u4E48\\u8DEF\\u7531\\u5DF2\\u7ECF\\u4E3A\\u60A8\\u5904\\u7406\\u597D\\u4E86\\u3002\\u4F46\\u662F\\uFF0C\\u5982\\u679C\\u60A8\\u4E0D\\u4F7F\\u7528\\u6846\\u67B6\\u800C\\u53EA\\u4F7F\\u7528 React \\u8FDB\\u884C\\u5BA2\\u6237\\u7AEF\\u6E32\\u67D3\\uFF08\\u4F8B\\u5982\\uFF0C\\u4E0D\\u5E26 SSR \\u7684 Vite\\uFF09\\uFF0C\\u90A3\\u4E48\\u6700\\u6D41\\u884C\\u7684\\u8DEF\\u7531\\u5E93\\u662F React Router \\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`However, this year may be the year of TanStack Router which is a new routing library for React. It is a great alternative to React Router, especially if you are using TypeScript in your React project. Although it is still in beta, anyone familiar with TanStack knows it will be excellent.\n\\u7136\\u800C\\uFF0C\\u4ECA\\u5E74\\u53EF\\u80FD\\u662F TanStack Router \\u7684\\u5143\\u5E74\\uFF0C\\u5B83\\u662F React \\u7684\\u4E00\\u4E2A\\u65B0\\u8DEF\\u7531\\u5E93\\u3002\\u5B83\\u662F React Router \\u7684\\u7EDD\\u4F73\\u66FF\\u4EE3\\u54C1\\uFF0C\\u5C24\\u5176\\u662F\\u5728 React \\u9879\\u76EE\\u4E2D\\u4F7F\\u7528 TypeScript \\u7684\\u60C5\\u51B5\\u4E0B\\u3002\\u867D\\u7136\\u5B83\\u4ECD\\u5904\\u4E8E\\u6D4B\\u8BD5\\u9636\\u6BB5\\uFF0C\\u4F46\\u719F\\u6089 TanStack \\u7684\\u4EBA\\u90FD\\u77E5\\u9053\\u5B83\\u4F1A\\u975E\\u5E38\\u51FA\\u8272\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Both React Router and TanStack Router (with TanStack Start) are working on React Server Components (RSC) support. This means that you can execute components on the server for different use cases (e.g. smaller bundle size, server-side data fetching).\nReact Router \\u548C TanStack Router\\uFF08\\u4EE5\\u53CA TanStack Start\\uFF09\\u5747\\u652F\\u6301 React \\u670D\\u52A1\\u5668\\u7EC4\\u4EF6 (RSC)\\u3002\\u8FD9\\u610F\\u5473\\u7740\\u60A8\\u53EF\\u4EE5\\u9488\\u5BF9\\u4E0D\\u540C\\u7684\\u7528\\u4F8B\\uFF08\\u4F8B\\u5982\\uFF0C\\u66F4\\u5C0F\\u7684\\u5305\\u5927\\u5C0F\\u3001\\u670D\\u52A1\\u5668\\u7AEF\\u6570\\u636E\\u83B7\\u53D6\\uFF09\\u5728\\u670D\\u52A1\\u5668\\u4E0A\\u6267\\u884C\\u7EC4\\u4EF6\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Before you introduce a router in your React project, when you are just about to learn React, you can give React's conditional rendering a shot first. It is not a replacement for routing, but gives you a glimpse on how replacing components on a page level works.\n\\u5728 React \\u9879\\u76EE\\u4E2D\\u5F15\\u5165\\u8DEF\\u7531\\u5668\\u4E4B\\u524D\\uFF0C\\u5982\\u679C\\u4F60\\u521A\\u5F00\\u59CB\\u5B66\\u4E60 React\\uFF0C\\u53EF\\u4EE5\\u5148\\u5C1D\\u8BD5\\u4E00\\u4E0B React \\u7684\\u6761\\u4EF6\\u6E32\\u67D3 \\u3002\\u5B83\\u5E76\\u975E\\u8DEF\\u7531\\u7684\\u66FF\\u4EE3\\u54C1\\uFF0C\\u53EA\\u662F\\u8BA9\\u4F60\\u5927\\u81F4\\u4E86\\u89E3\\u4E00\\u4E0B\\u5982\\u4F55\\u5728\\u9875\\u9762\\u7EA7\\u522B\\u66FF\\u6362\\u7EC4\\u4EF6\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:\"Recommendations:  \\u5EFA\\u8BAE\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`server-side routing: Next.js\n\\u670D\\u52A1\\u5668\\u7AEF\\u8DEF\\u7531\\uFF1ANext.js`}),`\n`,(0,e.jsxs)(n.li,{children:[\"client-side routing:  \\u5BA2\\u6237\\u7AEF\\u8DEF\\u7531\\uFF1A\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"most used: React Router  \\u6700\\u5E38\\u7528\\uFF1AReact Router\"}),`\n`,(0,e.jsx)(n.li,{children:`trending: TanStack Router\n\\u8D8B\\u52BF\\uFF1ATanStack \\u8DEF\\u7531\\u5668`}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"CSS-Styling-in-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"CSS Styling in React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u4E2D\\u7684 CSS \\u6837\\u5F0F\"})]}),`\n`,(0,e.jsx)(n.p,{children:`There are many options and even more opinions about styling/CSS in React out there, so putting everything in one section here does not suffice. If you want to get deeper into this topic and get to know all the options, check out the following guide.\n\\u5173\\u4E8E React \\u4E2D\\u7684\\u6837\\u5F0F/CSS\\uFF0C\\u5E02\\u9762\\u4E0A\\u6709\\u5F88\\u591A\\u9009\\u9879\\uFF0C\\u751A\\u81F3\\u8FD8\\u6709\\u66F4\\u591A\\u4E0D\\u540C\\u7684\\u610F\\u89C1\\uFF0C\\u56E0\\u6B64\\u5C06\\u6240\\u6709\\u5185\\u5BB9\\u653E\\u5728\\u4E00\\u4E2A\\u7AE0\\u8282\\u4E2D\\u662F\\u4E0D\\u591F\\u7684\\u3002\\u5982\\u679C\\u60A8\\u60F3\\u6DF1\\u5165\\u4E86\\u89E3\\u8FD9\\u4E2A\\u4E3B\\u9898\\u5E76\\u4E86\\u89E3\\u6240\\u6709\\u9009\\u9879\\uFF0C\\u8BF7\\u67E5\\u770B\\u4EE5\\u4E0B\\u6307\\u5357\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`As a React beginner, it is okay to start with inline styles and bare bones CSS by using a style object in JSX. It should be rarely used for actual applications though:\n\\u4F5C\\u4E3A React \\u521D\\u5B66\\u8005\\uFF0C\\u53EF\\u4EE5\\u901A\\u8FC7\\u5728 JSX \\u4E2D\\u4F7F\\u7528\\u6837\\u5F0F\\u5BF9\\u8C61\\u6765\\u5F00\\u59CB\\u4F7F\\u7528\\u5185\\u8054\\u6837\\u5F0F\\u548C\\u57FA\\u672C CSS\\u3002\\u4E0D\\u8FC7\\uFF0C\\u5728\\u5B9E\\u9645\\u5E94\\u7528\\u4E2D\\uFF0C\\u8FD9\\u79CD\\u65B9\\u6CD5\\u5E94\\u8BE5\\u5F88\\u5C11\\u4F7F\\u7528\\uFF1A`}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-tsx\",children:`const Headline = ({ title }) =>\n  <h1 style={{ color: 'blue' }}>\n    {title}\n  </h1>\n`})}),`\n`,(0,e.jsx)(n.p,{children:`Whereas inline style can be used to add style dynamically with JavaScript in React's JSX, an external CSS file could hold all the remaining style for your React application:\n\\u867D\\u7136\\u53EF\\u4EE5\\u4F7F\\u7528\\u5185\\u8054\\u6837\\u5F0F\\u5728 React \\u7684 JSX \\u4E2D\\u4F7F\\u7528 JavaScript \\u52A8\\u6001\\u6DFB\\u52A0\\u6837\\u5F0F\\uFF0C\\u4F46\\u5916\\u90E8 CSS \\u6587\\u4EF6\\u53EF\\u4EE5\\u4FDD\\u5B58 React \\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u6240\\u6709\\u5269\\u4F59\\u6837\\u5F0F\\uFF1A`}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-tsx\",children:`import './Headline.css';\n\nconst Headline = ({ title }) =>\n  <h1 className=\"headline\" style={{ color: 'blue' }}>\n    {title}\n  </h1>\n`})}),`\n`,(0,e.jsx)(n.p,{children:`Once your application grows in size, there are other styling approaches to check out. One last hint before we continue: If you want to apply a className conditionally in React, use a utility library like clsx.\n\\u5F53\\u4F60\\u7684\\u5E94\\u7528\\u7A0B\\u5E8F\\u89C4\\u6A21\\u6269\\u5927\\u65F6\\uFF0C\\u8FD8\\u6709\\u5176\\u4ED6\\u6837\\u5F0F\\u65B9\\u6CD5\\u53EF\\u4EE5\\u5C1D\\u8BD5\\u3002\\u7EE7\\u7EED\\u4E4B\\u524D\\u7684\\u6700\\u540E\\u4E00\\u70B9\\u63D0\\u793A\\uFF1A\\u5982\\u679C\\u4F60\\u60F3\\u5728 React \\u4E2D\\u6709\\u6761\\u4EF6\\u5730\\u5E94\\u7528 className\\uFF0C\\u53EF\\u4EE5\\u4F7F\\u7528\\u50CF clsx \\u8FD9\\u6837\\u7684\\u5B9E\\u7528\\u7A0B\\u5E8F\\u5E93\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`First, I want to recommend Tailwind CSS as the most popular Utility-First-CSS solution. It comes with pre-defined CSS classes. This makes you more efficient as a developer and streamlines the design system of your React application, but comes with the tradeoff of getting to know all the classes and verbose inlining of many CSS classes:\n\\u9996\\u5148\\uFF0C\\u6211\\u60F3\\u63A8\\u8350 Tailwind CSS \\uFF0C\\u5B83\\u662F\\u6700\\u53D7\\u6B22\\u8FCE\\u7684 \\u201C\\u5B9E\\u7528\\u4F18\\u5148\\u201DCSS \\u89E3\\u51B3\\u65B9\\u6848\\u3002\\u5B83\\u81EA\\u5E26\\u9884\\u5B9A\\u4E49\\u7684 CSS \\u7C7B\\u3002\\u8FD9\\u53EF\\u4EE5\\u63D0\\u9AD8\\u5F00\\u53D1\\u8005\\u7684\\u6548\\u7387\\uFF0C\\u5E76\\u7B80\\u5316 React \\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u8BBE\\u8BA1\\u7CFB\\u7EDF\\uFF0C\\u4F46\\u540C\\u65F6\\u4E5F\\u9700\\u8981\\u4F60\\u4E86\\u89E3\\u6240\\u6709 CSS \\u7C7B\\uFF0C\\u5E76\\u4E14\\u9700\\u8981\\u5BF9\\u8BB8\\u591A CSS \\u7C7B\\u8FDB\\u884C\\u5197\\u957F\\u7684\\u5185\\u8054\\uFF1A`}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-tsx\",children:`const Headline = ({ title }) =>\n  <h1 className=\"text-blue-700\">\n    {title}\n  </h1>\n`})}),`\n`,(0,e.jsx)(n.p,{children:`Second, I would recommend you to have a look into CSS Modules as one of many CSS-in-CSS solutions. CSS Modules give you a way to encapsulate your CSS into component co-located modules. This way, styles don't leak accidentally into other components:\n\\u5176\\u6B21\\uFF0C\\u6211\\u63A8\\u8350\\u4F60\\u4E86\\u89E3\\u4E00\\u4E0B CSS \\u6A21\\u5757\\uFF0C\\u5B83\\u662F\\u4F17\\u591A CSS-in-CSS \\u89E3\\u51B3\\u65B9\\u6848\\u4E4B\\u4E00\\u3002CSS \\u6A21\\u5757\\u63D0\\u4F9B\\u4E86\\u4E00\\u79CD\\u5C06 CSS \\u5C01\\u88C5\\u5230\\u7EC4\\u4EF6\\u4E2D\\u7684\\u65B9\\u6CD5\\u3002\\u8FD9\\u6837\\uFF0C\\u6837\\u5F0F\\u5C31\\u4E0D\\u4F1A\\u610F\\u5916\\u6CC4\\u6F0F\\u5230\\u5176\\u4ED6\\u7EC4\\u4EF6\\u4E2D\\uFF1A`}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-tsx\",children:`import styles from './style.module.css';\n\nconst Headline = ({ title }) =>\n  <h1 className={styles.headline}>\n    {title}\n  </h1>\n`})}),`\n`,(0,e.jsx)(n.p,{children:`And third, I want to show (not recommend anymore) you Styled Components as one of many CSS-in-JS solutions for React. This approach is brought to you by a library called styled-components (or alternatives such as emotion) which co-locates styling created with JavaScript next to your React components in the same file or a co-located file:\n\\u7B2C\\u4E09\\uFF0C\\u6211\\u60F3\\u5411\\u4F60\\u5C55\\u793A\\uFF08\\u4E0D\\u518D\\u63A8\\u8350\\uFF09\\u6837\\u5F0F\\u5316\\u7EC4\\u4EF6 (Styled Components)\\uFF0C\\u5B83\\u662F\\u4F17\\u591A React CSS-in-JS \\u89E3\\u51B3\\u65B9\\u6848\\u4E4B\\u4E00\\u3002\\u8FD9\\u79CD\\u65B9\\u6CD5\\u7531\\u4E00\\u4E2A\\u540D\\u4E3A styled-components \\u7684\\u5E93\\uFF08\\u6216\\u5176\\u4ED6\\u7C7B\\u4F3C\\u5E93\\uFF0C\\u4F8B\\u5982 emotion \\uFF09\\u63D0\\u4F9B\\uFF0C\\u5B83\\u5C06\\u7528 JavaScript \\u521B\\u5EFA\\u7684\\u6837\\u5F0F\\u4E0E\\u4F60\\u7684 React \\u7EC4\\u4EF6\\u653E\\u5728\\u540C\\u4E00\\u4E2A\\u6587\\u4EF6\\u6216\\u5171\\u7F6E\\u6587\\u4EF6\\u4E2D\\uFF1A`}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-tsx\",children:`import styled from 'styled-components';\n\nconst BlueHeadline = styled.h1\\`\n  color: blue;\n\\`;\n\nconst Headline = ({ title }) =>\n  <BlueHeadline>\n    {title}\n  </BlueHeadline>\n`})}),`\n`,(0,e.jsx)(n.p,{children:`Whether you choose CSS-in-CSS or Utility-First-CSS is up to you. The trend goes towards Utility-First-CSS with Tailwind CSS as the industry standard. CSS-in-JS solutions are not as popular anymore because of their performance and hydration problems with server-side environments, even though newer solutions (but not as popular as Styled Components or Emotion) are solving these problems.\n\\u9009\\u62E9 CSS-in-CSS \\u8FD8\\u662F Utility-First-CSS \\u53D6\\u51B3\\u4E8E\\u60A8\\u81EA\\u5DF1\\u3002\\u76EE\\u524D\\u8D8B\\u52BF\\u662F Utility-First-CSS\\uFF0C\\u800C Tailwind CSS \\u5DF2\\u6210\\u4E3A\\u884C\\u4E1A\\u6807\\u51C6\\u3002CSS-in-JS \\u89E3\\u51B3\\u65B9\\u6848\\u7531\\u4E8E\\u5176\\u5728\\u670D\\u52A1\\u5668\\u7AEF\\u73AF\\u5883\\u4E2D\\u7684\\u6027\\u80FD\\u548C\\u6570\\u636E\\u8FC1\\u79FB\\u95EE\\u9898\\u800C\\u4E0D\\u518D\\u6D41\\u884C\\uFF0C\\u5C3D\\u7BA1\\u8F83\\u65B0\\u7684\\u89E3\\u51B3\\u65B9\\u6848\\uFF08\\u4F46\\u4E0D\\u5982 Styled Components \\u6216 Emotion \\u6D41\\u884C\\uFF09\\u6B63\\u5728\\u89E3\\u51B3\\u8FD9\\u4E9B\\u95EE\\u9898\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Other libraries to check out: PandaCSS, linaria, vanilla-extract, nanocss, UnoCSS, and Styled JSX.\n\\u5176\\u4ED6\\u503C\\u5F97\\u4E00\\u8BD5\\u7684\\u5E93\\u6709\\uFF1A PandaCSS \\u3001 linaria \\u3001 vanilla-extract \\u3001 nanocss \\u3001 UnoCSS \\u548C Styled JSX \\u3002`}),`\n`,(0,e.jsx)(n.p,{children:\"Recommendations:  \\u5EFA\\u8BAE\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`Utility-First-CSS (most popular)\nUtility-First-CSS\\uFF08\\u6700\\u6D41\\u884C\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:\"e.g. Tailwind CSS  \\u4F8B\\u5982 Tailwind CSS\"}),`\n`,(0,e.jsx)(n.li,{children:\"CSS-in-CSS  CSS \\u4E2D\\u7684 CSS\"}),`\n`,(0,e.jsx)(n.li,{children:\"e.g. CSS Modules  \\u4F8B\\u5982 CSS \\u6A21\\u5757\"}),`\n`,(0,e.jsx)(n.li,{children:\"CSS-in-JS\"}),`\n`,(0,e.jsx)(n.li,{children:`e.g. StyleX by Facebook (compiles to utility-first CSS)\n\\u4F8B\\u5982 Facebook \\u7684 StyleX \\uFF08\\u7F16\\u8BD1\\u4E3A\\u5B9E\\u7528\\u4F18\\u5148\\u7684 CSS\\uFF09`}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-UI-Libraries\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React UI Libraries\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React UI \\u5E93\"})]}),`\n`,(0,e.jsx)(n.p,{children:`As a beginner, it is a great and recommended learning experience to build reusable components from scratch. Whether it is a dropdown, a select, a radio button, or a checkbox, you should know how to create these UI components yourself eventually.\n\\u4F5C\\u4E3A\\u521D\\u5B66\\u8005\\uFF0C\\u4ECE\\u5934\\u5F00\\u59CB\\u6784\\u5EFA\\u53EF\\u590D\\u7528\\u7EC4\\u4EF6\\u662F\\u4E00\\u4E2A\\u5F88\\u597D\\u7684\\u5B66\\u4E60\\u4F53\\u9A8C\\uFF0C\\u503C\\u5F97\\u63A8\\u8350\\u3002\\u65E0\\u8BBA\\u662F\\u4E0B\\u62C9\\u83DC\\u5355 \\u3001 \\u9009\\u62E9\\u6846 \\u3001 \\u5355\\u9009\\u6309\\u94AE\\u8FD8\\u662F\\u590D\\u9009\\u6846 \\uFF0C\\u4F60\\u6700\\u7EC8\\u90FD\\u5E94\\u8BE5\\u77E5\\u9053\\u5982\\u4F55\\u81EA\\u5DF1\\u521B\\u5EFA\\u8FD9\\u4E9B UI \\u7EC4\\u4EF6\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`However, if you don't have the resources to come up with all the components yourself, you want to use a UI library which gives you access to lots of pre-built components which share the same design system, functionalities, and rules for accessibility:\n\\u4F46\\u662F\\uFF0C\\u5982\\u679C\\u60A8\\u6CA1\\u6709\\u8DB3\\u591F\\u7684\\u8D44\\u6E90\\u81EA\\u5DF1\\u8BBE\\u8BA1\\u6240\\u6709\\u7EC4\\u4EF6\\uFF0C\\u90A3\\u4E48\\u60A8\\u9700\\u8981\\u4F7F\\u7528 UI \\u5E93\\uFF0C\\u5B83\\u53EF\\u4EE5\\u8BA9\\u60A8\\u8BBF\\u95EE\\u8BB8\\u591A\\u9884\\u5148\\u6784\\u5EFA\\u7684\\u7EC4\\u4EF6\\uFF0C\\u8FD9\\u4E9B\\u7EC4\\u4EF6\\u5171\\u4EAB\\u76F8\\u540C\\u7684\\u8BBE\\u8BA1\\u7CFB\\u7EDF\\u3001\\u529F\\u80FD\\u548C\\u53EF\\u8BBF\\u95EE\\u6027\\u89C4\\u5219\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`Material UI (MUI) (still most wanted in freelance projects)\nMaterial UI\\uFF08MUI\\uFF09 \\uFF08\\u5728\\u81EA\\u7531\\u804C\\u4E1A\\u9879\\u76EE\\u4E2D\\u4ECD\\u7136\\u662F\\u6700\\u9700\\u8981\\u7684\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`Mantine UI (most popular 2022)\nMantine UI \\uFF082022 \\u5E74\\u6700\\u53D7\\u6B22\\u8FCE\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`Chakra UI (most popular 2021)\nChakra UI \\uFF082021 \\u5E74\\u6700\\u53D7\\u6B22\\u8FCE\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`Hero UI ([previously] Next UI)\n\\u82F1\\u96C4 UI \\uFF08[\\u4E4B\\u524D] Next UI\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`Park UI (based on Ark UI)\nPark UI \\uFF08\\u57FA\\u4E8E Ark UI\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:\"PrimeReact\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:`The trend moves towards headless UI libraries though. They come without styling, but with all the functionalities and accessibilities that a modern component library needs. Most of the time they are combined with a Utility-First-CSS solution like Tailwind:\n\\u4E0D\\u8FC7\\uFF0C\\u8D8B\\u52BF\\u6B63\\u5728\\u671D\\u7740\\u65E0\\u5934 UI \\u5E93\\u7684\\u65B9\\u5411\\u53D1\\u5C55\\u3002\\u5B83\\u4EEC\\u6CA1\\u6709\\u6837\\u5F0F\\uFF0C\\u4F46\\u5177\\u5907\\u73B0\\u4EE3\\u7EC4\\u4EF6\\u5E93\\u6240\\u9700\\u7684\\u6240\\u6709\\u529F\\u80FD\\u548C\\u53EF\\u8BBF\\u95EE\\u6027\\u3002\\u5927\\u591A\\u6570\\u60C5\\u51B5\\u4E0B\\uFF0C\\u5B83\\u4EEC\\u4E0E Tailwind \\u7B49\\u201C\\u5B9E\\u7528\\u4F18\\u5148\\u201D\\u7684 CSS \\u89E3\\u51B3\\u65B9\\u6848\\u7ED3\\u5408\\u4F7F\\u7528\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`shadcn/ui (most popular 2023 - 2024)\nshadcn/ui \\uFF082023 - 2024 \\u5E74\\u6700\\u53D7\\u6B22\\u8FCE\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`Radix (foundation for shadcn/ui)\nRadix \\uFF08shadcn/ui \\u7684\\u57FA\\u7840\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:\"React Aria\"}),`\n`,(0,e.jsx)(n.li,{children:`Ark UI (from the makers of Chakra UI)\nArk UI \\uFF08\\u6765\\u81EA Chakra UI \\u7684\\u5236\\u9020\\u5546\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:\"Ariakit  \\u963F\\u91CC\\u4E9A\\u57FA\\u7279\"}),`\n`,(0,e.jsx)(n.li,{children:\"Daisy UI  \\u96CF\\u83CA\\u7528\\u6237\\u754C\\u9762\"}),`\n`,(0,e.jsx)(n.li,{children:\"Headless UI  \\u65E0\\u5934\\u7528\\u6237\\u754C\\u9762\"}),`\n`,(0,e.jsx)(n.li,{children:`Tailwind UI (not free)\nTailwind UI \\uFF08\\u975E\\u514D\\u8D39\\uFF09`}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:`Perhaps more out of fashion compared to the other UI libraries:\n\\u4E0E\\u5176\\u4ED6 UI \\u5E93\\u76F8\\u6BD4\\uFF0C\\u53EF\\u80FD\\u66F4\\u52A0\\u8FC7\\u65F6\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Ant Design\"}),`\n`,(0,e.jsx)(n.li,{children:\"Semantic UI  \\u8BED\\u4E49\\u7528\\u6237\\u754C\\u9762\"}),`\n`,(0,e.jsx)(n.li,{children:\"React Bootstrap  \\u53CD\\u5E94\\u5F15\\u5BFC\"}),`\n`,(0,e.jsx)(n.li,{children:\"Reactstrap  \\u53CD\\u5E94\\u5E26\"}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-Animation-Libraries\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React Animation Libraries\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u52A8\\u753B\\u5E93\"})]}),`\n`,(0,e.jsx)(n.p,{children:`Every animation in a web application begins with CSS. However, you'll soon realize that CSS animations may not fully meet your requirements. Some popular animation libraries for React include:\nWeb \\u5E94\\u7528\\u7A0B\\u5E8F\\u4E2D\\u7684\\u6BCF\\u4E2A\\u52A8\\u753B\\u90FD\\u59CB\\u4E8E CSS\\u3002\\u7136\\u800C\\uFF0C\\u60A8\\u5F88\\u5FEB\\u5C31\\u4F1A\\u610F\\u8BC6\\u5230 CSS \\u52A8\\u753B\\u53EF\\u80FD\\u65E0\\u6CD5\\u5B8C\\u5168\\u6EE1\\u8DB3\\u60A8\\u7684\\u9700\\u6C42\\u3002\\u4E00\\u4E9B\\u6D41\\u884C\\u7684 React \\u52A8\\u753B\\u5E93\\u5305\\u62EC\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`Motion (most recommended, previously Framer Motion)\nMotion \\uFF08\\u6700\\u63A8\\u8350\\uFF0C\\u4EE5\\u524D\\u79F0\\u4E3A Framer Motion\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:\"react-spring  \\u53CD\\u5E94\\u5F39\\u7C27\"}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Visualization-and-Chart-Libraries-in-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Visualization and Chart Libraries in React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"REACT \\u4E2D\\u7684\\u53EF\\u89C6\\u5316\\u548C\\u56FE\\u8868\\u5E93\"})]}),`\n`,(0,e.jsx)(n.p,{children:`If you really want to build charts from the ground up yourself, there is no way around D3. It's a low level visualization library that gives you everything you need to create amazing charts. However, learning D3 is a whole other adventure, thus many developers just pick a React charting library which does everything in exchange for flexibility. Popular solutions are:\n\\u5982\\u679C\\u4F60\\u771F\\u7684\\u60F3\\u81EA\\u5DF1\\u4ECE\\u5934\\u5F00\\u59CB\\u6784\\u5EFA\\u56FE\\u8868\\uFF0C\\u90A3\\u4E48 D3 \\u662F\\u4F60\\u7684\\u4E0D\\u4E8C\\u4E4B\\u9009\\u3002\\u5B83\\u662F\\u4E00\\u4E2A\\u5E95\\u5C42\\u53EF\\u89C6\\u5316\\u5E93\\uFF0C\\u53EF\\u4EE5\\u4E3A\\u4F60\\u63D0\\u4F9B\\u521B\\u5EFA\\u7CBE\\u5F69\\u56FE\\u8868\\u6240\\u9700\\u7684\\u4E00\\u5207\\u3002\\u7136\\u800C\\uFF0C\\u5B66\\u4E60 D3 \\u53C8\\u662F\\u53E6\\u4E00\\u56DE\\u4E8B\\uFF0C\\u56E0\\u6B64\\u8BB8\\u591A\\u5F00\\u53D1\\u8005\\u5E72\\u8106\\u9009\\u62E9\\u4E00\\u4E2A\\u529F\\u80FD\\u9F50\\u5168\\u7684 React \\u56FE\\u8868\\u5E93\\uFF0C\\u4EE5\\u6362\\u53D6\\u7075\\u6D3B\\u6027\\u3002\\u5E38\\u89C1\\u7684\\u89E3\\u51B3\\u65B9\\u6848\\u5305\\u62EC\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:`Recharts (personal recommendation)\nRecharts \\uFF08\\u4E2A\\u4EBA\\u63A8\\u8350\\uFF09`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"off the shelf charts  \\u73B0\\u6210\\u7684\\u56FE\\u8868\"}),`\n`,(0,e.jsx)(n.li,{children:`great composability  \\u51FA\\u8272\\u7684\\u53EF\\u7EC4\\u5408\\u6027\n-optional customization due to opt-in composability\n\\u7531\\u4E8E\\u9009\\u62E9\\u52A0\\u5165\\u53EF\\u7EC4\\u5408\\u6027\\u800C\\u5B9E\\u73B0\\u7684\\u53EF\\u9009\\u5B9A\\u5236`}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"visx  \\u7EF4\\u65AF\\u514B\\u65AF\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`leaning more towards low-level D3 than high-level abstraction\n\\u66F4\\u503E\\u5411\\u4E8E\\u4F4E\\u7EA7 D3 \\u800C\\u4E0D\\u662F\\u9AD8\\u7EA7\\u62BD\\u8C61`}),`\n`,(0,e.jsx)(n.li,{children:\"steeper learning curve  \\u66F4\\u9661\\u5CED\\u7684\\u5B66\\u4E60\\u66F2\\u7EBF\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:`more off the shelf charts, more difficult to customize\n\\u73B0\\u6210\\u7684\\u56FE\\u8868\\u8D8A\\u591A\\uFF0C\\u5B9A\\u5236\\u96BE\\u5EA6\\u5C31\\u8D8A\\u5927`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Victory  \\u80DC\\u5229\"}),`\n`,(0,e.jsx)(n.li,{children:\"nivo  \\u7B49\\u7EA7\"}),`\n`,(0,e.jsx)(n.li,{children:\"react-chartjs\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Form-Libraries-in-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Form Libraries in React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"REACT \\u4E2D\\u7684\\u8868\\u5355\\u5E93\"})]}),`\n`,(0,e.jsx)(n.p,{children:`The by far most popular library for forms in React is React Hook Form. It comes with everything needed: validation (zod as the most popular), form submission, form state management, and more. It is a great library to get started with forms in React.\n\\u76EE\\u524D\\u4E3A\\u6B62\\uFF0CReact \\u4E2D\\u6700\\u6D41\\u884C\\u7684\\u8868\\u5355\\u5E93\\u662F React Hook Form \\u3002\\u5B83\\u63D0\\u4F9B\\u4E86\\u6240\\u9700\\u7684\\u4E00\\u5207\\uFF1A\\u8868\\u5355\\u9A8C\\u8BC1\\uFF08 zod \\u6700\\u53D7\\u6B22\\u8FCE\\uFF09\\u3001\\u8868\\u5355\\u63D0\\u4EA4\\u3001\\u8868\\u5355\\u72B6\\u6001\\u7BA1\\u7406\\u7B49\\u7B49\\u3002\\u5B83\\u662F\\u4E00\\u4E2A\\u975E\\u5E38\\u9002\\u5408\\u5728 React \\u4E2D\\u5165\\u95E8\\u7684\\u8868\\u5355\\u5E93\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`An upcoming alternative is Conform which integrates more nicely with full-stack applications.\n\\u5373\\u5C06\\u63A8\\u51FA\\u7684\\u66FF\\u4EE3\\u65B9\\u6848\\u662F Conform \\uFF0C\\u5B83\\u4E0E\\u5168\\u6808\\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u96C6\\u6210\\u6548\\u679C\\u66F4\\u597D\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Alternatively, you can use Formik or React Final Form. If you are using a React UI library, see how it integrates with these form libraries.\n\\u6216\\u8005\\uFF0C\\u60A8\\u53EF\\u4EE5\\u4F7F\\u7528 Formik \\u6216 React Final Form \\u3002\\u5982\\u679C\\u60A8\\u6B63\\u5728\\u4F7F\\u7528 React UI \\u5E93\\uFF0C\\u8BF7\\u67E5\\u770B\\u5B83\\u5982\\u4F55\\u4E0E\\u8FD9\\u4E9B\\u8868\\u5355\\u5E93\\u96C6\\u6210\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:\"Recommendations:  \\u5EFA\\u8BAE\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"React Hook Form  React Hook \\u8868\\u5355\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`with zod integration for validation\n\\u96C6\\u6210 zod \\u8FDB\\u884C\\u9A8C\\u8BC1`}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Code-Structure-in-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Code Structure in React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"REACT \\u4E2D\\u7684\\u4EE3\\u7801\\u7ED3\\u6784\"})]}),`\n`,(0,e.jsx)(n.p,{children:`If you want to embrace a unified and common sense code style, use ESLint in your React project. A linter such as ESLint enforces a particular code style. For example, you can make it a requirement with ESLint to follow a popular style guides. You can also integrate ESLint in your IDE/editor and it will point you to every mistake.\n\\u5982\\u679C\\u60A8\\u60F3\\u62E5\\u6709\\u7EDF\\u4E00\\u4E14\\u7B26\\u5408\\u5E38\\u8BC6\\u7684\\u4EE3\\u7801\\u98CE\\u683C\\uFF0C\\u8BF7\\u5728\\u60A8\\u7684 React \\u9879\\u76EE\\u4E2D\\u4F7F\\u7528 ESLint \\u3002\\u50CF ESLint \\u8FD9\\u6837\\u7684\\u4EE3\\u7801\\u68C0\\u67E5\\u5DE5\\u5177\\u4F1A\\u5F3A\\u5236\\u6267\\u884C\\u7279\\u5B9A\\u7684\\u4EE3\\u7801\\u98CE\\u683C\\u3002\\u4F8B\\u5982\\uFF0C\\u60A8\\u53EF\\u4EE5\\u8981\\u6C42 ESLint \\u9075\\u5FAA\\u6D41\\u884C\\u7684\\u4EE3\\u7801\\u98CE\\u683C\\u6307\\u5357\\u3002\\u60A8\\u8FD8\\u53EF\\u4EE5\\u5C06 ESLint \\u96C6\\u6210\\u5230\\u60A8\\u7684 IDE/\\u7F16\\u8F91\\u5668\\u4E2D \\uFF0C\\u5B83\\u4F1A\\u6307\\u51FA\\u60A8\\u7684\\u6240\\u6709\\u9519\\u8BEF\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you want to embrace a unified code format, use Prettier in your React project. It is an opinionated code formatter with only a handful of opt-in configurations. You can integrate it in your editor or IDE so that it formats your code every time you save a file. Prettier doesn't replace ESLint though, but it integrates nicely with it.\n\\u5982\\u679C\\u60A8\\u60F3\\u91C7\\u7528\\u7EDF\\u4E00\\u7684\\u4EE3\\u7801\\u683C\\u5F0F\\uFF0C\\u8BF7\\u5728 React \\u9879\\u76EE\\u4E2D\\u4F7F\\u7528 Prettier \\u3002\\u5B83\\u662F\\u4E00\\u6B3E\\u529F\\u80FD\\u5F3A\\u5927\\u7684\\u4EE3\\u7801\\u683C\\u5F0F\\u5316\\u7A0B\\u5E8F\\uFF0C\\u53EA\\u9700\\u5C11\\u91CF\\u53EF\\u9009\\u914D\\u7F6E\\u3002\\u60A8\\u53EF\\u4EE5\\u5C06\\u5176\\u96C6\\u6210\\u5230\\u7F16\\u8F91\\u5668\\u6216 IDE \\u4E2D \\uFF0C\\u4EE5\\u4FBF\\u5728\\u6BCF\\u6B21\\u4FDD\\u5B58\\u6587\\u4EF6\\u65F6\\u81EA\\u52A8\\u683C\\u5F0F\\u5316\\u4EE3\\u7801\\u3002Prettier \\u5E76\\u4E0D\\u80FD\\u53D6\\u4EE3 ESLint\\uFF0C\\u4F46\\u5B83\\u53EF\\u4EE5\\u4E0E ESLint \\u5B8C\\u7F8E\\u96C6\\u6210 \\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Maybe a rising star in 2025 will be Biome (formerly Rome). ESLint and Prettier are not the most favorite utilities when it comes to their setup and especially interplay. But they are necessary in every web developer's daily work. Biome wants to be an alternative to Prettier and ESLint by providing a fast (Rust based) and all-in-one toolchain.\n2025 \\u5E74\\uFF0C Biome \\uFF08\\u539F\\u540D Rome\\uFF09\\u6216\\u8BB8\\u4F1A\\u6210\\u4E3A\\u4E00\\u9897\\u5189\\u5189\\u5347\\u8D77\\u7684\\u65B0\\u661F\\u3002ESLint \\u548C Prettier \\u5728\\u8BBE\\u7F6E\\u548C\\u4EA4\\u4E92\\u65B9\\u9762\\u5E76\\u975E\\u6700\\u53D7\\u6B22\\u8FCE\\u7684\\u5DE5\\u5177\\uFF0C\\u4F46\\u5B83\\u4EEC\\u5374\\u662F\\u6BCF\\u4E2A Web \\u5F00\\u53D1\\u8005\\u65E5\\u5E38\\u5DE5\\u4F5C\\u4E2D\\u5FC5\\u4E0D\\u53EF\\u5C11\\u7684\\u5DE5\\u5177\\u3002Biome \\u5E0C\\u671B\\u901A\\u8FC7\\u63D0\\u4F9B\\u5FEB\\u901F\\uFF08\\u57FA\\u4E8E Rust\\uFF09\\u4E14\\u4E00\\u4F53\\u5316\\u7684\\u5DE5\\u5177\\u94FE\\uFF0C\\u6210\\u4E3A Prettier \\u548C ESLint \\u7684\\u66FF\\u4EE3\\u54C1\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:\"Recommendations:  \\u5EFA\\u8BAE\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"ESLint + Prettier\"}),`\n`,(0,e.jsx)(n.li,{children:`optionally check out Biome\n\\u53EF\\u9009\\u5730\\u68C0\\u67E5 Biome`}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-Authentication\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React Authentication\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u9A8C\\u8BC1\"})]}),`\n`,(0,e.jsx)(n.p,{children:`In a React application, you may want to introduce authentication with functionalities such as sign up, sign in, and sign out. Other features like password reset and password change features are often needed as well. These features go far beyond React, because a backend application manages these things for you.\n\\u5728 React \\u5E94\\u7528\\u4E2D\\uFF0C\\u4F60\\u53EF\\u80FD\\u5E0C\\u671B\\u5F15\\u5165\\u8EAB\\u4EFD\\u9A8C\\u8BC1\\u529F\\u80FD\\uFF0C\\u4F8B\\u5982\\u6CE8\\u518C\\u3001\\u767B\\u5F55\\u548C\\u9000\\u51FA\\u3002\\u6B64\\u5916\\uFF0C\\u901A\\u5E38\\u8FD8\\u9700\\u8981\\u5176\\u4ED6\\u529F\\u80FD\\uFF0C\\u4F8B\\u5982\\u5BC6\\u7801\\u91CD\\u7F6E\\u548C\\u5BC6\\u7801\\u66F4\\u6539\\u529F\\u80FD\\u3002\\u8FD9\\u4E9B\\u529F\\u80FD\\u8FDC\\u8FDC\\u8D85\\u51FA\\u4E86 React \\u7684\\u8303\\u7574\\uFF0C\\u56E0\\u4E3A\\u540E\\u7AEF\\u5E94\\u7528\\u7A0B\\u5E8F\\u4F1A\\u4E3A\\u4F60\\u7BA1\\u7406\\u8FD9\\u4E9B\\u529F\\u80FD\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`The best learning experience would be implementing a full-stack application with authentication (e.g. The Road to Next) yourself. Since authentication comes with lots of security risks and nitty gritty details not everyone knows about, I'd recommend using a third-party service for authentication in production:\n\\u6700\\u597D\\u7684\\u5B66\\u4E60\\u7ECF\\u9A8C\\u662F\\u81EA\\u5DF1\\u5B9E\\u73B0\\u4E00\\u4E2A\\u652F\\u6301\\u8EAB\\u4EFD\\u9A8C\\u8BC1\\u7684\\u5168\\u6808\\u5E94\\u7528\\u7A0B\\u5E8F\\uFF08\\u4F8B\\u5982 The Road to Next \\uFF09\\u3002\\u7531\\u4E8E\\u8EAB\\u4EFD\\u9A8C\\u8BC1\\u5B58\\u5728\\u8BB8\\u591A\\u5B89\\u5168\\u98CE\\u9669\\uFF0C\\u800C\\u4E14\\u4E00\\u4E9B\\u7EC6\\u8282\\u5E76\\u975E\\u4EBA\\u4EBA\\u7686\\u77E5\\uFF0C\\u56E0\\u6B64\\u6211\\u5EFA\\u8BAE\\u5728\\u751F\\u4EA7\\u73AF\\u5883\\u4E2D\\u4F7F\\u7528\\u7B2C\\u4E09\\u65B9\\u8EAB\\u4EFD\\u9A8C\\u8BC1\\u670D\\u52A1\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`Lucia (Resource)\n\\u9732\\u897F\\u4E9A \\uFF08\\u8D44\\u6E90\\uFF09`,`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`Oslo: Auth and Cryptography\n\\u5965\\u65AF\\u9646\\uFF1A\\u8EAB\\u4EFD\\u9A8C\\u8BC1\\u548C\\u5BC6\\u7801\\u5B66`}),`\n`,(0,e.jsx)(n.li,{children:`Arctic: OAuth 2.0 with support for 50+ providers\nArctic\\uFF1AOAuth 2.0 \\u652F\\u6301 50 \\u591A\\u5BB6\\u63D0\\u4F9B\\u5546`}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.li,{children:`Better Auth  \\u66F4\\u597D\\u7684\\u8EAB\\u4EFD\\u9A8C\\u8BC1\nAuth.js`}),`\n`,(0,e.jsx)(n.li,{children:`Clerk (paid) or Kinde (paid)\n\\u804C\\u5458 \\uFF08\\u4ED8\\u8D39\\uFF09\\u6216 Kinde \\uFF08\\u4ED8\\u8D39\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:\"Supabase (Auth)  Supabase\\uFF08\\u6388\\u6743\\uFF09\"}),`\n`,(0,e.jsx)(n.li,{children:\"AuthKit\"}),`\n`,(0,e.jsx)(n.li,{children:\"Auth0\"}),`\n`,(0,e.jsx)(n.li,{children:\"AWS Cognito  AWS \\u77E5\\u8BC6\\u5E93\"}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-Backend\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React Backend\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React\\u540E\\u7AEF\"})]}),`\n`,(0,e.jsx)(n.p,{children:`Since there is a strong trend moving React to the server, the most natural habitat for a React project would be a (meta) framework like Next.js (mostly dynamic web applications) or Astro (mostly static website). React Router (previously Remix) and TanStack Start are also great alternatives, but they are in earlier stages of development.\n\\u7531\\u4E8E React \\u8FC1\\u79FB\\u5230\\u670D\\u52A1\\u5668\\u7684\\u8D8B\\u52BF\\u5F3A\\u52B2\\uFF0CReact \\u9879\\u76EE\\u6700\\u81EA\\u7136\\u7684\\u6816\\u606F\\u5730\\u5C06\\u662F\\u50CF Next.js\\uFF08\\u4E3B\\u8981\\u9762\\u5411\\u52A8\\u6001 Web \\u5E94\\u7528\\u7A0B\\u5E8F\\uFF09\\u6216 Astro\\uFF08\\u4E3B\\u8981\\u9762\\u5411\\u9759\\u6001\\u7F51\\u7AD9\\uFF09\\u8FD9\\u6837\\u7684\\uFF08\\u5143\\uFF09\\u6846\\u67B6\\u3002React Router\\uFF08\\u524D\\u8EAB\\u4E3A Remix\\uFF09\\u548C TanStack Start \\u4E5F\\u662F\\u4E0D\\u9519\\u7684\\u9009\\u62E9\\uFF0C\\u4F46\\u5B83\\u4EEC\\u8FD8\\u5904\\u4E8E\\u65E9\\u671F\\u5F00\\u53D1\\u9636\\u6BB5\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you can't use a full-stack framework due to various reasons (while still being able to use a JS/TS), you have to check out tRPC or Hono. Honorable mention goes to the old school but must popular Node backend Express. Other alternatives are Fasitfy, Nest, or Elysia.\n\\u5982\\u679C\\u60A8\\u7531\\u4E8E\\u5404\\u79CD\\u539F\\u56E0\\u65E0\\u6CD5\\u4F7F\\u7528\\u5168\\u6808\\u6846\\u67B6\\uFF08\\u4F46\\u4ECD\\u80FD\\u4F7F\\u7528 JS/TS\\uFF09\\uFF0C\\u90A3\\u4E48\\u60A8\\u5E94\\u8BE5\\u8003\\u8651 tRPC \\u6216 Hono \\u3002\\u503C\\u5F97\\u4E00\\u63D0\\u7684\\u662F\\u8001\\u724C\\u4F46\\u975E\\u5E38\\u6D41\\u884C\\u7684 Node \\u540E\\u7AEF Express \\u3002\\u5176\\u4ED6\\u66FF\\u4EE3\\u65B9\\u6848\\u5305\\u62EC Fasitfy \\u3001 Nest \\u6216 Elysia \\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Honorable mention goes to Koa and Hapi.\n\\u503C\\u5F97\\u4E00\\u63D0\\u7684\\u662F Koa \\u548C Hapi \\u3002`}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-Database\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React Database\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u6570\\u636E\\u5E93\"})]}),`\n`,(0,e.jsx)(n.p,{children:`Not tied to React, but since full-stack React applications are getting popular these days, React is closer than ever to the database layer. While developing any Next.js application, you will most likely deal with a database ORM. The most popular ORM choice these days is Prisma. A trending alternative is Drizzle ORM.\n\\u867D\\u7136\\u4E0E React \\u65E0\\u5173\\uFF0C\\u4F46\\u7531\\u4E8E\\u5168\\u6808 React \\u5E94\\u7528\\u7A0B\\u5E8F\\u5982\\u4ECA\\u8D8A\\u6765\\u8D8A\\u6D41\\u884C\\uFF0CReact \\u6BD4\\u4EE5\\u5F80\\u4EFB\\u4F55\\u65F6\\u5019\\u90FD\\u66F4\\u63A5\\u8FD1\\u6570\\u636E\\u5E93\\u5C42\\u3002\\u5728\\u5F00\\u53D1\\u4EFB\\u4F55 Next.js \\u5E94\\u7528\\u7A0B\\u5E8F\\u65F6\\uFF0C\\u4F60\\u5F88\\u53EF\\u80FD\\u4F1A\\u5904\\u7406\\u6570\\u636E\\u5E93 ORM\\u3002\\u76EE\\u524D\\u6700\\u6D41\\u884C\\u7684 ORM \\u9009\\u62E9\\u662F Prisma \\u3002\\u53E6\\u4E00\\u4E2A\\u6D41\\u884C\\u7684\\u66FF\\u4EE3\\u65B9\\u6848\\u662F Drizzle ORM \\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`More alternatives are Kysely and database-js (only PlanetScale).\n\\u66F4\\u591A\\u7684\\u66FF\\u4EE3\\u65B9\\u6848\\u662F Kysely \\u548C database-js \\uFF08\\u4EC5\\u9650 PlanetScale\\uFF09\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`When it comes to choosing a database, Supabase (or Firebase) are valid database providers. Supabase with its PostgreSQL can be self-hosted or used as a paid service.\n\\u5728\\u9009\\u62E9\\u6570\\u636E\\u5E93\\u65F6\\uFF0CSupabase\\uFF08\\u6216 Firebase\\uFF09\\u662F\\u4E0D\\u9519\\u7684\\u9009\\u62E9\\u3002Supabase \\u53CA\\u5176 PostgreSQL \\u53EF\\u4EE5\\u81EA\\u6258\\u7BA1\\uFF0C\\u4E5F\\u53EF\\u4EE5\\u4F5C\\u4E3A\\u4ED8\\u8D39\\u670D\\u52A1\\u4F7F\\u7528\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Popular serverless database alternatives are PlanetScale (paid), Neon, Xata, and Turso.\n\\u6D41\\u884C\\u7684\\u65E0\\u670D\\u52A1\\u5668\\u6570\\u636E\\u5E93\\u66FF\\u4EE3\\u54C1\\u6709 PlanetScale \\uFF08\\u4ED8\\u8D39\\uFF09\\u3001 Neon \\u3001 Xata \\u548C Turso \\u3002`}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-Hosting\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React Hosting\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u6258\\u7BA1\"})]}),`\n`,(0,e.jsx)(n.p,{children:`Deploying and hosting a React application is similar to deploying any other web app. For complete control over your environment, consider using services like Digital Ocean or Hetzner. These options allow you to manage your infrastructure yourself.\n\\u90E8\\u7F72\\u548C\\u6258\\u7BA1 React \\u5E94\\u7528\\u7A0B\\u5E8F\\u4E0E\\u90E8\\u7F72\\u4EFB\\u4F55\\u5176\\u4ED6 Web \\u5E94\\u7528\\u7C7B\\u4F3C\\u3002\\u4E3A\\u4E86\\u5B8C\\u5168\\u63A7\\u5236\\u60A8\\u7684\\u73AF\\u5883\\uFF0C\\u8BF7\\u8003\\u8651\\u4F7F\\u7528 Digital Ocean \\u6216 Hetzner \\u7B49\\u670D\\u52A1\\u3002\\u8FD9\\u4E9B\\u9009\\u9879\\u5141\\u8BB8\\u60A8\\u81EA\\u884C\\u7BA1\\u7406\\u57FA\\u7840\\u67B6\\u6784\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you prefer a hands-off approach where the hosting platform manages everything for you, Vercel is a well-regarded option, particularly for projects built with Next.js.\n\\u5982\\u679C\\u60A8\\u66F4\\u559C\\u6B22\\u6258\\u7BA1\\u5E73\\u53F0\\u4E3A\\u60A8\\u7BA1\\u7406\\u4E00\\u5207\\u7684\\u653E\\u624B\\u65B9\\u5F0F\\uFF0C\\u90A3\\u4E48 Vercel \\u662F\\u4E00\\u4E2A\\u5907\\u53D7\\u63A8\\u5D07\\u7684\\u9009\\u62E9\\uFF0C\\u7279\\u522B\\u662F\\u5BF9\\u4E8E\\u4F7F\\u7528 Next.js \\u6784\\u5EFA\\u7684\\u9879\\u76EE\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`For a middle ground, Coolify provides an excellent solution, offering some autonomy while simplifying many hosting tasks.\n\\u5BF9\\u4E8E\\u4E2D\\u95F4\\u7ACB\\u573A\\uFF0C Coolify \\u63D0\\u4F9B\\u4E86\\u4E00\\u4E2A\\u51FA\\u8272\\u7684\\u89E3\\u51B3\\u65B9\\u6848\\uFF0C\\u5728\\u7B80\\u5316\\u8BB8\\u591A\\u6258\\u7BA1\\u4EFB\\u52A1\\u7684\\u540C\\u65F6\\u63D0\\u4F9B\\u4E86\\u4E00\\u5B9A\\u7684\\u81EA\\u4E3B\\u6743\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`If you are already using a third-party backend as a service like Firebase/Supabase, you can check whether they offer hosting as well. Other popular hosting providers are Render, Fly.io, Railway, or directly at CloudFlare/AWS/Azure/Google Cloud.\n\\u5982\\u679C\\u60A8\\u5DF2\\u7ECF\\u5728\\u4F7F\\u7528\\u7B2C\\u4E09\\u65B9\\u540E\\u7AEF\\u5373\\u670D\\u52A1\\uFF08\\u4F8B\\u5982 Firebase/Supabase\\uFF09\\uFF0C\\u53EF\\u4EE5\\u67E5\\u770B\\u5B83\\u4EEC\\u662F\\u5426\\u4E5F\\u63D0\\u4F9B\\u6258\\u7BA1\\u670D\\u52A1\\u3002\\u5176\\u4ED6\\u70ED\\u95E8\\u6258\\u7BA1\\u670D\\u52A1\\u63D0\\u4F9B\\u5546\\u5305\\u62EC Render \\u3001 Fly.io \\u3001 Railway \\uFF0C\\u6216\\u8005\\u76F4\\u63A5\\u4F7F\\u7528 CloudFlare/AWS/Azure/Google Cloud\\u3002`}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-Hosting\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Testing in React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u4E2D\\u6D4B\\u8BD5\"})]}),`\n`,(0,e.jsx)(n.p,{children:`The backbone of testing a React application is a test framework like Vitest (recommended) or Jest. It gives you test runner, assertion library and spying, mocking, stubbing functionalities. Everything that's needed in a comprehensive test framework.\n\\u6D4B\\u8BD5 React \\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u6838\\u5FC3\\u662F\\u50CF Vitest \\uFF08\\u63A8\\u8350\\uFF09\\u6216 Jest \\u8FD9\\u6837\\u7684\\u6D4B\\u8BD5\\u6846\\u67B6\\u3002\\u5B83\\u63D0\\u4F9B\\u4E86\\u6D4B\\u8BD5\\u8FD0\\u884C\\u5668\\u3001\\u65AD\\u8A00\\u5E93\\u4EE5\\u53CA\\u76D1\\u542C\\u3001\\u6A21\\u62DF\\u3001\\u5B58\\u6839\\u7B49\\u529F\\u80FD\\u3002\\u4E00\\u4E2A\\u5168\\u9762\\u7684\\u6D4B\\u8BD5\\u6846\\u67B6\\u6240\\u9700\\u7684\\u4E00\\u5207\\u90FD\\u5177\\u5907\\u4E86\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`Eventually you will find yourself using the popular React Testing Library (RTL), which is used within your testing framework's environment, as a comprehensive testing library for React. RTL makes it possible to render your components and to simulate events on HTML elements. Afterward, your test framework is used for the assertions.\n\\u6700\\u7EC8\\uFF0C\\u4F60\\u4F1A\\u53D1\\u73B0\\u81EA\\u5DF1\\u6B63\\u5728\\u4F7F\\u7528\\u6D41\\u884C\\u7684 React \\u6D4B\\u8BD5\\u5E93 (RTL) \\uFF0C\\u5B83\\u5728\\u4F60\\u7684\\u6D4B\\u8BD5\\u6846\\u67B6\\u73AF\\u5883\\u4E2D\\u4F7F\\u7528\\uFF0C\\u662F\\u4E00\\u4E2A\\u5168\\u9762\\u7684 React \\u6D4B\\u8BD5\\u5E93\\u3002RTL \\u53EF\\u4EE5\\u6E32\\u67D3\\u4F60\\u7684\\u7EC4\\u4EF6\\u5E76\\u6A21\\u62DF HTML \\u5143\\u7D20\\u4E0A\\u7684\\u4E8B\\u4EF6\\u3002\\u4E4B\\u540E\\uFF0C\\u4F60\\u7684\\u6D4B\\u8BD5\\u6846\\u67B6\\u5C06\\u7528\\u4E8E\\u65AD\\u8A00\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:`When it comes to selecting a testing tool for React end-to-end (E2E) testing, two of the most widely recommended and popular options are Playwright (recommended) and Cypress. Both tools allow you to automate and simulate user interactions within a browser, ensuring that your React application behaves as expected from a user's perspective.\n\\u5728\\u9009\\u62E9\\u7528\\u4E8E React \\u7AEF\\u5230\\u7AEF (E2E) \\u6D4B\\u8BD5\\u7684\\u5DE5\\u5177\\u65F6\\uFF0C\\u6700\\u53D7\\u63A8\\u8350\\u548C\\u6700\\u53D7\\u6B22\\u8FCE\\u7684\\u4E24\\u4E2A\\u9009\\u9879\\u662F Playwright \\uFF08\\u63A8\\u8350\\uFF09\\u548C Cypress \\u3002\\u8FD9\\u4E24\\u79CD\\u5DE5\\u5177\\u90FD\\u5141\\u8BB8\\u60A8\\u5728\\u6D4F\\u89C8\\u5668\\u4E2D\\u81EA\\u52A8\\u5316\\u548C\\u6A21\\u62DF\\u7528\\u6237\\u4EA4\\u4E92\\uFF0C\\u4ECE\\u800C\\u786E\\u4FDD\\u60A8\\u7684 React \\u5E94\\u7528\\u7A0B\\u5E8F\\u4ECE\\u7528\\u6237\\u7684\\u89D2\\u5EA6\\u6309\\u9884\\u671F\\u8FD0\\u884C\\u3002`}),`\n`,(0,e.jsx)(n.p,{children:\"Recommendations:  \\u5EFA\\u8BAE\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`Unit/Integration: Vitest + React Testing Library (most popular)\n\\u5355\\u5143/\\u96C6\\u6210\\uFF1AVitest + React \\u6D4B\\u8BD5\\u5E93\\uFF08\\u6700\\u53D7\\u6B22\\u8FCE\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`E2E Tests: Playwright (or Cypress)\nE2E \\u6D4B\\u8BD5\\uFF1APlaywright\\uFF08\\u6216 Cypress\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`optionally Snapshot Tests with Vitest\n\\u53EF\\u9009\\u4F7F\\u7528 Vitest \\u8FDB\\u884C\\u5FEB\\u7167\\u6D4B\\u8BD5`}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-and-Immutable-Data-Structures\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React and Immutable Data Structures\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u548C\\u4E0D\\u53EF\\u53D8\\u6570\\u636E\\u7ED3\\u6784\"})]}),`\n`,(0,e.jsx)(n.p,{children:`Vanilla JavaScript gives you plenty of built-in tools to handle data structures as if they are immutable. However, if you and your team feel the need to enforce immutable data structures, the most popular choice is Immer.\n\\u539F\\u751F JavaScript \\u63D0\\u4F9B\\u4E86\\u8BB8\\u591A\\u5185\\u7F6E\\u5DE5\\u5177\\u6765\\u5904\\u7406\\u6570\\u636E\\u7ED3\\u6784\\uFF0C\\u5C31\\u597D\\u50CF\\u5B83\\u4EEC\\u662F\\u4E0D\\u53EF\\u53D8\\u7684\\u4E00\\u6837\\u3002\\u4F46\\u662F\\uFF0C\\u5982\\u679C\\u60A8\\u548C\\u60A8\\u7684\\u56E2\\u961F\\u89C9\\u5F97\\u9700\\u8981\\u5F3A\\u5236\\u4F7F\\u7528\\u4E0D\\u53EF\\u53D8\\u7684\\u6570\\u636E\\u7ED3\\u6784\\uFF0C\\u90A3\\u4E48\\u6700\\u53D7\\u6B22\\u8FCE\\u7684\\u9009\\u62E9\\u662F Immer \\u3002`}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-Hosting\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React Internationalization\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"REACT \\u56FD\\u9645\\u5316\"})]}),`\n`,(0,e.jsx)(n.p,{children:`When it comes to internationalization i18n for your React application, you need to think not only about translations, but also about pluralizations, formattings for dates and currencies, and a handful of other things. These are the most popular libraries for dealing with it:\n\\u5728\\u4E3A React \\u5E94\\u7528\\u7A0B\\u5E8F\\u8FDB\\u884C\\u56FD\\u9645\\u5316 i18n \\u65F6\\uFF0C\\u4F60\\u4E0D\\u4EC5\\u9700\\u8981\\u8003\\u8651\\u7FFB\\u8BD1\\uFF0C\\u8FD8\\u9700\\u8981\\u8003\\u8651\\u590D\\u6570\\u5F62\\u5F0F\\u3001\\u65E5\\u671F\\u548C\\u8D27\\u5E01\\u7684\\u683C\\u5F0F\\u4EE5\\u53CA\\u5176\\u4ED6\\u4E00\\u4E9B\\u95EE\\u9898\\u3002\\u4EE5\\u4E0B\\u662F\\u4E00\\u4E9B\\u5E38\\u7528\\u7684\\u5E93\\u6765\\u5904\\u7406\\u8FD9\\u4E9B\\u95EE\\u9898\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"FormatJS\"}),`\n`,(0,e.jsx)(n.li,{children:\"react-i18next\"}),`\n`,(0,e.jsx)(n.li,{children:\"Lingui  \\u8BED\\u8A00\"}),`\n`,(0,e.jsx)(n.li,{children:`next-intl (Next.js)\nnext-intl \\uFF08Next.js\\uFF09`}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Rich-Text-Editor-in-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Rich Text Editor in React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u4E2D\\u7684\\u5BCC\\u6587\\u672C\\u7F16\\u8F91\\u5668\"})]}),`\n`,(0,e.jsx)(n.p,{children:`When it comes to Rich Text Editors in React, I can only think of the following:\n\\u5F53\\u8C08\\u5230 React \\u4E2D\\u7684\\u5BCC\\u6587\\u672C\\u7F16\\u8F91\\u5668\\u65F6\\uFF0C\\u6211\\u53EA\\u80FD\\u60F3\\u5230\\u4EE5\\u4E0B\\u51E0\\u70B9\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"TipTap  \\u63D0\\u793A\"}),`\n`,(0,e.jsx)(n.li,{children:\"Plate  \\u76D8\\u5B50\"}),`\n`,(0,e.jsx)(n.li,{children:\"Lexical  \\u8BCD\\u6C47\"}),`\n`,(0,e.jsx)(n.li,{children:\"Slate  \\u77F3\\u677F\"}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Payments-in-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Payments in React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"REACT \\u652F\\u4ED8\"})]}),`\n`,(0,e.jsx)(n.p,{children:`When it comes to integrating payment solutions into your React application, Stripe and PayPal are the most commonly used providers. Both offer seamless integration options for React.\n\\u5728\\u5C06\\u652F\\u4ED8\\u89E3\\u51B3\\u65B9\\u6848\\u96C6\\u6210\\u5230 React \\u5E94\\u7528\\u7A0B\\u5E8F\\u4E2D\\u65F6\\uFF0CStripe \\u548C PayPal \\u662F\\u6700\\u5E38\\u7528\\u7684\\u63D0\\u4F9B\\u5546\\u3002\\u4E24\\u8005\\u90FD\\u4E3A React \\u63D0\\u4F9B\\u4E86\\u65E0\\u7F1D\\u96C6\\u6210\\u9009\\u9879\\u3002`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"PayPal\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Stripe  \\u6761\\u7EB9\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"React Stripe Elements  React Stripe \\u5143\\u7D20\"}),`\n`,(0,e.jsx)(n.li,{children:`Stripe Checkout  Stripe \\u7ED3\\u8D26\nOther payment providers are Braintree (PayPal) and Lemon Squeezy (Stripe) which have been acquired by their competitors.\n\\u5176\\u4ED6\\u652F\\u4ED8\\u63D0\\u4F9B\\u5546\\u5305\\u62EC Braintree \\uFF08PayPal\\uFF09\\u548C Lemon Squeezy \\uFF08Stripe\\uFF09\\uFF0C\\u5B83\\u4EEC\\u5DF2\\u88AB\\u7ADE\\u4E89\\u5BF9\\u624B\\u6536\\u8D2D\\u3002`}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Time-in-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Time in React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"REACT \\u65F6\\u95F4\"})]}),`\n`,(0,e.jsx)(n.p,{children:`If your React application frequently handles dates, times, and timezones, consider using a dedicated library to manage these aspects efficiently. Here are some options:\n\\u5982\\u679C\\u60A8\\u7684 React \\u5E94\\u7528\\u7A0B\\u5E8F\\u7ECF\\u5E38\\u5904\\u7406\\u65E5\\u671F\\u3001\\u65F6\\u95F4\\u548C\\u65F6\\u533A\\uFF0C\\u8BF7\\u8003\\u8651\\u4F7F\\u7528\\u4E13\\u7528\\u5E93\\u6765\\u9AD8\\u6548\\u5730\\u7BA1\\u7406\\u8FD9\\u4E9B\\u65B9\\u9762\\u3002\\u4EE5\\u4E0B\\u662F\\u4E00\\u4E9B\\u9009\\u9879\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"date-fns  \\u65E5\\u671F\\u51FD\\u6570\"}),`\n`,(0,e.jsx)(n.li,{children:\"Day.js\"}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Payments-in-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React Desktop Applications\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u684C\\u9762\\u5E94\\u7528\\u7A0B\\u5E8F\"})]}),`\n`,(0,e.jsx)(n.p,{children:`Electron and Tauri are the go to frameworks for cross-platform desktop applications.\nElectron \\u548C Tauri \\u662F\\u8DE8\\u5E73\\u53F0\\u684C\\u9762\\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u9996\\u9009\\u6846\\u67B6\\u3002`}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"File-Upload-in-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"File Upload in React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"REACT \\u4E0A\\u4F20\\u6587\\u4EF6\"})]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`input field with type=\"file\"\ntype=\"file\" \\u7684\\u8F93\\u5165\\u5B57\\u6BB5`}),`\n`,(0,e.jsx)(n.li,{children:\"react-dropzone  \\u53CD\\u5E94\\u62D6\\u653E\\u533A\"}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"File-Upload-in-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"File Upload in React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"REACT \\u4E0A\\u4F20\\u6587\\u4EF6\"})]}),`\n`,(0,e.jsx)(n.p,{children:`E-Mail rendering is a pain if you are just using HTML. Fortunately, there are libraries out there which help you to create responsive HTML emails with React components:\n\\u5982\\u679C\\u53EA\\u4F7F\\u7528 HTML\\uFF0C\\u7535\\u5B50\\u90AE\\u4EF6\\u6E32\\u67D3\\u4F1A\\u975E\\u5E38\\u9EBB\\u70E6\\u3002\\u5E78\\u8FD0\\u7684\\u662F\\uFF0C\\u6709\\u4E00\\u4E9B\\u5E93\\u53EF\\u4EE5\\u5E2E\\u52A9\\u4F60\\u4F7F\\u7528 React \\u7EC4\\u4EF6\\u521B\\u5EFA\\u54CD\\u5E94\\u5F0F HTML \\u7535\\u5B50\\u90AE\\u4EF6\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"react-email (recommendation)\"}),`\n`,(0,e.jsx)(n.li,{children:\"react-email \\uFF08\\u63A8\\u8350\\uFF09\"}),`\n`,(0,e.jsx)(n.li,{children:\"mjml  \\u55EF\"}),`\n`,(0,e.jsx)(n.li,{children:\"Mailing  \\u90AE\\u5BC4\"}),`\n`,(0,e.jsx)(n.li,{children:\"jsx-email  jsx-\\u7535\\u5B50\\u90AE\\u4EF6\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:`If you are looking for a email service provider, check out Resend, Postmark, SendGrid, or Mailgun.\n\\u5982\\u679C\\u60A8\\u6B63\\u5728\\u5BFB\\u627E\\u7535\\u5B50\\u90AE\\u4EF6\\u670D\\u52A1\\u63D0\\u4F9B\\u5546\\uFF0C\\u8BF7\\u67E5\\u770B Resend \\u3001 Postmark \\u3001 SendGrid \\u6216 Mailgun \\u3002`}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Drag-and-Drop\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Drag and Drop\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"\\u62D6\\u653E\"})]}),`\n`,(0,e.jsx)(n.p,{children:`Personally I have used the successor of react-beautiful-dnd and cannot say anything negative about it. A popular alternative which offers way more flexibility and options, but comes with the cost of a steeper learning curve, is dnd kit.\n\\u6211\\u4E2A\\u4EBA\\u7528\\u8FC7 react-beautiful-dnd \\u7684\\u540E\\u7EED\\u7248\\u672C \\uFF0C\\u5BF9\\u5B83\\u6CA1\\u4EC0\\u4E48\\u4E0D\\u6EE1\\u3002dnd kit \\u662F\\u4E00\\u4E2A\\u5F88\\u53D7\\u6B22\\u8FCE\\u7684\\u66FF\\u4EE3\\u65B9\\u6848\\uFF0C\\u5B83\\u63D0\\u4F9B\\u4E86\\u66F4\\u591A\\u7684\\u7075\\u6D3B\\u6027\\u548C\\u9009\\u9879\\uFF0C\\u4F46\\u5B66\\u4E60\\u8D77\\u6765\\u6BD4\\u8F83\\u8D39\\u52B2\\u3002`}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Mobile-Development-with-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Mobile Development with React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"\\u4F7F\\u7528 React \\u8FDB\\u884C\\u79FB\\u52A8\\u5F00\\u53D1\"})]}),`\n`,(0,e.jsx)(n.p,{children:`The go-to solution for bringing React from the web to mobile is still React Native. The most popular framework for creating React Native applications is Expo. If you need unified components across web and mobile, you want to check out Tamagui.\n\\u5C06 React \\u4ECE Web \\u8FC1\\u79FB\\u5230\\u79FB\\u52A8\\u7AEF\\u7684\\u9996\\u9009\\u89E3\\u51B3\\u65B9\\u6848\\u4ECD\\u7136\\u662F React Native \\u3002\\u6700\\u6D41\\u884C\\u7684 React Native \\u5E94\\u7528\\u521B\\u5EFA\\u6846\\u67B6\\u662F Expo \\u3002\\u5982\\u679C\\u60A8\\u9700\\u8981\\u8DE8 Web \\u548C\\u79FB\\u52A8\\u7AEF\\u7684\\u7EDF\\u4E00\\u7EC4\\u4EF6\\uFF0C\\u60A8\\u53EF\\u4EE5\\u8003\\u8651 Tamagui \\u3002`}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-VR/AR\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React VR/AR\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u865A\\u62DF\\u73B0\\u5B9E/\\u589E\\u5F3A\\u73B0\\u5B9E\"})]}),`\n`,(0,e.jsx)(n.p,{children:`It's possible to dive into virtual reality or augmented reality with React. To be honest, I haven't used any of these libraries and most are early stage (experimental), but they are the ones I know from the top of my head when it comes to AR/VR in React:\n\\u4F7F\\u7528 React \\u53EF\\u4EE5\\u6DF1\\u5165\\u63A2\\u7D22\\u865A\\u62DF\\u73B0\\u5B9E\\u6216\\u589E\\u5F3A\\u73B0\\u5B9E\\u3002\\u8BF4\\u5B9E\\u8BDD\\uFF0C\\u6211\\u8FD8\\u6CA1\\u7528\\u8FC7\\u8FD9\\u4E9B\\u5E93\\uFF0C\\u800C\\u4E14\\u5B83\\u4EEC\\u5927\\u591A\\u6570\\u90FD\\u5904\\u4E8E\\u65E9\\u671F\\u9636\\u6BB5\\uFF08\\u5B9E\\u9A8C\\u6027\\uFF09\\uFF0C\\u4F46\\u8BF4\\u5230 React \\u4E2D\\u7684 AR/VR\\uFF0C\\u6211\\u6700\\u5148\\u60F3\\u5230\\u7684\\u5C31\\u662F\\u8FD9\\u4E9B\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"react-three-fiber (popular 3d library, however, I have seen VR examples too)\"}),`\n`,(0,e.jsx)(n.li,{children:\"react-three-fiber \\uFF08\\u6D41\\u884C\\u7684 3d \\u5E93\\uFF0C\\u4E0D\\u8FC7\\u6211\\u4E5F\\u89C1\\u8FC7 VR \\u793A\\u4F8B\\uFF09\"}),`\n`,(0,e.jsx)(n.li,{children:`react-360 (archived)\nreact-360 \\uFF08\\u5DF2\\u5B58\\u6863\\uFF09`}),`\n`,(0,e.jsx)(n.li,{children:`aframe-react (not maintained anymore)\naframe-react \\uFF08\\u4E0D\\u518D\\u7EF4\\u62A4\\uFF09`}),`\n`]}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"Design-Prototyping-for-React\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"Design Prototyping for React\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"\\u4E3A React \\u8BBE\\u8BA1\\u539F\\u578B\"})]}),`\n`,(0,e.jsx)(n.p,{children:`If you are coming from a UI/UX background, you may want to use a tool for fast prototyping for new React components, layouts, or UI/UX concepts. Personally I use Figma. For rough yet lightweight sketches, I like to use Excalidraw, others prefer tldraw.\n\\u5982\\u679C\\u60A8\\u6709 UI/UX \\u80CC\\u666F\\uFF0C\\u60A8\\u53EF\\u80FD\\u9700\\u8981\\u4F7F\\u7528\\u4E00\\u4E2A\\u5DE5\\u5177\\u6765\\u5FEB\\u901F\\u4E3A\\u65B0\\u7684 React \\u7EC4\\u4EF6\\u3001\\u5E03\\u5C40\\u6216 UI/UX \\u6982\\u5FF5\\u8FDB\\u884C\\u539F\\u578B\\u8BBE\\u8BA1\\u3002\\u6211\\u4E2A\\u4EBA\\u4F7F\\u7528 Figma \\u3002\\u5BF9\\u4E8E\\u7C97\\u7565\\u4F46\\u8F7B\\u91CF\\u7EA7\\u7684\\u8349\\u56FE\\uFF0C\\u6211\\u559C\\u6B22\\u4F7F\\u7528 Excalidraw \\uFF0C\\u5176\\u4ED6\\u4EBA\\u66F4\\u559C\\u6B22 tldraw \\u3002`}),`\n`,(0,e.jsx)(\"hr\",{}),`\n`,(0,e.jsxs)(\"div\",{align:\"center\",id:\"React-Component-Documentation\",children:[(0,e.jsx)(\"h3\",{align:\"center\",children:\"React Component Documentation\"}),(0,e.jsx)(\"h3\",{align:\"center\",children:\"React \\u7EC4\\u4EF6\\u6587\\u6863\"})]}),`\n`,(0,e.jsx)(n.p,{children:`If you are in charge of writing the documentation for your components, there are various neat React documentation tools out there. I've used Storybook in many projects and have a neutral opinion about it. I've heard good things about these other solutions too:\n\\u5982\\u679C\\u60A8\\u8D1F\\u8D23\\u7F16\\u5199\\u7EC4\\u4EF6\\u6587\\u6863\\uFF0C\\u90A3\\u4E48\\u5E02\\u9762\\u4E0A\\u6709\\u5404\\u79CD\\u7B80\\u6D01\\u7684 React \\u6587\\u6863\\u5DE5\\u5177\\u53EF\\u4F9B\\u9009\\u62E9\\u3002\\u6211\\u5728\\u8BB8\\u591A\\u9879\\u76EE\\u4E2D\\u4F7F\\u7528\\u8FC7 Storybook \\uFF0C\\u5BF9\\u5B83\\u6301\\u4E2D\\u7ACB\\u6001\\u5EA6\\u3002\\u6211\\u4E5F\\u542C\\u8BF4\\u8FC7\\u5176\\u4ED6\\u4E00\\u4E9B\\u89E3\\u51B3\\u65B9\\u6848\\u7684\\u597D\\u8BC4\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Docusaurus  \\u591A\\u5E93\\u8428\\u4E4C\\u65AF\"}),`\n`,(0,e.jsx)(n.li,{children:\"Styleguidist  \\u98CE\\u683C\\u6307\\u5357\"}),`\n`,(0,e.jsx)(n.li,{children:\"React Cosmos\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:`Ultimately, the React ecosystem functions as a flexible framework centered around React. It allows you to make informed choices about which libraries to incorporate, enabling you to start small and add libraries as needed to address specific challenges. Conversely, if React alone meets your requirements, you can maintain a lightweight setup by using just the core library.\n\\u5F52\\u6839\\u7ED3\\u5E95\\uFF0CReact \\u751F\\u6001\\u7CFB\\u7EDF\\u662F\\u4E00\\u4E2A\\u4EE5 React \\u4E3A\\u4E2D\\u5FC3\\u7684\\u7075\\u6D3B\\u6846\\u67B6\\u3002\\u5B83\\u5141\\u8BB8\\u60A8\\u5728\\u9009\\u62E9\\u8981\\u96C6\\u6210\\u7684\\u5E93\\u65F6\\u505A\\u51FA\\u660E\\u667A\\u7684\\u9009\\u62E9\\uFF0C\\u8BA9\\u60A8\\u80FD\\u591F\\u4ECE\\u5C0F\\u5904\\u7740\\u624B\\uFF0C\\u5E76\\u6839\\u636E\\u9700\\u8981\\u6DFB\\u52A0\\u5E93\\u4EE5\\u5E94\\u5BF9\\u7279\\u5B9A\\u6311\\u6218\\u3002\\u76F8\\u53CD\\uFF0C\\u5982\\u679C React \\u672C\\u8EAB\\u5C31\\u80FD\\u6EE1\\u8DB3\\u60A8\\u7684\\u9700\\u6C42\\uFF0C\\u90A3\\u4E48\\u60A8\\u53EF\\u4EE5\\u53EA\\u4F7F\\u7528\\u6838\\u5FC3\\u5E93\\u6765\\u7EF4\\u62A4\\u4E00\\u4E2A\\u8F7B\\u91CF\\u7EA7\\u7684\\u8BBE\\u7F6E\\u3002`})]})}function h(t={}){let{wrapper:n}=t.components||{};return n?(0,e.jsx)(n,{...t,children:(0,e.jsx)(d,{...t})}):d(t)}return b(v);})();\n;return Component;"
    },
    "_id": "blog/react-libraries-2025.mdx",
    "_raw": {
      "sourceFilePath": "blog/react-libraries-2025.mdx",
      "sourceFileName": "react-libraries-2025.mdx",
      "sourceFileDir": "blog",
      "contentType": "mdx",
      "flattenedPath": "blog/react-libraries-2025"
    },
    "type": "BlogPost",
    "slug": "/blog/react-libraries-2025",
    "slugAsParams": "react-libraries-2025",
    "url": "/blog/react-libraries-2025",
    "formattedDate": "May 18, 2025",
    "imageAsParams": "https://heroui.comhttps://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/react-ecosystem-in-2025-20241230100040995.jpg"
  },
  {
    "title": "nodejs基数和偶数版本的区别",
    "description": "当我们去学习nodejs生态的时候，都会遇到nodejs版本要求，我们可能理解为低版本nodejs已经落后了，但是往往有的时候要求却是要我们安装偶数版本，这是为什么呢？",
    "date": "2025-05-27T00:00:00.000Z",
    "tags": [
      "nodejs",
      "nodejs LTS"
    ],
    "author": {
      "name": "JiangBao",
      "avatar": "https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/avatar.png",
      "username": "这家伙很懒，什么也没留下",
      "type": "AuthorProperties",
      "_raw": {}
    },
    "image": "https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/nodejs-version-cover.webp",
    "body": {
      "raw": "\n<img\n  src=\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/nodejs-version-cover.webp\"\n  width={700}\n  height={350}\n  alt=\"nodejs-version\"\n  className=\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"\n/>\n\n### \n\n当我们在学习Nodejs生态时，往往某个库或者框架会要求我们安装nodejs LTS版本，会特地注明偶数版本，这是怎么回事呢？\n\n举例:\n\nPrerequisites\n在安装 Strapi 之前，你的计算机上必须安装以下要求：\n\nNode.js:仅支持 活动 LTS 或维护 LTS 版本（目前支持 v20 和 v22）。不支持 Node 的奇数版本（称为 Node.js 的 \"current\" 版本）（例如 v21、v23）。\n\n非 LTS 的 Node.js 版本（奇数版本）不在 Vite 的 CI 测试范围内\n\n## nodejs版本号区分\n\n  Node.js 有 LTS 系列和 Current 系列，分别对应不同的最新版本号。\n\n### LTS 版本\n\nLTS 版本全称 Long Time Support，即长期支持版本，重点在于稳定性和安全性，每个 LTS 版本的大版本号都是偶数，建议首次下载以及后续的每次升级都选择 LTS 版本，减少开发过程中出现的未知问题。 LTS 版本有 3 个阶段的生命周期：\n\n- Active(活跃阶段)\n  每个从 Current 进入 LTS 的偶数版本，都会有 18 个月的时间被积极维护和升级。\n- Maintenance(维护阶段)\n  活跃阶段达到 18 个月后，会进入为期 12 个月的维护阶段，期间只会进行错误修复和安全补丁。\n- End of Life(结束阶段)\n  简称 EOL ，在维护阶段达到期限之后，该版本进入 EOL 阶段，将不再维护，也就是说，每个 LTS 版本最长会有 30 个月的维护时间，之后将不再进行维护。\n\n\n<img\n  src=\"/blog/nodejs-version-timeline.svg\"\n  width={700}\n  height={350}\n  alt=\"版本的生命周期图（2022-2025）\"\n  className=\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"\n/>\n\n<p className='text-center'>版本的生命周期图（2022-2025）</p>\n\n### Current 版本\n\nCurrent 即最新发布版本，该版本专注于必要功能的开发和现有 API 的完善，具有较短的寿命和更频繁的代码更新。\n你可以在该版本体验到最新功能，也可以能遇到各种意想不到的问题和兼容性要处理。\n通常 Current 版本会在每 6 个月发布一次大版本（特殊情况除外）：\n\n- 偶数版本:\n  每年 4 月份发布新的偶数版本\n- 奇数版本:\n  每年 10 月份发布新的奇数版本\n\n\n### 总结\n\n- current 奇数版本过了6个月的支持期就结束了，同时偶数版本会进入Active LTS 状态，如上图所示\n\n- 看到这里你应该明白了，不管框架或者库要求安装的都是稳定版本，而奇数版本则是提前让node生态去兼容新版api",
      "code": "var Component=(()=>{var u=Object.create;var t=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var L=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),v=(r,n)=>{for(var i in n)t(r,i,{get:n[i],enumerable:!0})},l=(r,n,i,o)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let d of j(n))!g.call(r,d)&&d!==i&&t(r,d,{get:()=>n[d],enumerable:!(o=p(n,d))||o.enumerable});return r};var b=(r,n,i)=>(i=r!=null?u(m(r)):{},l(n||!r||!r.__esModule?t(i,\"default\",{value:r,enumerable:!0}):i,r)),f=r=>l(t({},\"__esModule\",{value:!0}),r);var c=L((y,s)=>{s.exports=_jsx_runtime});var T={};v(T,{default:()=>h,frontmatter:()=>S});var e=b(c()),S={title:\"nodejs\\u57FA\\u6570\\u548C\\u5076\\u6570\\u7248\\u672C\\u7684\\u533A\\u522B\",description:\"\\u5F53\\u6211\\u4EEC\\u53BB\\u5B66\\u4E60nodejs\\u751F\\u6001\\u7684\\u65F6\\u5019\\uFF0C\\u90FD\\u4F1A\\u9047\\u5230nodejs\\u7248\\u672C\\u8981\\u6C42\\uFF0C\\u6211\\u4EEC\\u53EF\\u80FD\\u7406\\u89E3\\u4E3A\\u4F4E\\u7248\\u672Cnodejs\\u5DF2\\u7ECF\\u843D\\u540E\\u4E86\\uFF0C\\u4F46\\u662F\\u5F80\\u5F80\\u6709\\u7684\\u65F6\\u5019\\u8981\\u6C42\\u5374\\u662F\\u8981\\u6211\\u4EEC\\u5B89\\u88C5\\u5076\\u6570\\u7248\\u672C\\uFF0C\\u8FD9\\u662F\\u4E3A\\u4EC0\\u4E48\\u5462\\uFF1F\",date:\"2025-05-27\",image:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/nodejs-version-cover.webp\",tags:[\"nodejs\",\"nodejs LTS\"],author:{name:\"JiangBao\",username:\"\\u8FD9\\u5BB6\\u4F19\\u5F88\\u61D2\\uFF0C\\u4EC0\\u4E48\\u4E5F\\u6CA1\\u7559\\u4E0B\",avatar:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/avatar.png\"}};function a(r){let n={h2:\"h2\",h3:\"h3\",li:\"li\",p:\"p\",ul:\"ul\",...r.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(\"img\",{src:\"https://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/nodejs-version-cover.webp\",width:700,height:350,alt:\"nodejs-version\",className:\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"}),`\n`,(0,e.jsx)(n.h3,{id:\"\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u5F53\\u6211\\u4EEC\\u5728\\u5B66\\u4E60Nodejs\\u751F\\u6001\\u65F6\\uFF0C\\u5F80\\u5F80\\u67D0\\u4E2A\\u5E93\\u6216\\u8005\\u6846\\u67B6\\u4F1A\\u8981\\u6C42\\u6211\\u4EEC\\u5B89\\u88C5nodejs LTS\\u7248\\u672C\\uFF0C\\u4F1A\\u7279\\u5730\\u6CE8\\u660E\\u5076\\u6570\\u7248\\u672C\\uFF0C\\u8FD9\\u662F\\u600E\\u4E48\\u56DE\\u4E8B\\u5462\\uFF1F\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u4E3E\\u4F8B:\"}),`\n`,(0,e.jsx)(n.p,{children:`Prerequisites\n\\u5728\\u5B89\\u88C5 Strapi \\u4E4B\\u524D\\uFF0C\\u4F60\\u7684\\u8BA1\\u7B97\\u673A\\u4E0A\\u5FC5\\u987B\\u5B89\\u88C5\\u4EE5\\u4E0B\\u8981\\u6C42\\uFF1A`}),`\n`,(0,e.jsx)(n.p,{children:'Node.js:\\u4EC5\\u652F\\u6301 \\u6D3B\\u52A8 LTS \\u6216\\u7EF4\\u62A4 LTS \\u7248\\u672C\\uFF08\\u76EE\\u524D\\u652F\\u6301 v20 \\u548C v22\\uFF09\\u3002\\u4E0D\\u652F\\u6301 Node \\u7684\\u5947\\u6570\\u7248\\u672C\\uFF08\\u79F0\\u4E3A Node.js \\u7684 \"current\" \\u7248\\u672C\\uFF09\\uFF08\\u4F8B\\u5982 v21\\u3001v23\\uFF09\\u3002'}),`\n`,(0,e.jsx)(n.p,{children:\"\\u975E LTS \\u7684 Node.js \\u7248\\u672C\\uFF08\\u5947\\u6570\\u7248\\u672C\\uFF09\\u4E0D\\u5728 Vite \\u7684 CI \\u6D4B\\u8BD5\\u8303\\u56F4\\u5185\"}),`\n`,(0,e.jsx)(n.h2,{id:\"nodejs\\u7248\\u672C\\u53F7\\u533A\\u5206\",children:\"nodejs\\u7248\\u672C\\u53F7\\u533A\\u5206\"}),`\n`,(0,e.jsx)(n.p,{children:\"Node.js \\u6709 LTS \\u7CFB\\u5217\\u548C Current \\u7CFB\\u5217\\uFF0C\\u5206\\u522B\\u5BF9\\u5E94\\u4E0D\\u540C\\u7684\\u6700\\u65B0\\u7248\\u672C\\u53F7\\u3002\"}),`\n`,(0,e.jsx)(n.h3,{id:\"lts-\\u7248\\u672C\",children:\"LTS \\u7248\\u672C\"}),`\n`,(0,e.jsx)(n.p,{children:\"LTS \\u7248\\u672C\\u5168\\u79F0 Long Time Support\\uFF0C\\u5373\\u957F\\u671F\\u652F\\u6301\\u7248\\u672C\\uFF0C\\u91CD\\u70B9\\u5728\\u4E8E\\u7A33\\u5B9A\\u6027\\u548C\\u5B89\\u5168\\u6027\\uFF0C\\u6BCF\\u4E2A LTS \\u7248\\u672C\\u7684\\u5927\\u7248\\u672C\\u53F7\\u90FD\\u662F\\u5076\\u6570\\uFF0C\\u5EFA\\u8BAE\\u9996\\u6B21\\u4E0B\\u8F7D\\u4EE5\\u53CA\\u540E\\u7EED\\u7684\\u6BCF\\u6B21\\u5347\\u7EA7\\u90FD\\u9009\\u62E9 LTS \\u7248\\u672C\\uFF0C\\u51CF\\u5C11\\u5F00\\u53D1\\u8FC7\\u7A0B\\u4E2D\\u51FA\\u73B0\\u7684\\u672A\\u77E5\\u95EE\\u9898\\u3002 LTS \\u7248\\u672C\\u6709 3 \\u4E2A\\u9636\\u6BB5\\u7684\\u751F\\u547D\\u5468\\u671F\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`Active(\\u6D3B\\u8DC3\\u9636\\u6BB5)\n\\u6BCF\\u4E2A\\u4ECE Current \\u8FDB\\u5165 LTS \\u7684\\u5076\\u6570\\u7248\\u672C\\uFF0C\\u90FD\\u4F1A\\u6709 18 \\u4E2A\\u6708\\u7684\\u65F6\\u95F4\\u88AB\\u79EF\\u6781\\u7EF4\\u62A4\\u548C\\u5347\\u7EA7\\u3002`}),`\n`,(0,e.jsx)(n.li,{children:`Maintenance(\\u7EF4\\u62A4\\u9636\\u6BB5)\n\\u6D3B\\u8DC3\\u9636\\u6BB5\\u8FBE\\u5230 18 \\u4E2A\\u6708\\u540E\\uFF0C\\u4F1A\\u8FDB\\u5165\\u4E3A\\u671F 12 \\u4E2A\\u6708\\u7684\\u7EF4\\u62A4\\u9636\\u6BB5\\uFF0C\\u671F\\u95F4\\u53EA\\u4F1A\\u8FDB\\u884C\\u9519\\u8BEF\\u4FEE\\u590D\\u548C\\u5B89\\u5168\\u8865\\u4E01\\u3002`}),`\n`,(0,e.jsx)(n.li,{children:`End of Life(\\u7ED3\\u675F\\u9636\\u6BB5)\n\\u7B80\\u79F0 EOL \\uFF0C\\u5728\\u7EF4\\u62A4\\u9636\\u6BB5\\u8FBE\\u5230\\u671F\\u9650\\u4E4B\\u540E\\uFF0C\\u8BE5\\u7248\\u672C\\u8FDB\\u5165 EOL \\u9636\\u6BB5\\uFF0C\\u5C06\\u4E0D\\u518D\\u7EF4\\u62A4\\uFF0C\\u4E5F\\u5C31\\u662F\\u8BF4\\uFF0C\\u6BCF\\u4E2A LTS \\u7248\\u672C\\u6700\\u957F\\u4F1A\\u6709 30 \\u4E2A\\u6708\\u7684\\u7EF4\\u62A4\\u65F6\\u95F4\\uFF0C\\u4E4B\\u540E\\u5C06\\u4E0D\\u518D\\u8FDB\\u884C\\u7EF4\\u62A4\\u3002`}),`\n`]}),`\n`,(0,e.jsx)(\"img\",{src:\"/blog/nodejs-version-timeline.svg\",width:700,height:350,alt:\"\\u7248\\u672C\\u7684\\u751F\\u547D\\u5468\\u671F\\u56FE\\uFF082022-2025\\uFF09\",className:\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"}),`\n`,(0,e.jsx)(\"p\",{className:\"text-center\",children:\"\\u7248\\u672C\\u7684\\u751F\\u547D\\u5468\\u671F\\u56FE\\uFF082022-2025\\uFF09\"}),`\n`,(0,e.jsx)(n.h3,{id:\"current-\\u7248\\u672C\",children:\"Current \\u7248\\u672C\"}),`\n`,(0,e.jsx)(n.p,{children:`Current \\u5373\\u6700\\u65B0\\u53D1\\u5E03\\u7248\\u672C\\uFF0C\\u8BE5\\u7248\\u672C\\u4E13\\u6CE8\\u4E8E\\u5FC5\\u8981\\u529F\\u80FD\\u7684\\u5F00\\u53D1\\u548C\\u73B0\\u6709 API \\u7684\\u5B8C\\u5584\\uFF0C\\u5177\\u6709\\u8F83\\u77ED\\u7684\\u5BFF\\u547D\\u548C\\u66F4\\u9891\\u7E41\\u7684\\u4EE3\\u7801\\u66F4\\u65B0\\u3002\n\\u4F60\\u53EF\\u4EE5\\u5728\\u8BE5\\u7248\\u672C\\u4F53\\u9A8C\\u5230\\u6700\\u65B0\\u529F\\u80FD\\uFF0C\\u4E5F\\u53EF\\u4EE5\\u80FD\\u9047\\u5230\\u5404\\u79CD\\u610F\\u60F3\\u4E0D\\u5230\\u7684\\u95EE\\u9898\\u548C\\u517C\\u5BB9\\u6027\\u8981\\u5904\\u7406\\u3002\n\\u901A\\u5E38 Current \\u7248\\u672C\\u4F1A\\u5728\\u6BCF 6 \\u4E2A\\u6708\\u53D1\\u5E03\\u4E00\\u6B21\\u5927\\u7248\\u672C\\uFF08\\u7279\\u6B8A\\u60C5\\u51B5\\u9664\\u5916\\uFF09\\uFF1A`}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:`\\u5076\\u6570\\u7248\\u672C:\n\\u6BCF\\u5E74 4 \\u6708\\u4EFD\\u53D1\\u5E03\\u65B0\\u7684\\u5076\\u6570\\u7248\\u672C`}),`\n`,(0,e.jsx)(n.li,{children:`\\u5947\\u6570\\u7248\\u672C:\n\\u6BCF\\u5E74 10 \\u6708\\u4EFD\\u53D1\\u5E03\\u65B0\\u7684\\u5947\\u6570\\u7248\\u672C`}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{id:\"\\u603B\\u7ED3\",children:\"\\u603B\\u7ED3\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"current \\u5947\\u6570\\u7248\\u672C\\u8FC7\\u4E866\\u4E2A\\u6708\\u7684\\u652F\\u6301\\u671F\\u5C31\\u7ED3\\u675F\\u4E86\\uFF0C\\u540C\\u65F6\\u5076\\u6570\\u7248\\u672C\\u4F1A\\u8FDB\\u5165Active LTS \\u72B6\\u6001\\uFF0C\\u5982\\u4E0A\\u56FE\\u6240\\u793A\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"\\u770B\\u5230\\u8FD9\\u91CC\\u4F60\\u5E94\\u8BE5\\u660E\\u767D\\u4E86\\uFF0C\\u4E0D\\u7BA1\\u6846\\u67B6\\u6216\\u8005\\u5E93\\u8981\\u6C42\\u5B89\\u88C5\\u7684\\u90FD\\u662F\\u7A33\\u5B9A\\u7248\\u672C\\uFF0C\\u800C\\u5947\\u6570\\u7248\\u672C\\u5219\\u662F\\u63D0\\u524D\\u8BA9node\\u751F\\u6001\\u53BB\\u517C\\u5BB9\\u65B0\\u7248api\"}),`\n`]}),`\n`]})]})}function h(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,{...r,children:(0,e.jsx)(a,{...r})}):a(r)}return f(T);})();\n;return Component;"
    },
    "_id": "blog/nodejs-version.mdx",
    "_raw": {
      "sourceFilePath": "blog/nodejs-version.mdx",
      "sourceFileName": "nodejs-version.mdx",
      "sourceFileDir": "blog",
      "contentType": "mdx",
      "flattenedPath": "blog/nodejs-version"
    },
    "type": "BlogPost",
    "slug": "/blog/nodejs-version",
    "slugAsParams": "nodejs-version",
    "url": "/blog/nodejs-version",
    "formattedDate": "May 27, 2025",
    "imageAsParams": "https://heroui.comhttps://cdn.jsdelivr.net/gh/afuryboy/my-pic@main/blog/nodejs-version-cover.webp"
  }
]